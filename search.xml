<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Sympoisum 20 Years Nano Optics Pioneer Interview Collections</title>
      <link href="/2025/02/15/E_%E7%89%A9%E7%90%86_20YearsNanoOptics/"/>
      <url>/2025/02/15/E_%E7%89%A9%E7%90%86_20YearsNanoOptics/</url>
      
        <content type="html"><![CDATA[<h2 id="Interview-with-Shanhui-Fan"><a href="#Interview-with-Shanhui-Fan" class="headerlink" title="Interview with Shanhui Fan"></a>Interview with Shanhui Fan</h2><p><img src="https://shanhui.people.stanford.edu/sites/g/files/sbiybj23376/files/styles/large/public/media/image/headshot_1.jpg?itok=4vLdwe9a" style="zoom:80%;"></p><p>This interview with Shanhui Fan from Stanford University, USA, was recorded as part of the 2017 international symposium “20 Years Nano-Optics”.</p><p><strong>Q:  What was your research field around the year 2000?</strong><br><strong>A</strong>: Around year 2000. I was mostly working on photonic crystals.  so uh that was probably at the peak of the photonic crystal research. So i was doing a lot of uh theoretical calculation for hana crystal and trying to figure out how to use these kind of structures for what kind of applications.</p><p><strong>Q: What conferences did you attend?</strong><br><strong>A</strong>: There was a series of conferences on photonic crystal called pacs. These are uh attended mostly by photonic crystal communities and started in 1997, and so i’ve attended quite a few of those.  That was one of the uh probably the focal point of many of the discussions about the field.</p><p><strong>Q: What were that big dreams around that time?</strong><br><strong>A</strong>: So that was a time when I guess people were really fascinated by internet , optical communications and information processing. So there were a lot of discussions about trying to use photonic crystal structures for information processing, and even dreaming about maybe computing based on photonic crystals. The idea was to have very small optical components on the single wavelength scale and to integrate them on a trip in a large scale way. So that one can do powerful optical information processing </p><p><strong>Q: Were farbrication and theoretical limitations known to people?</strong><br><strong>A</strong>: It’s maybe come little by little as the right way to say it.  Certainly there were a lot of challenges on fabrication on getting accurate devices. But also there are fundamental questions about whether, for example, computing entirely based on optics actually make sense or not. So that i think gradually influenced how people do their research in that field at the time.</p><p><strong>Q: How closely did you relate the theory of photonic crystals with that of near-field optics?</strong><br><strong>A</strong>: I guess at least my own thought was more like looking at photonic crystal structures almost entirely from a band structure perspective, and it’s only later that gradually it becomes useful for me to also think about the individual scatter picture,  and to gradually evolve into not just looking at,  you know, periodic structure,  but looking at individual antenna structure.  That get a lot closer to perhaps what the some linear fourier optics community has been doing, but the fundamental point is that they are in the end all based on maxwell equations. So there are tremendous amount of connection and similarities. But when when i at the time when i was uh just finishing graduate school of course when i adopt one viewpoint and then over years you gradually learn the other viewpoints.</p><p><strong>Q: What are your thoughts about metamaterials?</strong><br><strong>A</strong>: In 2000, I attended a conference where John Pendry gave a talk on perfect lens and that left a very strong impression on me. I thought it was even then I thought it was a very interesting idea that you could rethink about electromagnetism, in a very fundamental way.  And I think that really conceptually at least was a very exciting time to to think in that way.</p><p><strong>Q: Don’t you think that photonic crystals are also metamaterials?</strong><br><strong>A</strong>:  Many of these concepts photonic crystal or metal materials of course very closely related. These days, I like to tell my students that there are nothing that’s 100 new and there are nothing that’s 100 old.  So there are also, there’s always a connection to existing concept, but these new twists are important because they give you a perspective. They’re allow to think of something that may be different,  so that’s how I would say that I wouldn’t make a very strict distinction between photonic crystal, metal material.  Because I do think there are a lot of similarities between the two fields and the two concepts.  But by emphasizing effective electromagnetic response, like permittivity and permeability, that really give a interesting perspective, that’s not completely transparent from a band structure description. </p><p><strong>Q: Where do you see the future of nano-optics? More in basic research or in applications?</strong><br><strong>A</strong>: I think it’s both, and in fact one of the things that has always been exciting about nano optics is the fact that there is a very close connection between fundamental studies and application.  Uh many of the early work that we do we did photonic crystal were motivated by application consideration, even the very early work in thinking about control spontaneous emission was motivated by either light emitting diodes or a laser application. So what i would think is that the exciting aspects of it has always been at this interface between fundamental studies and with the prospect of trying to impact practical technology.</p><p><strong>Q: What are the remaining grand challenges in theoretical nano-optics?</strong><br><strong>A</strong>: I would say that in terms of grand challenges.  Uh optics or electromagnetic magnetics is such a fundamental interaction of the uh of physics, and in fact it’s probably among the two interactions that we have actual access to the other one being gravity. But we can’t really control gravity uh very well. So it’s probably the most controllable fundamental interactio. So in that regard I think there are many many areas that the ability to control electromagnetism will have impact on something, that i’ve been personally very excited about. Uh is in thinking about the energy implication of controlling electromagnetism and also in thinking about the interface between for example uh photonics or electromagnetism and thermodynamics. And I think there are a lot of interesting things and fundamental concepts in thinking about light from a thermodynamic point of view,  and trying to understand how nanophotonic structure can influence that kind of understanding. So i think there are still a lot of interesting basic work,  that can be done.  And many of these work will have practical technological implicationst. </p><p><strong>Q: What would you think might be the next breakthrough?</strong><br><strong>A</strong>: The general property of thinking about using light to control energy flow and to impact., for example a wide range of energy conversion technology.  I think that actually would be quite interesting area to think about in the future. That’s at least one of the areas that I found it to be particularly exciting. For example, we usually think about light as carrying energy that of course is true but light also carry entropy. And how do we influence these balance of entropy and energy flow in light.  We have a very important implication ranging from thinking about solar energy conversion to cooling and to many other energy devices in a most fundamental level. Most of our energy come from the sun which is light and so the ability to think about light as a thermodynamic object I think will play a very significant role in thinking about the many of these technology. </p><p><strong>Q: How would you describe nano-optics?</strong><br><strong>A</strong>: Certainly what really I think is interesting to me about nano optics is the ability that you can shape light, you can use subwavelengthstructure to shape light,  and that gives you a possibility to control light in a way that was difficult to think about before you.</p><h2 id="Interview-with-Gerd-Leuchs"><a href="#Interview-with-Gerd-Leuchs" class="headerlink" title="Interview with Gerd Leuchs"></a>Interview with Gerd Leuchs</h2><p><img src="https://www.mpg.de/11651486/original-1634109727.webp?t=eyJ3aWR0aCI6MzUwLCJoZWlnaHQiOjQ1MCwiZml0IjoiY3JvcCIsImZpbGVfZXh0ZW5zaW9uIjoid2VicCIsInF1YWxpdHkiOjg2LCJvYmpfaWQiOjExNjUxNDg2fQ%3D%3D--ad5ab1f017ab058f6c6df1f9f0200a29ccb74592" alt=""></p><p><strong>Q: Were you aware of scanning near-field microscopy and single-molecule spectroscopy in their early days?</strong><br><strong>A</strong>: Yes sure I worked at the Max Planck institute for quantum optics， and so we had, we heard about this, we had talks about this, so I was well aware of this.</p><p><strong>Q: What were you working on when SNOM was invented in the early 80s?</strong><br><strong>A</strong>: Let me see, at this time I was working on multiphoton excitations in atoms and multiphoton ionization, looking for distributions of photoelectrons, but in neighboring groups， were doing， were closer to the to this field.  But at that time， I did not see the immediate connection to it between the SNOM and the quantum optics world partly. Because the SNOM in the early days had lots of losses. There were, it was very inefficient and this kills most of the quantum optics effects. So we were well aware of this but I thought at that time it has just impact on resolution in microscopy, which at that time was not the immediate impact to quantum optics issues.</p><p><strong>Q: Can you think of the early dreams at the interface between quantum optics  and these fields?</strong><br><strong>A</strong>: So I think nano optics is the challenging side of classical optics in the very small describing the three-dimensional properties of space, where the spatial temporal modes of light to live and quantum optics needs all this, and the only thing that come that is new in quantum optics, is the uh is the excitation in the modes how they are described and correlation between modes. So basically, if you want to do optics at the advanced level, you need the combination of optics and quantum optics or nano optics , and quantum optics, and I think as a challenging thing in the future in this wider field of quantum technology from technologies, where we will now have this flagship at the European level. So I think the challenge in this regime would be the quantum internet that people are talking about, where you need both aspects to in their full power, you need to, you need to couple two level systems, small, small atoms, whatever they are um small quantum dots, and this is, this is, and then you need to couple to them, you need to couple them efficiently, that’s very important in for quantum technologies. So yes, I think this you need both aspects in and in the full in the maximum possible performance.</p><p><strong>Q: How did you start your work on doughnut beams and tight focusing?</strong><br><strong>A</strong>: So first of all, there was a gap. Because at some point I decided to leave academia and I went to switzerland to accompany , and after five years. I had the offer to come here to Erlangen, that was in (19)94. And so then was my first co-worker, we were looking at possible things that we could do. And he dug out a paper on sunderluminescence, which was a hot topic at the time, and people had not understood. so, so, so luminescence, if you remember, is sending in a spherical acoustic wave to a focus in water, and in the very center there’s a small bubble, and inside the bubble there was some blue light, and people were wondering how to explain this. And then I noticed that this bubble is much much smaller than the wavelengths. And then I was thinking how can this be, and the so my co-worker thought maybe we can go into the field and help um discover what sonar luminescence is about. But my heart was more on the side of optics and light. And I was thinking how about, how is this in optics and uh I mean in optics we have the resolution limit of given by the wavelengths. And so how does this uh compare and then we were thinking of what nature gives us, and we were thinking about the emission, emission and absorption of an atom. And if you look at spontaneous emission then initially the atom is inside the state. Eventually, it’s in the ground state and the photon is far away and thinking of the word spontaneous emission, <strong>many people would have thought that maybe you kind of reverse this because spontaneous mission has this stochastic connotation and stochastic uh statistical events you cannot reverse. Um, but when we thought about it became clear that this is just a quantum mechanical unitary evolution, and that should it should be possible to go backwards. And of course, if you go backwards, all the light energy of a single photon goes into the atom, and eventually, it comes to a point much much to a volume, much much closer than the uh, much much smaller than the wavelengths cubed</strong>, and we were thinking oh my god okay. Here’s a possibility to concentrate much much light, much smaller on a volume, much smaller than a wavelength cube, and so then we were thinking of what kinds of experiments we could do, and then in the early days, we were thinking ah this will be difficult um. But then we found that even if you don’t have an atom, but you take guidance from this reversed spontaneous emission that tells you that you should send in a dipole wave with the proper vectorial properties of light, and then we did the calculation. We discovered that focusing a dipole wave gives the focus which is as small as you can get and this you can never achieve. Even if you focus in only, so ideally, you have to come from the full solid angle, but even if you come from one half space with a lens, um linear polarization wouldn’t do this job. You have to have a different polarization, so how this is, how we got into this, and apparently we were the first people to think in this direction, and then we also showed this experiment, so that was basically a spin-off from this initial thought how about reversing spontaneous emission, and only when we had this first funding from max planck, when our institute was 10-year trek, then I decided to take the challenge and start the real project.</p><p><strong>Q: When did you hear the word nano-optics first?</strong><br><strong>A</strong>: Let me see, so I think I mean the the names nano and optics separately. I’ve probably heard a long time ago, but in connection I probably heard this when I came back from industry so this would be the early 90s or mid 90s early 90s .</p><p><strong>Q: How would you describe nano-optics today?</strong><br><strong>A</strong>: So if you say that nano optics is everything in optics which happens in on a on a scale smaller than a wavelength, one might think on such a small scale things are more or less homogeneous enough, not much, not much is happening. But that is not true. <strong>So when you have interaction with atoms, small plasmonic particles you have all this interaction all the near field aspects</strong> , you can have, you can have zeros of the field, which are surrounded by vortices. And these are structures which can be much much smaller than the wavelengths, and can be highly complex, and interesting, and have uh interesting um consequences. And the interesting thing I find is that, in this old field of optics, one discovers new things again and again. So if I think about my own research, so we discovered this focusing is possible in a different better way, and we did this in the we started to think about this in the 90s. More than 100 years after after unstubber, and so many people having thought about light and focusing and vector properties. All books have been written on this, but this was not there, and then another thing that happened more recently is that um an old optics topic is totally eternal reflection, and for a long time. I thought I know everything about it, and then it was between the group of Anatoly zayats Zayats and Ann Rauschenboitel, and and my group, that we understood in different contexts. And in quite different experiments, we understood that in the polarization has a very special property, in, in near the interface, under the condition of total internal reflection. Um, and you can have these spinning fields that we call transverse angular momentum. Um in the evanescent wave, in total internal reflection, which is uh was it was a strong, um it was a strong correlation between the sense of the spinning and the emission direction, which these groups that I mentioned, have now shown that you can make use of this. Um, so this I think is really nice that sometimes. <strong>So this shows you that you can, you can have topics where much research has been done, but if you look at it with fresh eyes, uh you can still discover something that people haven’t recognized before which can have a big impact</strong>.  So then of course, when, when this happens, you go back in literature, you think maybe, maybe we missed something, and so there is the famous paper by Richardson and Wolff from 59 1959, where they describe the field in the vicinity of a focus in great detail, which you could call a nano optics paper because it shows all these very strange, uh, the Poynting vector pointing in all directions, and all these things so describe all this in much detail. It’s a long paper, and in one half sentence, they say by the way there is a spinning field, which spins in a plane containing the propagation direction, which is exactly this transverse angle momentum. But it was just a remark, so they noticed this and the reason they I mean the, the fact that, they wrote this sentence down means that they thought this is something special, but they didn’t discuss it further. They there was, it was not so obvious what this might lead to, and then the next thing is in the seventies, there was a paper by, um, by two French people written in French, and they wanted to have circular polarized microwaves, but they only had a linearly polarized source, and in microwaves not so easy to have to change the polarization. So they took a big prism probably parafine, and send in the microwave from the side so that there was an evanescent wave, and with the proper linear polarization. It produces exactly the spinning field with this transverse angular momentum. I mean not calling it transverse angle momentum, they also didn’t talk about the coupling between the spinning direction, and, the and the, and the possible emission. If this would be a dipole but basically they understood these special polarization dynamics, there so, so i think this often happens that if you, if there’s a breakthrough, and suddenly people think, oh my god, this is really nice, and has consequences. Then if you look in the past people have been very close to this, but, but not really doing the final step. And um, so this I think can also be a lesson. If you want to do something new, when uh, should look at the things that people have done, and uh with a with all the curiosity and the openness that you have and then chances are that you discover something new.</p><p><strong>Q: What do you think the future challenges in nano-optics?</strong><br><strong>A</strong>: So I think there’s, there’s certainly a wide range, and iI probably cannot think of all of these. But one thing that that I’m struggling with at the moment. And I have a small project on this is that, there’s so no luminescence that I started to talk about, was a focus of sound wave in a homogeneous medium, and still you had this effect which this small bubble that was created at a scale which is much smaller than the wavelength of these sound waves. So this we have not achieved in optics yet, and i wonder whether you can do this when you focus to a small plasmonic particle gold bead, an atom.  You have this enhancement, and this near field which is probably a little bit like it, and you can have this structure is much smaller than the wavelengths. But then you have to, have the structure, there the medium is not homogeneous. And if there would be due to some nonlinear interaction, so in the sound in the case of a sound wave says surely some non-linear interaction. If there could be some non-linear interaction, then um in a homogeneous medium. I, my feeling is there could be something, but nobody has looked at that. So we are looking, but we haven’t found yet ultimately. This could even happen in the vacuum, because the vacuum we know is not a void space, we know that if you put enough, in enough energy. You can create electron positron pairs and uh um and you can calculate at which electric field this should happen. And so this is far away from what people can do so far. The new eli project the extreme light infrastructure project of the European union. This is one of their goals so sometime, in the future they hope to do this but maybe it can happen at lower intensities. Then what they think will happen if there is such an enhancement vector. So we, we have an experiment in, not in vacuum. Because then you need so high. So we don’t have the lasers that they have in the eli project. But you can do this in a in a homogeneous non-linear medium like a, like a gas. So, so this I think from myself this is a challenge we are tackling at the moment. We are trying to understand, and uh and, do the experiment. Um, so I think there are some, some loose end if you some things, if you think them through. Then there are some final things missing and uh, so to, to get this, to gain full control of these aspects, is a, is a big challenge, and what I mentioned before this, all these issues associated with this. What people call the quantum internet that has many many aspects, which is, this is full of challenges for for the quantum optic side for the uh, for the nano optic side. <strong>This transverse angular momentum, and directed emission is uh could be a central ingredient to the to this quantum internet</strong>.  So this is, uh, full of challenges. So we kind of build it now, because it has to be has to allow for has to have all this flexibility and of the steering but you also need very low losses you cannot put up with losses you need high efficiency and so that i think is a big challenge </p><p><strong>Q: How would you describe the difference between photonics and optics?</strong><br> <strong>A</strong>: So first of all, I know that different people use it completely differently. So I could describe you what people different people think of photonics, and of optics, which is controversial, or which is not, which is not matching. So for me personally, optics is everything. So optics include classical optics and quantum optics and so. This is, this is everything. Photonics is probably a bit weird because it carries the name of the quantum of light, but in the past during much of my lifetime, it was mostly used by at least initially, by people in solid state physics, where the fact that light is quantized does not play a role. They still call it photonics, so that was kind of like a misnomer, but now things are changing. Also I think if you ask people in Germany and in anglo-saxon countries, you’ve got different answers. So in general things have been changing so much that for me, photonics and optics is two different sides of the same coin, both basically you can use to describe everything that has to do with light.</p><h2 id="Interview-with-Mikhail-Lukin"><a href="#Interview-with-Mikhail-Lukin" class="headerlink" title="Interview with Mikhail Lukin"></a>Interview with Mikhail Lukin</h2><p><img src="https://lukin.physics.harvard.edu/sites/g/files/omnuum6416/files/styles/hwp_4_5__690x865/public/lukin/files/m._lukin_1_1_0.jpg?itok=pmffMqXx" style="zoom:80%;"></p><p><strong>Q: What was the topic of your PhD work and where did you do that?</strong><br><strong>A</strong>: So my phd work was on quantum coherence and interference effects in atomic systems, and the applications in quantum optics. During that time we were exploring how we can manipulate the properties of atomic systems of optical by creating coherent superposition states, and using them for applications like laser silver inversion. So this was in a group of marlon scali texas a m university in college station texas very interesting place, I finished my phd in 1998</p><p><strong>Q: How did you become interested in nano-photonics?</strong><br><strong>A</strong>: First of all, i’m still working with atoms and also others atom-like systems, and I view this kind of interplay between quantum optics, and also kind of modern photonics as a very fruitful playground, in which the two disciplines learn from each other, and influence each other. And certainly you know, I saw my own interest in nanophotonics came um from kind of ideas to try basically do atomic physics better in new ways to create functionality, to create new quantum optical devices, to explore new quantum optical effects, to improve control over interactions between light, and atoms, and for those kind of applications, for doing science in these areas. <strong>It turns out that nanophotonic devices offer pretty unique possibilities</strong>, and that what motivated me to think about nanophotonics, to think about plasmonics, to think about photonic crystals. And, uh I really see that you know already now, uh this interplay between quantum optics, and you know nanophotonics really opens completely new frontiers. <strong>And I think we are now only at the beginning of we just tipped you know the iceberg you know so see the top of the iceberg in terms of the things which are about to come.</strong></p><p><strong>Q: Do you remember when your first encountered scanning near-field microscopy?</strong><br><strong>A</strong>: Not exactly the day, but you know it is I mean definitely. So as when i was a, when i was a graduate student, when going to uh optics quantum, and photonics conferences, I realized at the time that you know there is a kind of a community being developed, which is you know really kind of looking, how to kind of explore the possibilities of really isolating individual particles, individual molecules. And it became clear with me over time that you know basically, know borrowing, you know some ideas from this community, and also supplementing it with kind of. Let’s say the ideas for coherent control, which originate from the field of quantum optics uh, is a very promising new direction, and uh I mean this is the kind of stuff which we’re exploring today right, and I think by doing that not only we basically just borrowing ideas from the field of nanophotonics, and use them for example, building quantum computers, but also we realized that some of the kind of techniques which we developed, and quantum optics, and science can now influence, and are now influencing the nanophotonics field with new applications, such as for example nanoscale sensing emerging from this work </p><p><strong>Q: How would you describe you research field today?</strong><br><strong>A</strong>: So my research is now in the field which can be perhaps called quantum science or quantum science and technology. And basically in this field what we are trying to do is, we are trying to use the control over coherent control over individual quantum neutral particles, individual atoms, individual atom-like systems, to build more and uh complicated uh quantum systems, and you know one example of that is you know building quantum computers. But there is much more for example another direction, that I mentioned involves applications of the systems to build <strong>normal types of sensors</strong>. And you know these sensors you know, potentially allow one to measure things, and you know do things which know just about few years ago, or fought to be completely impossible. And that’s you know the kind of stuff that you are doing</p><p><strong>Q: What comes to your mind when you think of the word nano-optics?</strong><br><strong>A</strong>: So I am uh fascinated by the idea of <strong>breaking a diffraction limit of confining the light down to sub-wavelength dimension</strong>. And what really comes to mind is the possibility of really molding of using this you know interact kind of confinement to really mold the interaction between light and atoms individual atoms in particular. And that’s where at least in my kind of world that’s where nanophotonics really offers unique new possibilities.</p><p><strong>Q: What are the challenges in quantum nano-optics？</strong><br><strong>A</strong>: <strong>I think the key challenge from my point of view is really kind of extending the techniques for kind of confined light confinement and interactions</strong>, uh with atoms to kind of fully coherent, and fully reproducible domain. So basically uh, what you know in my research, we are trying to do now yes, we are trying to basically confront the usually kind of contradictory challenge, challenges of you know basically controllability and scalability. So on one hand, you know we would like to really be able to control uh atoms and photons that level down to the individual quanta, but at the same time would like to have a larger systems kind of practical systems associated of them. So <strong>it’s basically these are two contradictory requirements</strong>, where you know nanophotonics can really play the very important role, but you know basically you know what we would like to do is really you know be able to squeeze systems down to subwavelength dimensions, while without losing the control, without using kind of reproducibility, such that we can potentially you know have hundreds thousands of millions the systems coupled to each other, or used for applications. From my point of view, nano-photonics is still very young field you know, and I think the the best is still ahead. So i think  as I said, we just tipped you know see the top of iceberg and there’s a lot to come.</p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>旋转Frame下哈密顿量的表示</title>
      <link href="/2025/01/17/E_%E7%89%A9%E7%90%86_%E6%97%8B%E8%BD%ACFrame%E4%B8%8B%E5%93%88%E5%AF%86%E9%A1%BF%E9%87%8F%E7%9A%84%E8%A1%A8%E7%A4%BA/"/>
      <url>/2025/01/17/E_%E7%89%A9%E7%90%86_%E6%97%8B%E8%BD%ACFrame%E4%B8%8B%E5%93%88%E5%AF%86%E9%A1%BF%E9%87%8F%E7%9A%84%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<p>在量子光学中，我们会经常对哈密顿量作基矢变换，使得哈密顿量的形式更加简洁，比如Rotating Frame的变换，或这相互作用表象。我将在这个笔记中对这个变换作简单推导，并给出JC系统的例子来说明如何操作。</p><h2 id="Rotating-Frame可以看做是线性、幺正的基矢变换"><a href="#Rotating-Frame可以看做是线性、幺正的基矢变换" class="headerlink" title="Rotating Frame可以看做是线性、幺正的基矢变换"></a>Rotating Frame可以看做是线性、幺正的基矢变换</h2><p>Rotating Frame其实就是相当于做了一次线性的、幺正的基矢变换，假设这个变换表示为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.735ex" height="2.428ex" role="img" focusable="false" viewBox="0 -1051 767 1073"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>，那么在这个变换下，哈密顿量的变换过程为</p><script type="math/tex; mode=display">H \longrightarrow U H U+i \hbar \dot{U} U^{\dagger}=\tilde{H}</script><p>从薛定谔方程出发，</p><script type="math/tex; mode=display">i\hbar \partial_{t}\psi=\hat{H}\psi</script><p>由于变换的幺正性，因此<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="8.649ex" height="2.563ex" role="img" focusable="false" viewBox="0 -1051 3822.7 1133"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="msup" transform="translate(767,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(854.2,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2020" d="M182 675Q195 705 222 705Q234 705 243 700T253 691T263 675L262 655Q262 620 252 549T240 454V449Q250 451 288 461T346 472T377 461T389 431Q389 417 379 404T346 390Q327 390 288 401T243 412H240V405Q245 367 250 339T258 301T261 274T263 225Q263 124 255 -41T239 -213Q236 -216 222 -216H217Q206 -216 204 -212T200 -186Q199 -175 199 -168Q181 38 181 225Q181 265 182 280T191 327T204 405V412H201Q196 412 157 401T98 390Q76 390 66 403T55 431T65 458T98 472Q116 472 155 462T205 449Q204 452 204 460T201 490T193 547Q182 619 182 655V675Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2262.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3318.7,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g></g></g></svg></mjx-container>，因此可以在薛定谔方程两边同时左乘<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.735ex" height="2.428ex" role="img" focusable="false" viewBox="0 -1051 767 1073"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>，并在右边添加单位变换</p><script type="math/tex; mode=display">i\hbar\hat{U}\partial_{t}\psi=\hat{U}\hat{H}(\hat{U}^{\dagger}\hat{U})\psi</script><p>根据求导规则</p><script type="math/tex; mode=display">\partial_{t}(\hat{U}\psi)=\partial_{t}(\hat{U})\psi+\hat{U}\partial_{t}\psi</script><p>通过添加单位变换，并综合式子（3）可以得到</p><script type="math/tex; mode=display">\begin{aligned}\partial_{t}(\hat{U}\psi)&=\partial_{t}(\hat{U})(\hat{U}^{\dagger}\hat{U})\psi+\hat{U}\partial_{t}\psi\\&=\partial_{t}(\hat{U})(\hat{U}^{\dagger}\hat{U})\psi-\frac{i}{\hbar}\hat{U}\hat{H}(\hat{U}^{\dagger}\hat{U})\psi\\&=-\frac{i}{\hbar}\left[\hat{U}\hat{H}\hat{U}^{\dagger}+i\hbar (\partial_{t}\hat{U})\hat{U}^{\dagger})\right]\hat{U}\psi\\\implies \partial_{t}\tilde{\psi}&=-\frac{i}{\hbar}\hat{\tilde{H}}\tilde{\psi}\end{aligned}</script><p>这里我们定义了新表象下的哈密顿量和量子态：</p><script type="math/tex; mode=display">\hat{\tilde{H}}=\hat{U}\hat{H}\hat{U}^{\dagger}+i\hbar (\partial_{t}\hat{U})\hat{U}^{\dagger}), \quad \tilde{\psi}=\hat{U}\psi</script><p>相互作用表象是一种特殊的基矢变换，即将哈密顿量分为两部分</p><script type="math/tex; mode=display">\hat{H}=\hat{H}_{0}+\hat{V}</script><p>原来的薛定谔方程在相互作用下表示为</p><script type="math/tex; mode=display">\frac{\partial \tilde{\psi }}{\partial t}=-\frac{i }{\hbar }\hat{V}_{I} \tilde{\psi }</script><p>这里</p><script type="math/tex; mode=display">\begin{aligned}\hat{V}_{I}&=e^{i\hat{H}_{0}t}\hat{V}e^{-i\hat{H}_{0}t}\\\tilde{\psi}&=e^{i\hat{H}_{0}t}\psi\end{aligned}</script><p>因此通过定义<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="10.851ex" height="2.688ex" role="img" focusable="false" viewBox="0 -1106.2 4796 1188.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1044.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2100.6,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(499,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(345,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(513.8,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(864,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mi" transform="translate(1612.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1973.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(2473.6,0)"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"></path></g></g></g></g></g></svg></mjx-container>，就可以按照Rotating Frame的方式得到一样的结果</p><script type="math/tex; mode=display">\begin{aligned}& \hat{V}_I=\hat{U} H \hat{U}^{\dagger}+i \hbar\left(\partial_t \hat{U}\right) \hat{U}^{\dagger} \\& =\hat{U}\left(\hat{H}_0+\hat{V}\right) \hat{U}^{\dagger}+i \hbar\left(\partial_t e^{i \hat{H}_0 t / \hbar}\right) \hat{U}^{\dagger} \\& =\hat{U}\left(\hat{H}_0+\hat{V}\right) \hat{U}^{\dagger}-\hat{H}_0 \\& =\hat{U} \tilde{V} \hat{U}^{\dagger}\end{aligned}</script><h2 id="JC系统哈密顿量的Rotating-Frame的推导"><a href="#JC系统哈密顿量的Rotating-Frame的推导" class="headerlink" title="JC系统哈密顿量的Rotating Frame的推导"></a>JC系统哈密顿量的Rotating Frame的推导</h2><p>我们以JC系统的哈密顿量为例来说明：</p><script type="math/tex; mode=display">\hat{H}=\hbar \omega_e \hat{\sigma}_{+} \hat{\sigma}_{-}+\hbar \omega_0 \hat{a}^{\dagger} \hat{a}+g\left(\hat{a}^{\dagger} \hat{\sigma}_{-}+\hat{a} \hat{\sigma}_{+}\right)</script><p>可以分为耦合部分和非耦合部分，</p><script type="math/tex; mode=display">\begin{aligned}& \hat{H}=\hat{H}_0+\hat{H}_V \\& \hat{H}_0=\hbar \omega_e \hat{\sigma}_{+} \hat{\sigma}_{-}+\hbar \omega_0 \hat{a}^{\dagger} \hat{a} \\& \hat{H}_V=g\left(\hat{a}^{\dagger} \hat{\sigma}_{-}+\hat{a} \hat{\sigma}_{+}\right)\end{aligned}</script><p>按照 Rotating frame 的定义（注意我们这里对于算符的变换作了改变，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.673ex;" xmlns="http://www.w3.org/2000/svg" width="2.756ex" height="3.051ex" role="img" focusable="false" viewBox="0 -1051 1218.2 1348.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(854.2,506.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2020" d="M182 675Q195 705 222 705Q234 705 243 700T253 691T263 675L262 655Q262 620 252 549T240 454V449Q250 451 288 461T346 472T377 461T389 431Q389 417 379 404T346 390Q327 390 288 401T243 412H240V405Q245 367 250 339T258 301T261 274T263 225Q263 124 255 -41T239 -213Q236 -216 222 -216H217Q206 -216 204 -212T200 -186Q199 -175 199 -168Q181 38 181 225Q181 265 182 280T191 327T204 405V412H201Q196 412 157 401T98 390Q76 390 66 403T55 431T65 458T98 472Q116 472 155 462T205 449Q204 452 204 460T201 490T193 547Q182 619 182 655V675Z"></path></g></g><g data-mml-node="mn" transform="translate(716,-297.3) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> 和前面 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.735ex" height="2.428ex" role="img" focusable="false" viewBox="0 -1051 767 1073"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container> 是等价的。</p><script type="math/tex; mode=display">\begin{aligned}& \hat{H}_{\mathrm{rot}}=i \hbar \frac{\partial \hat{U}_1^{\dagger}}{\partial t} \hat{U}_1+\hat{U}_1^{\dagger} \hat{H} \hat{U}_1 \\& =i \hbar \frac{\partial \hat{U}_1^{\dagger}}{\partial t} \hat{U}_1+\hat{U}_1^{\dagger}\left(\hat{H}_0+\hat{H}_V\right) \hat{U}_1\end{aligned}</script><p>这里 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="12.893ex" height="2.842ex" role="img" focusable="false" viewBox="0 -1106.2 5698.7 1256.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mn" transform="translate(716,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1397.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2453.1,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(499,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msub" transform="translate(1123,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(513.8,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mn" transform="translate(864,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mi" transform="translate(2390.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2751.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(3251.6,0)"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"></path></g></g></g></g></g></svg></mjx-container> ，我们需要分别计算上面等式右边的三项</p><ul><li>第一项为：<script type="math/tex; mode=display">\begin{aligned}& i \hbar \frac{\partial \hat{U}_1^{\dagger}}{\partial t} \hat{U}_1 \\& =i \hbar\left[i \hat{H}_0 / \hbar\right] \hat{U}_1^{\dagger} \hat{U}_1 \\& =-\hat{H}_0\end{aligned}</script></li><li>第二项为<script type="math/tex; mode=display">\hat{U}_1^{\dagger} \hat{H}_0 \hat{U}_1=e^{i \hat{H}_0 t} \hat{H}_0 e^{-i \hat{H}_0 t}=\hat{H}_0</script></li><li>第三项为:</li></ul><p>为了计算右边的式子： <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.673ex;" xmlns="http://www.w3.org/2000/svg" width="7.789ex" height="3.051ex" role="img" focusable="false" viewBox="0 -1051 3442.9 1348.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(854.2,506.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2020" d="M182 675Q195 705 222 705Q234 705 243 700T253 691T263 675L262 655Q262 620 252 549T240 454V449Q250 451 288 461T346 472T377 461T389 431Q389 417 379 404T346 390Q327 390 288 401T243 412H240V405Q245 367 250 339T258 301T261 274T263 225Q263 124 255 -41T239 -213Q236 -216 222 -216H217Q206 -216 204 -212T200 -186Q199 -175 199 -168Q181 38 181 225Q181 265 182 280T191 327T204 405V412H201Q196 412 157 401T98 390Q76 390 66 403T55 431T65 458T98 472Q116 472 155 462T205 449Q204 452 204 460T201 490T193 547Q182 619 182 655V675Z"></path></g></g><g data-mml-node="mn" transform="translate(716,-297.3) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(1218.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(513.8,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(864,-150) scale(0.707)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2675.9,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container> ，需要用到下面的数学展开：</p><script type="math/tex; mode=display">e^{-\alpha \hat{A}} \hat{B} e^{\alpha \hat{A}}=\hat{B}-\alpha[\hat{A}, \hat{B}]+\frac{\alpha^2}{2}[\hat{A},[\hat{A}, \hat{B}]]+\ldots \frac{(-\alpha)^n}{2}[\hat{A},[\ldots,[\hat{A}, \hat{B}]] \ldots .]</script><p>我们只需要考虑不对易的量，比如 $\hat{\sigma}<em>{+}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 1000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g></g></g></svg></mjx-container>\hat{\sigma}</em>{-}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 1000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">和</text></g></g></g></svg></mjx-container>\hat{a}^{\dagger}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 1000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g></g></g></svg></mjx-container>\hat{a}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="36.199ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 16000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">对</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">易</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">就</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">不</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">需</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">要</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">考</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">虑</text></g><g data-mml-node="mi" transform="translate(11000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(12000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(13000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">了</text></g><g data-mml-node="mi" transform="translate(14000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">计</text></g><g data-mml-node="mi" transform="translate(15000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g></g></g></svg></mjx-container>e^{i \omega_0 \hat{a}^{\dagger} \hat{a} t} \hat{a} e^{-i \omega_0 \hat{a}^{\dagger} \hat{a} t}$ ，我们先要计算对易关系：</p><script type="math/tex; mode=display">\begin{aligned}& {\left[\hat{a}^{\dagger} \hat{a}, \hat{a}\right]=\hat{a}^{\dagger} \hat{a} \hat{a}-\hat{a} \hat{a}^{\dagger} \hat{a}=\hat{a}^{\dagger} \hat{a} \hat{a}-\left(\hat{a}^{\dagger} \hat{a}+1\right) \hat{a}=-\hat{a}} \\& {\left[\hat{a}^{\dagger} \hat{a},\left[\hat{a}^{\dagger} \hat{a}, \hat{a}\right]\right]=\left[\hat{a}^{\dagger} \hat{a},-\hat{a}\right]=(-1)^2 \hat{a}}\end{aligned}</script><p>可知第 n 项为：</p><script type="math/tex; mode=display">\left[\hat{a}^{\dagger} \hat{a},\left[\ldots,\left[\hat{a}^{\dagger} \hat{a}, \hat{a}\right]\right] \ldots .\right]=(-1)^n \hat{a}</script><p>因此</p><script type="math/tex; mode=display">\begin{aligned}& e^{i \omega_0 \hat{a}^{\dagger} \hat{a} t} \hat{a} e^{-i \omega_0 \hat{a}^{\dagger} \hat{a} t}= \\& =\hat{a}+i \omega_0 t\left[\hat{a}^{\dagger} \hat{a}, \hat{a}\right]+\frac{\left(i \omega_0 t\right)^2}{2!}\left[\hat{a}^{\dagger} \hat{a},\left[\hat{a}^{\dagger} \hat{a}, \hat{a}\right]\right]+\ldots \\& =\hat{a}-i \omega_0 t \hat{a}+\frac{\left(-i \omega_0 t\right)^2}{2!} \hat{a}+\frac{\left(-i \omega_0 t\right)^3}{3!} \hat{a} \ldots \frac{\left(-i \omega_0 t\right)^n}{n!} \hat{a} \\& =\hat{a} e^{-i \omega_0 t}\end{aligned}</script><p>同理由于</p><script type="math/tex; mode=display">\begin{aligned}& {\left[\hat{a}^{\dagger} \hat{a}, \hat{a}^{\dagger}\right]=\hat{a}^{\dagger} \hat{a} \hat{a}^{\dagger}-\hat{a}^{\dagger} \hat{a}^{\dagger} \hat{a}=\hat{a}^{\dagger} \hat{a} \hat{a}^{\dagger}-\hat{a}^{\dagger}\left(\hat{a} \hat{a}^{\dagger}-1\right)=\hat{a}^{\dagger}} \\& {\left[\hat{a}^{\dagger} \hat{a},\left[\hat{a}^{\dagger} \hat{a}, \hat{a}^{\dagger}\right]\right]=\left[\hat{a}^{\dagger} \hat{a}, \hat{a}^{\dagger}\right]=\hat{a}^{\dagger}}\end{aligned}</script><p>可知第 n 项为：</p><script type="math/tex; mode=display">\left[\hat{a}^{\dagger} \hat{a},\left[\ldots,\left[\hat{a}^{\dagger} \hat{a}, \hat{a}^{\dagger}\right]\right] \ldots .\right]=\hat{a}^{\dagger}</script><script type="math/tex; mode=display">\begin{aligned}& e^{i \omega_0} \hat{a}^{\dagger} \hat{a} t \hat{a}^{\dagger} e^{-i \omega_0} \hat{a}^{\dagger} \hat{a} t= \\& =\hat{a}^{\dagger}+i \omega_0 t\left[\hat{a}^{\dagger} \hat{a}, \hat{a}^{\dagger}\right]+\frac{\left(i \omega_0 t\right)^2}{2!}\left[\hat{a}^{\dagger} \hat{a},\left[\hat{a}^{\dagger} \hat{a}, \hat{a}^{\dagger}\right]\right]+\ldots \\& =\hat{a}^{\dagger}+i \omega_0 t \hat{a}^{\dagger}+\frac{\left(i \omega_0 t\right)^2}{2!} \hat{a}^{\dagger}+\frac{\left(i \omega_0 t\right)^3}{3!} \hat{a}^{\dagger} \ldots \frac{\left(i \omega_0 t\right)^n}{n!} \hat{a}^{\dagger} \\& =\hat{a}^{\dagger} e^{i \omega_0 t}\end{aligned}</script><p>按照同样的做法，可以得到</p><script type="math/tex; mode=display">\begin{aligned}& e^{i \omega_e \hat{\sigma}_{+} \hat{\sigma}_{-} t} \hat{\sigma}_{-} e^{-i \omega_e \hat{\sigma}_{+} \hat{\sigma}_{-} t}=\hat{\sigma}_{-} e^{-i \omega_e t} \\& e^{i \omega_e \hat{\sigma}_{+} \hat{\sigma}_{-} t} \hat{\sigma}_{+} e^{-i \omega_e \hat{\sigma}_{+} \hat{\sigma}_{-} t}=\hat{\sigma}_{+} e^{i \omega_e t}\end{aligned}</script><p>这样就得到了：</p><script type="math/tex; mode=display">\hat{U}_1^{\dagger} \hat{H}_V \hat{U}_1=g\left(\hat{a}^{\dagger} \hat{\sigma}_{-} e^{-i\left(\omega_e-\omega_0\right) t}+\hat{a} \hat{\sigma}_{+} e^{i\left(\omega_e-\omega_0\right) t}\right)</script><p>因此最后的哈密顿量为</p><script type="math/tex; mode=display">\begin{aligned}& \hat{H}_{\mathrm{rot}}=i \hbar \frac{\partial \hat{U}_1^{\dagger}}{\partial t} \hat{U}_1+\hat{U}_1^{\dagger}\left(\hat{H}_0+\hat{H}_V\right) \hat{U}_1 \\& =-\hat{H}_0+\hat{H}_0+g\left(\hat{a}^{\dagger} \hat{\sigma}_{-} e^{-i\left(\omega_e-\omega_0\right) t}+\hat{a} \hat{\sigma}_{+} e^{i\left(\omega_e-\omega_0\right) t}\right) \\& =g\left(\hat{a}^{\dagger} \hat{\sigma}_{-} e^{-i\left(\omega_e-\omega_0\right) t}+\hat{a} \hat{\sigma}_{+} e^{i\left(\omega_e-\omega_0\right) t}\right)\end{aligned}</script><p>因此，对于Rotating Frame的哈密顿量，我们可以只关注<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.673ex;" xmlns="http://www.w3.org/2000/svg" width="8.587ex" height="3.051ex" role="img" focusable="false" viewBox="0 -1051 3795.5 1348.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(854.2,506.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2020" d="M182 675Q195 705 222 705Q234 705 243 700T253 691T263 675L262 655Q262 620 252 549T240 454V449Q250 451 288 461T346 472T377 461T389 431Q389 417 379 404T346 390Q327 390 288 401T243 412H240V405Q245 367 250 339T258 301T261 274T263 225Q263 124 255 -41T239 -213Q236 -216 222 -216H217Q206 -216 204 -212T200 -186Q199 -175 199 -168Q181 38 181 225Q181 265 182 280T191 327T204 405V412H201Q196 412 157 401T98 390Q76 390 66 403T55 431T65 458T98 472Q116 472 155 462T205 449Q204 452 204 460T201 490T193 547Q182 619 182 655V675Z"></path></g></g><g data-mml-node="mn" transform="translate(716,-297.3) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(1218.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(513.8,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mi" transform="translate(864,-150) scale(0.707)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g><g data-mml-node="msub" transform="translate(2675.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mo" transform="translate(432.3,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mn" transform="translate(716,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container>，前两项始终会相互抵消，就像相互作用哈密顿量一样。</p><p>实际处理时，我们可能也会重新定义$\hat{U}<em>1=e^{-i\hat{H}</em>{\omega<em>{e}}t/\hbar}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="29.224ex" height="2.161ex" role="img" focusable="false" viewBox="0 -750 12917 955"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">让</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">整</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">系</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">统</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">都</text></g><g data-mml-node="mi" transform="translate(8000,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(8759,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9244,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(9605,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(10134,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(10495,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10840,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(11440,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(11917,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g></g></g></svg></mjx-container>\omega</em>{e}$的频率下：</p><script type="math/tex; mode=display">\hat{H}_{\omega_{e}}=\hbar \omega_e \hat{\sigma}_{+} \hat{\sigma}_{-}+\hbar \omega_e \hat{a}^{\dagger} \hat{a}</script><p>此时系统的哈密顿量应该表示为</p><script type="math/tex; mode=display">\begin{aligned}& \hat{H}_{\mathrm{rot}}=i \hbar \frac{\partial \hat{U}_1^{\dagger}}{\partial t} \hat{U}_1+\hat{U}_1^{\dagger}\left(\hat{H}_0+\hat{H}_V\right) \hat{U}_1 \\& =-\hat{H}_0+\hat{H}_0+\hbar(\omega_{0}-\omega_{e})\hat{a}^{\dagger} \hat{a}+g\left(\hat{a}^{\dagger} \hat{\sigma}_{-} e^{-i\left(\omega_e-\omega_0\right) t}+\hat{a} \hat{\sigma}_{+} e^{i\left(\omega_e-\omega_0\right) t}\right) \\& =\hbar(\omega_{0}-\omega_{e})\hat{a}^{\dagger} \hat{a}+g\left(\hat{a}^{\dagger} \hat{\sigma}_{-} e^{-i\left(\omega_e-\omega_0\right) t}+\hat{a} \hat{\sigma}_{+} e^{i\left(\omega_e-\omega_0\right) t}\right)\end{aligned}</script>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quantum Physics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>典型单光子源以及光子波形</title>
      <link href="/2024/10/28/E_%E7%89%A9%E7%90%86_%E5%B8%B8%E8%A7%81%E5%8D%95%E5%85%89%E5%AD%90%E6%BA%90%E7%A7%8D%E7%B1%BB/"/>
      <url>/2024/10/28/E_%E7%89%A9%E7%90%86_%E5%B8%B8%E8%A7%81%E5%8D%95%E5%85%89%E5%AD%90%E6%BA%90%E7%A7%8D%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Quantum-Optics"><a href="#Quantum-Optics" class="headerlink" title="Quantum #Optics"></a>Quantum #Optics</h1><p>本人的研究领域一直是和光子的时域波形有关，因此也需要将目前光量子系统中的常见光子波形进行一个总结。<br>目前的单光子源类型可以分为三类<sup><a href="#fn_ref1" id="reffn_ref1">ref1</a></sup> ：</p><ul><li>衰减激光</li><li>预报光子</li><li>On-demand的单光子源<br>下面分别进行简单的说明。</li></ul><h2 id="1）-衰减激光"><a href="#1）-衰减激光" class="headerlink" title="1） 衰减激光"></a>1） 衰减激光</h2><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20250211235023.png" alt="衰减激光"></p><p>产生单光子源的最简单的方法是，将激光不断的衰减，使得其光强非常弱，最后只剩下一两个光子。激光是一种经典光，用相干态<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="2.957ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1307 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(918,0)"><path data-c="27E9" d="M55 732Q56 739 61 744T75 750Q85 750 92 740Q95 733 186 494T278 250T187 6T92 -240Q85 -250 75 -250Q67 -250 62 -245T55 -232Q55 -227 145 11Q236 248 236 250T145 489Q55 727 55 732Z"></path></g></g></g></svg></mjx-container> ，当<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="5.596ex" height="1.532ex" role="img" focusable="false" viewBox="0 -666 2473.6 677"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(917.8,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="mn" transform="translate(1973.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>时我们近似认为其是一个Fock态的单光子，即</p><script type="math/tex; mode=display">|\alpha\approx 1\rangle\approx |1\rangle</script><p>当然，相干态的光子性质和真正的Fock态光子还是有很大区别的，这样的光子的品质也不够好。<br>这种衰减激光产生的光子，时域波形就是激光的波形，一般近似用高斯波形来描述。</p><h2 id="2）预报类型的单光子源"><a href="#2）预报类型的单光子源" class="headerlink" title="2）预报类型的单光子源"></a>2）预报类型的单光子源</h2><p>第二类被广泛采用的是，预报类型的单光子源。这类光子源需要先产生纠缠的光子对，通过测量光子对中的一个光子，从而预报另外一个光子的存在。产生的光子，往往是频率纠缠、路径纠缠、偏振纠缠的。</p><p>产生纠缠光子对的物理过程主要有<strong>四波混频</strong>和<strong>参量下转换</strong>。</p><h3 id="SPDC过程"><a href="#SPDC过程" class="headerlink" title="SPDC过程"></a>SPDC过程</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20250211235037.png" alt="SPDC"><br>最早采用的产生光子对的方法是SPDC过程，利用二阶非线性，利用经典的光bump非线性晶体，如BBO晶体，产生两个纠缠的光子对，光子的频率、动量需要守恒</p><script type="math/tex; mode=display">\omega_{\text{bump}}=\omega_{s}+\omega_{i}</script><script type="math/tex; mode=display">k_{\text{bump}}=k_{s}+k_{i}</script><p>当然，SPDC过程有三种，他们的区别是（来自维基百科介绍）：</p><blockquote><p>If the signal and idler photons share the same polarization with each other and with the destroyed pump photon it is deemed Type-0 SPDC;if the signal and idler photons share the same polarization to each other, but are orthogonal to the pump polarization, it is Type-I SPDC; and if the signal and idler photons have perpendicular polarizations, it is deemed Type II SPDC.</p></blockquote><p><strong>总结一下：</strong></p><p><strong>Type-0</strong>类型：光子对和Bump光也是偏振相同的<br><strong>Type-I</strong>类型：光子对的偏振是简并的，和Bump光垂直<br><strong>Type-II</strong>类型：光子对的偏振是不简并，和Bump光垂直</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Snipaste_2025-02-12_00-04-09.png" alt="三种不同的SPDC过程"></p><p>其输出的光子对的频率波函数 $f(\omega<em>{1},\omega</em>{2})$, 一般表示为sinc函数</p><script type="math/tex; mode=display">f\left(\omega_1, \omega_2\right) \propto F_{\text {bump }}\left(k_1+k_2\right) \operatorname{sinc}\left(\frac{1}{2}\left(k_3-k_1-k_2\right) L\right) F_{\text {fliter }}\left(k_1, k_2\right)</script><p>$F<em>{\text {bump }}\left(k_1+k_2\right)<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="28.014ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 12382 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">示</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">经</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">典</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5000,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(5429,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6001,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6879,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7382,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">光</text></g><g data-mml-node="mi" transform="translate(8382,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(9382,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">光</text></g><g data-mml-node="mi" transform="translate(10382,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">谱</text></g><g data-mml-node="mi" transform="translate(11382,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g></g></g></svg></mjx-container> \operatorname{sinc} \left(\frac{1}{2}\left(k_3-k_1-k_2\right) L\right) <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="20.362ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 9000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">则</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">相</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">匹</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">配</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">条</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">件</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g></g></g></svg></mjx-container>F</em>{\text {fliter }}\left(k_1, k_2\right)<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="76.923ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 34000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">示</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">额</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">外</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">滤</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">波</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">函</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(9000,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">很</text></g><g data-mml-node="mi" transform="translate(11000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">多</text></g><g data-mml-node="mi" transform="translate(12000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(13000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">候</text></g><g data-mml-node="mi" transform="translate(14000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(15000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">了</text></g><g data-mml-node="mi" transform="translate(16000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">得</text></g><g data-mml-node="mi" transform="translate(17000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">到</text></g><g data-mml-node="mi" transform="translate(18000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">解</text></g><g data-mml-node="mi" transform="translate(19000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">析</text></g><g data-mml-node="mi" transform="translate(20000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">解</text></g><g data-mml-node="mi" transform="translate(21000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(22000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">大</text></g><g data-mml-node="mi" transform="translate(23000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">家</text></g><g data-mml-node="mi" transform="translate(24000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">也</text></g><g data-mml-node="mi" transform="translate(25000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">会</text></g><g data-mml-node="mi" transform="translate(26000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(27000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">高</text></g><g data-mml-node="mi" transform="translate(28000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">斯</text></g><g data-mml-node="mi" transform="translate(29000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">函</text></g><g data-mml-node="mi" transform="translate(30000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(31000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">来</text></g><g data-mml-node="mi" transform="translate(32000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">代</text></g><g data-mml-node="mi" transform="translate(33000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">替</text></g></g></g></svg></mjx-container>sinc$函数，即</p><script type="math/tex; mode=display">f\left(\omega_1, \omega_2\right) \propto F_{\text {bump }}\left(k_1+k_2\right) \operatorname{exp}\left(-\frac{\Gamma}{2}\left(k_3-k_1-k_2\right)^2 \right) F_{\text {fliter }}\left(k_1, k_2\right)</script><p>有时候我们可以近似用高斯函数来近似描述整个双光子谱</p><script type="math/tex; mode=display">f\left(\omega_1, \omega_2\right) \propto \operatorname{exp}\left(-\frac{\Gamma}{2}\left(k_3-k_1-k_2\right)^2 \right)</script><p>特别是在一些特殊情况下，我们可以用<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.005ex" height="1.645ex" role="img" focusable="false" viewBox="0 -717 444 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g></g></g></svg></mjx-container>函数来描述</p><script type="math/tex; mode=display">f\left(\omega_1, \omega_2\right)=\delta(\omega_{3}-\omega_{1}-\omega_{2})</script><h3 id="四波混频过程"><a href="#四波混频过程" class="headerlink" title="四波混频过程"></a>四波混频过程</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20250211235046.png" alt="FWM"><br>这是一个三阶非线性过程，满足的能量守恒关系为</p><script type="math/tex; mode=display">\omega_1+\omega_2=\omega_s+\omega_p</script><p>其他描述也和前面的三波混频类似。</p><h3 id="Cascaded-Emission"><a href="#Cascaded-Emission" class="headerlink" title="Cascaded Emission"></a>Cascaded Emission</h3><p>参量下转换、四波混频都是要依靠材料整体的性质，即二阶非线性或者三阶非线性。还有一类单光子源，是依靠原子或者原子团的多能级系统。例如可以通过两个pump光来pump一个四能级系统，并依靠其向下能级的Cascaded Emission <sup><a href="#fn_ref2" id="reffn_ref2">ref2</a></sup></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20250211234643.png" alt="Cascaded Emission"></p><h2 id="3）on-demand类型单光子源"><a href="#3）on-demand类型单光子源" class="headerlink" title="3）on-demand类型单光子源"></a>3）on-demand类型单光子源</h2><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20250211235509.png" alt="On-demand type"></p><p>on-demand类型单光子源，通过一个二能级系统的辐射来产生单光子。</p><ol><li>其可以是实际的原子、离子系统，一般通过光晶格来囚禁和操控单个Emitter。</li><li>也可以是一些人工的二能级系统<sup><a href="#fn_ref3" id="reffn_ref3">ref3</a></sup>，特别是一些固态的单量子系统，具有可集成的优势，比如量子点、分子、色心等。<br>这些二能级系统的Emitter，往往会和Cavity, Waveguide等其他微纳结构结合，实现对发光的多个维度的调控。</li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><sup><a href="#fn_ref1" id="reffn_ref1">ref1</a></sup>  B. Lounis and M. Orrit, Single-photon sources, Rep. Prog. Phys. <strong>68</strong>, 1129 (2005).<br><sup><a href="#fn_ref2" id="reffn_ref2">ref2</a></sup>  B. Srivathsan, G. K. Gulati, A. Cerè, B. Chng, and C. Kurtsiefer, Reversing the Temporal Envelope of a Heralded Single Photon using a Cavity, Physical Review Letters <strong>113</strong>, 163601 (2014).<br><sup><a href="#fn_ref3" id="reffn_ref3">ref3</a></sup> I. Aharonovich, D. Englund, and M. Toth, Solid-state single-photon emitters, Nature Photon <strong>10</strong>, 10 (2016).</p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何减少科研中的错误</title>
      <link href="/2024/09/05/E_%E7%89%A9%E7%90%86_%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E7%A7%91%E7%A0%94%E4%B8%AD%E7%9A%84%E9%94%99%E8%AF%AF/"/>
      <url>/2024/09/05/E_%E7%89%A9%E7%90%86_%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E7%A7%91%E7%A0%94%E4%B8%AD%E7%9A%84%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="写作-文章"><a href="#写作-文章" class="headerlink" title="写作 #文章"></a>写作 #文章</h1><p>本人是一个容易犯错的人，低级错误很多，关键错误也不少。<br>这些错误，给我造成了各种困扰、麻烦，也不能保证在将来不会让我粉身碎骨。</p><p>我的标题是<strong>如何减少</strong>，而不是 <strong>如何避免</strong>，因为我已经知道，错误是不可避免的。<br>我非常想避免这些错误，所以用这个笔记，来让自己梳理一下，如何才能避免各种各样的错误。</p><p>生活中我还有其他的各种错误，这里我主要想强调的是科研中的错误。当然，要避免错误，就得从生活中的一些小事情做事，做到尽量严谨、滴水不漏。</p><h2 id="如何改正心态"><a href="#如何改正心态" class="headerlink" title="如何改正心态"></a>如何改正心态</h2><h3 id="不要潜意识一直认为自己是一个容易犯错的人"><a href="#不要潜意识一直认为自己是一个容易犯错的人" class="headerlink" title="不要潜意识一直认为自己是一个容易犯错的人"></a>不要潜意识一直认为自己是一个容易犯错的人</h3><p>一个人，一旦给自己心里暗示，自己哪哪不好，自己的一些不合理的行为，就会变得心安理得。</p><p>一定是，要在心里把自己想象成一个，非常认真、仔细的人。</p><p>有这样正向的、积极的暗示，你才能做的更好。</p><h3 id="要相信即使是计算机也会有Bug，也会罢工，人不是机器，都会犯错"><a href="#要相信即使是计算机也会有Bug，也会罢工，人不是机器，都会犯错" class="headerlink" title="要相信即使是计算机也会有Bug，也会罢工，人不是机器，都会犯错"></a>要相信即使是计算机也会有Bug，也会罢工，人不是机器，都会犯错</h3><p>就像这次巴黎奥运，也会弄错国旗、国歌；大学生的录取通知书，也会有错别字。</p><p>世界是一个巨大的草台班子。</p><p>文章不能保证没有任何小问题，特别是公式多、文献多、文字多的文章。</p><p>所以，出错不是自己一个人的问题，而是一个普遍规律，就像墨菲定律所说的那样，错误如果有可能会发生，那就一定会发生。</p><h2 id="自觉养成好的做事习惯"><a href="#自觉养成好的做事习惯" class="headerlink" title="自觉养成好的做事习惯"></a>自觉养成好的做事习惯</h2><h3 id="做各种事情的时候，都减少随意感"><a href="#做各种事情的时候，都减少随意感" class="headerlink" title="做各种事情的时候，都减少随意感"></a>做各种事情的时候，都减少随意感</h3><p>生活中，要自觉的养成习惯，不随意的做一些事情，比如走路，稍微专注一点，可以让你更加安全；刷牙、洗澡、吃饭，更加细致一点，有利于身体健康；和他人说话，不随意发挥，而是心中有个红线，可以避免冒犯他人。</p><p>科研中也是，不要随意的进行公式推导、浏览文献、书写报告。当你是以一种非常随意的态度来做这些事情的时候，效果一定是非常差的，而且错误的概率的会增大。当你决定做一些事情的时候，一定要专注，不能出错。</p><p>当然，也不要矫枉过正，科研还是需要大胆假设的，也需要小心求证。</p><h3 id="自己觉得模糊的东西，拿不准的东西，写文章的时候一定要慎重"><a href="#自己觉得模糊的东西，拿不准的东西，写文章的时候一定要慎重" class="headerlink" title="自己觉得模糊的东西，拿不准的东西，写文章的时候一定要慎重"></a>自己觉得模糊的东西，拿不准的东西，写文章的时候一定要慎重</h3><h2 id="文章写好以后的检查步骤"><a href="#文章写好以后的检查步骤" class="headerlink" title="文章写好以后的检查步骤"></a>文章写好以后的检查步骤</h2><p>每次文章写好以后，都需要重新再检查很多次。为了效率，应该按照一些固定的步骤来查漏补缺，系统的检查。我觉得可以按照下面的步骤来检查：<br>先检查一些固定的东西：</p><ul><li>[ ] 检查固定位置<ul><li>[ ] 检查标题、作者、机构、通讯作者邮件</li><li>[ ] 单独检查单词拼写</li><li>[ ] 单独检查语法错误</li><li>[ ] 检查参考文献格式</li><li>[ ] 检查参考文献是否引用合理</li><li>[ ] 检查图，Caption</li><li>[ ] 检查每一个公式</li></ul></li><li>[ ] 从头读一遍，看看文章结构、逻辑是否还存在漏洞？</li></ul><h2 id="文章错误合集"><a href="#文章错误合集" class="headerlink" title="文章错误合集"></a>文章错误合集</h2>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
          <category> 写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何减少科研中的错误</title>
      <link href="/2024/09/05/E_%E7%89%A9%E7%90%86_%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E7%9A%84%E6%A3%80%E6%9F%A5%E6%96%87%E7%AB%A0%E4%BB%A5%E5%8F%8A%E6%8A%A5%E5%91%8A/"/>
      <url>/2024/09/05/E_%E7%89%A9%E7%90%86_%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E7%9A%84%E6%A3%80%E6%9F%A5%E6%96%87%E7%AB%A0%E4%BB%A5%E5%8F%8A%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="写作-文章"><a href="#写作-文章" class="headerlink" title="写作 #文章"></a>写作 #文章</h1><p>每次写好文章后，都需要再仔细校对、检查，防止出错。但是每次从头读到尾，是最耗时间也最低效的一种做法。更加高效的做法应该是，按照下面的步骤来进行检查</p><ul><li>[ ] 先整体读一遍，看看是否OK，找出明显的错误<ul><li>[ ] 语法错误</li><li>[ ] 单词拼写错误</li><li>[ ] 各种typo</li></ul></li><li>[ ] 带着目的的去检查特定位置、关键位置<ul><li>[ ] 图是不是排布美观、标号是否有问题、Caption是否准确</li><li>[ ] 参考文献是否引用合理、正确</li><li>[ ] 图的引用是否正确？</li><li>[ ] 公式是否正确</li><li>[ ] 作者姓名、机构、邮箱、致谢部分</li><li>[ ] 出现的每一个字符是不是都进行了说明？</li></ul></li><li>[ ] 从不同的角度来审视自己的文章<ul><li>[ ] 逻辑是否顺畅</li><li>[ ] 核心观点有没有在关键位置点清楚</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
          <category> 写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何写一个好的Response给审稿人</title>
      <link href="/2024/08/09/E_%E7%89%A9%E7%90%86_%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%9A%84Response%E7%BB%99%E5%AE%A1%E7%A8%BF%E4%BA%BA/"/>
      <url>/2024/08/09/E_%E7%89%A9%E7%90%86_%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%9A%84Response%E7%BB%99%E5%AE%A1%E7%A8%BF%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="写作-文章"><a href="#写作-文章" class="headerlink" title="写作 #文章"></a>写作 #文章</h1><p>投稿文章非常关键的一步就是对审稿人的意见进行回复。下面对Response的一些关键点做一个梳理：</p><ul><li>别人问什么，你就答什么，不要顾左右而言它。</li><li>对于别人的一些负面疑问，你要展现的是：<ul><li>我有认真的思考过审稿人提的这个问题，然后才来回答。</li><li>我回答的很在点上，且很全面。</li><li>为了解决审稿人的这个点，我们做了哪些修改</li></ul></li><li>回答的时候，要逐条回答，也就是point by point</li><li>文件格式要清晰好看，可以一眼看清楚，哪一部分是审稿人的问题，哪一部分是你的回答，哪一部分是你的修改。</li><li>学会用粗体、特殊颜色等方式，标注清楚，哪些是审稿人特别关心的问题，但是也不要到处都是粗体。</li></ul><p>对于比较负面的评价：</p><ul><li>表达观点，不同意</li><li>理由：<ul><li>文字表述</li><li>公式、数据支持</li><li>文献文献支持</li><li>结论</li></ul></li></ul><p>面对审稿人的疑问，回答的时候，要保持合适的度：</p><ol><li>如果审稿人问你一个你不太了解的问题，也要想办法尽量了解背景，多写一点，证明你不是敷衍了事。</li><li>如果审稿人问你一个你擅长的问题，你也不能：过度发挥。审稿人问你A，你说A ,B，C我们都知道，这样很容易又引起新的问题，既没有展示你的博学，还让人觉得你是个半吊子，抓不住重点。</li></ol><p>一定要明确的回答的审稿人的问题，下面来列举一些例子：</p><p>一些常见表达：</p><ul><li>可以放在开头的：</li></ul><blockquote><p>We appreciate the referee’ comments on our manuscript. We have carefully studied all the comments, addressed the referee’s concerns, and revised the manuscript accordingly. Below we provide point-by-point responses to the referee’s comments. The actions taken in the revision are indicated in blue.</p></blockquote><ul><li>对于审稿人比较中性的评论：</li></ul><blockquote><p>We thank the referee for the summarizing the essence of our work. In the following, we address the referee’s concerns regarding the technical aspects of our work.</p></blockquote><ul><li>结尾部分</li></ul><blockquote><p>In closing, we believe we have addressed all the points raised by the referee and have revised the manuscript accordingly. We thank the referee for the insightful comments, which have helped to improve the quality of the manuscript and make it read better. We hope the referee find our reply and revision satisfactory</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
          <category> 写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>双粒子系统的非精确量子测量表示</title>
      <link href="/2024/06/26/E_%E7%89%A9%E7%90%86_%E5%8F%8C%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9D%9E%E7%B2%BE%E7%A1%AE%E9%87%8F%E5%AD%90%E6%B5%8B%E9%87%8F%E8%A1%A8%E7%A4%BA/"/>
      <url>/2024/06/26/E_%E7%89%A9%E7%90%86_%E5%8F%8C%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9D%9E%E7%B2%BE%E7%A1%AE%E9%87%8F%E5%AD%90%E6%B5%8B%E9%87%8F%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Quantum-Optics"><a href="#Quantum-Optics" class="headerlink" title="Quantum #Optics"></a>Quantum #Optics</h1><p>对于两个粒子组成的系统，通过测量掉其中一个粒子，会使得另外一个粒子的状态发生变化。如何用量子力学的语言严格的表述呢？测量有多种类型，假设测量时不精确的呢？这是本篇笔记想要总结的。</p><h2 id="单粒子态的测量"><a href="#单粒子态的测量" class="headerlink" title="单粒子态的测量"></a>单粒子态的测量</h2><p>在量子力学中，测量过程可以表示为</p><script type="math/tex; mode=display">\hat{Q}|q_{i}\rangle=q_{i}|q_{i}\rangle</script><p>即通过测量，我们可以获得算符<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="1.79ex" height="2.864ex" role="img" focusable="false" viewBox="0 -1072 791 1266"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mo" transform="translate(478.8,278) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>的本征值 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="1.749ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 773 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container>,如果量子态处在叠加态</p><script type="math/tex; mode=display">|\psi \rangle =\sum _i \psi _i |q_i\rangle ,\psi _i=|\psi \rangle  \langle q_i|</script><p>根据量子力学的原理，我们测量某个量子态<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="2.982ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1318 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"></path></g><g data-mml-node="mo" transform="translate(929,0)"><path data-c="27E9" d="M55 732Q56 739 61 744T75 750Q85 750 92 740Q95 733 186 494T278 250T187 6T92 -240Q85 -250 75 -250Q67 -250 62 -245T55 -232Q55 -227 145 11Q236 248 236 250T145 489Q55 727 55 732Z"></path></g></g></g></svg></mjx-container>，测量得到相应本征态的概率为</p><script type="math/tex; mode=display">P_i=\left| \psi _i\right| {}^2</script><p>同时测量以后，系统也由原来的叠加态塌缩到一个确定的状态</p><script type="math/tex; mode=display">|\psi \rangle \longrightarrow |q_i\rangle</script><p>也可以定义测量投影算符</p><script type="math/tex; mode=display">\hat{P}= |q_i\rangle\langle q_i|</script><p>测量过程的完整表示为</p><script type="math/tex; mode=display">\hat{P} |\psi \rangle = |q_i\rangle \langle q_i| \sum _n \psi _n |q_n\rangle=\psi _i |q_i\rangle</script><p>或者直接写出归一化的末态</p><script type="math/tex; mode=display">|\psi \rangle _{\text{measured}}=\frac{\hat{P} |\psi \rangle }{\sqrt{\langle \psi | \hat{P}^{\dagger }\hat{P}   |\psi \rangle}}</script><p>总结一下关键信息:</p><ul><li>测量的概率就是概率幅的模的平方</li><li>测量后的量子态需要重新归一化<h2 id="双粒子态的局域测量"><a href="#双粒子态的局域测量" class="headerlink" title="双粒子态的局域测量"></a>双粒子态的局域测量</h2></li></ul><p>那么对于多粒子态呢？假设考虑两个粒子A，B的量子态，希尔伯特空间表示为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.345ex;" xmlns="http://www.w3.org/2000/svg" width="9.379ex" height="1.891ex" role="img" focusable="false" viewBox="0 -683 4145.5 835.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="48" d="M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z"></path></g></g><g data-mml-node="mi" transform="translate(878,-152.7) scale(0.707)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g><g data-mml-node="mo" transform="translate(1680.6,0)"><path data-c="2297" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM582 471Q531 510 496 523Q446 542 381 542Q324 542 272 519T196 471L389 278L485 375L582 471ZM167 442Q95 362 95 250Q95 137 167 58L359 250L167 442ZM610 58Q682 138 682 250Q682 363 610 442L418 250L610 58ZM196 29Q209 16 230 2T295 -27T388 -42Q409 -42 429 -40T465 -33T496 -23T522 -11T544 1T561 13T574 22T582 29L388 222L196 29Z"></path></g><g data-mml-node="msub" transform="translate(2680.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="48" d="M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z"></path></g></g><g data-mml-node="mi" transform="translate(878,-150) scale(0.707)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g></g></g></g></svg></mjx-container> ,量子态表示为</p><script type="math/tex; mode=display">|\psi \rangle =\sum _{\mu \nu } \psi _{\mu \nu } |\mu \rangle  |\nu \rangle  =\sum _{\mu } |\mu \rangle  |\phi _{\mu }\rangle</script><p>其中</p><script type="math/tex; mode=display">|\phi_{\mu}\rangle=\sum_{\nu}\psi_{\mu\nu}|\nu\rangle \in \mathcal{H}_{B}</script><p> 和单粒子不同，此时<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="3.613ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1597 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msub" transform="translate(278,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1208,0)"><path data-c="27E9" d="M55 732Q56 739 61 744T75 750Q85 750 92 740Q95 733 186 494T278 250T187 6T92 -240Q85 -250 75 -250Q67 -250 62 -245T55 -232Q55 -227 145 11Q236 248 236 250T145 489Q55 727 55 732Z"></path></g></g></g></svg></mjx-container>的“系数”是 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="3.314ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 1464.7 833"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="48" d="M18 487Q18 496 29 517T67 566T127 621T216 665T330 683Q359 683 376 669T397 643T400 622Q400 584 382 488T348 343Q348 342 467 342H587L594 366Q615 440 648 534T690 641Q701 656 723 669T764 683Q783 683 783 672L750 578Q716 485 677 346T625 101Q624 92 623 82T622 65T621 56Q621 20 658 20Q666 20 701 25Q709 52 736 69T785 87Q803 87 803 75T791 44T754 3T685 -33T588 -48Q568 -48 562 -46Q522 -31 522 13V23Q531 129 562 250L569 281L565 280Q561 278 556 277T549 274L438 273H328L321 249Q307 202 275 107T232 0Q219 -16 196 -28T155 -41Q149 -41 145 -39T140 -34T139 -29Q139 -24 148 -3T181 86T233 247Q240 270 240 272Q240 273 194 273H169Q139 273 139 285Q139 295 153 308T187 332Q206 341 236 342L260 343L264 359Q278 414 289 482T300 578Q300 613 260 613H254Q198 613 169 592Q148 578 127 544T104 508Q72 478 37 475Q18 475 18 487Z"></path></g></g><g data-mml-node="mi" transform="translate(878,-150) scale(0.707)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g></g></g></g></svg></mjx-container>中的一个矢量 ，此时需要重新定义Partial projector</p><script type="math/tex; mode=display">\hat{P}(\mu )=|\mu \rangle  \langle \mu |\otimes \hat{I}</script><p>对双粒子态施加Partial 投影算符可以变为</p><script type="math/tex; mode=display">|\psi '\rangle =|\psi \rangle  \hat{P}(\mu )=|\mu \rangle  |\phi _{\mu }\rangle =\sum _{\nu } |\mu \rangle  |\nu \rangle  \psi _{\mu \nu }</script><p>此时的成功率为</p><script type="math/tex; mode=display">P_{\mu }=\langle \psi '| |\psi '\rangle =\langle \mu | |\mu \rangle  \langle \phi _{\mu }| |\phi _{\mu }\rangle =\sum _{\nu } \left| \psi _{\mu \nu }\right| {}^2</script><p>测量后的量子态也是需要进行重新归一化</p><script type="math/tex; mode=display">|\psi '\rangle =|\mu \rangle  \sum _{\nu } |\mu \rangle  |\nu \rangle  \psi _{\mu \nu } |\phi _{\mu }\rangle \longrightarrow \frac{1}{\sqrt{\sum _{\nu '} \left| \psi _{\mu \nu '}\right| {}^2}}</script><p>上述测量过程，也可以直接一步到位</p><script type="math/tex; mode=display">|\psi \rangle _{\text{measured}}=\frac{\hat{P} |\psi \rangle }{\sqrt{\langle \psi | \hat{P}^{\dagger }\hat{P}   |\psi \rangle}}</script><p>因此，我们测量后，相应的量子态仍然是存在的，只是由原来的叠加态变成了确定性的态。</p><h2 id="密度矩阵表示的测量"><a href="#密度矩阵表示的测量" class="headerlink" title="密度矩阵表示的测量"></a>密度矩阵表示的测量</h2><p>上述过程，只是表示了特定量子态的测量，实际的物理系统，不一定是纯态，所以用密度矩阵表示是更加一般性的做法，系统的密度矩阵表示为</p><script type="math/tex; mode=display">\hat{\rho }=\sum _n \mu _n |\psi \rangle _n\langle \psi _n|</script><p>那么测量之后(用算符<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.699ex" height="2.378ex" role="img" focusable="false" viewBox="0 -1051 751 1051"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(486,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>表示)系统的密度矩阵表示为</p><script type="math/tex; mode=display">\hat{\rho }'=\frac{\hat{P} \hat{\rho } \hat{P}^{\dagger }}{\text{tr}\left(\hat{P} \hat{\rho } \hat{P}^{\dagger }\right)}=\frac{\sum _n \hat{P}    \mu _n |\psi \rangle _n\langle \psi _n|\hat{P}^{\dagger }}{\text{tr}\left(\hat{P} \hat{\rho } \hat{P}^{\dagger }\right)}</script><p>比如前面所述的两粒子系统，是一个纯态</p><script type="math/tex; mode=display">\hat{\rho }=\sum _{\mu } \sum _{\mu '} |\mu \rangle |\phi _{\mu }\rangle  \langle \mu '|   \langle \phi _{\mu '}|</script><p>那么我们对粒子1进行测量，测量后的量子态为</p><script type="math/tex; mode=display">\begin{aligned}\hat{\rho}^{\prime} & =\frac{\sum_\mu \sum_{\mu^{\prime}} \hat{P}(\mu)|\mu\rangle\left|\phi_\mu\right\rangle\left\langle\boldsymbol{\phi}_{\mu^{\prime}}\right|\left\langle\mu^{\prime}\right| \hat{P}^{\dagger}(\mu)}{\operatorname{tr}\left[\hat{\rho} \hat{P}^{\dagger} \hat{P}\right]} \\= & \frac{|\mu\rangle\left|\boldsymbol{\phi}_\mu\right\rangle\left\langle\boldsymbol{\phi}_\mu\right|\langle\mu|}{\operatorname{tr}\left[\hat{\rho} \hat{P}^{\dagger} \hat{P}\right]}\end{aligned}</script><p>此时末态仍然是一个纯态。</p><h2 id="非精确测量"><a href="#非精确测量" class="headerlink" title="非精确测量"></a>非精确测量</h2><p>我这里真正想要阐述的是，非精确测量，具体的内容可以参见下面的书</p><blockquote><p>Quantum Noise,  C.W. Gardiner and P. Zoller Chapter 2.</p></blockquote><p>假设我们的探测精度有限，我们不能区分一些结果，此时我们的测量是投影算符的概率和</p><script type="math/tex; mode=display">\hat{M}=\sum _{n=1}^R \alpha _n \hat{P}_n</script><p>其中R表示总的测量算符的个数,</p><script type="math/tex; mode=display">\hat{M} \hat{M}^{\dagger }=\sum _{n=1}^R \left(\alpha _n\right){}^* \left(\hat{P}_n\right){}^{\dagger } \sum _{n'=1}^R \alpha _{n'} \hat{P}_{n'}=\sum _{n=1}^R\left|\alpha _n|^2\hat{P}_n\right.</script><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.596ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 1147.3 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="TeXAtom" transform="translate(673,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container>代表了每一种状态下的概率幅，一般需要归一化表示</p><script type="math/tex; mode=display">\sum _{n=1}^R \left| \alpha _n\right| {}^2=1</script><p>此时，我们的测量过程，应该表示为</p><script type="math/tex; mode=display">\begin{aligned}& \hat{\rho}^{\prime}=\frac{\hat{M}^{\dagger} \hat{\rho} \hat{M}}{\operatorname{tr}\left[\hat{\rho} \hat{M}^{\dagger} \hat{M}\right]} \\& =\frac{\sum_{n=1}^R \alpha_n \hat{P}_n \hat{\rho} \sum_{n^{\prime}=1}^R \alpha_{n^{\prime}}^* \hat{P}_{n^{\prime}}^{\dagger}}{\operatorname{tr}\left[\hat{\rho} \hat{M}^{\dagger} \hat{M}\right]} \\& =\sum_{n=1}^R \sum_{n^{\prime}=1}^R \alpha_n \alpha_{n^{\prime}} \frac{\hat{P}_n \hat{\rho} \hat{P}_{n^{\prime}}^{\dagger}}{\sum_{m=1}^R\left|\alpha_m\right|^2 \operatorname{tr}\left[\hat{\rho} \hat{P}_m\right]}\end{aligned}</script><h2 id="非精确测量后的子系统"><a href="#非精确测量后的子系统" class="headerlink" title="非精确测量后的子系统"></a>非精确测量后的子系统</h2><p>上述推导，通过投影测量的方式，给出了测量后的密度矩阵的表达式，但是我们真正关心的是，测量后，剩下的子系统的状态是什么样的呢？其实此时我们需要再取Partial Trace,还是考虑两粒子系统</p><script type="math/tex; mode=display">\hat{\rho }=\sum _{\mu } \sum _{\mu '} |\mu \rangle |\phi _{\mu }\rangle  \langle \mu '|   \langle \phi _{\mu '}|</script><script type="math/tex; mode=display">\hat{M}=\sum _{\mu=1}^R \alpha _\mu \hat{P}_\mu</script><p>那么测量后，密度矩阵为</p><script type="math/tex; mode=display">\hat{\rho}^{\prime}=\frac{\hat{M}^{\dagger} \hat{\rho} \hat{M}}{\operatorname{tr}\left[\hat{\rho} \hat{M}^{\dagger} \hat{M}\right]}=\frac{\sum_{\mu=1}^R \sum_{\mu^{\prime}=1}^R \alpha_\mu \hat{P}_\mu \hat{\rho} \alpha_{\mu^{\prime}}^* \hat{P}_{\mu^{\prime}}^{\dagger}}{\sum_m\left|\alpha_m\right|^2 \operatorname{tr}\left[\hat{\rho} \hat{P}_m\right]}=\frac{\sum_{\mu=1}^R \sum_{\mu^{\prime}=1}^R \alpha_\mu \alpha_{\mu^{\prime}}^*|\mu\rangle\left|\phi_\mu\right\rangle\left\langle\phi_\mu\right|\left\langle\mu^{\prime}\right|}{\sum_m\left|\alpha_m\right|^2 \sum_v\left|\psi_{\mu v}\right|^2}</script><p>对上述表达式取Partial Trace即可得到粒子2的密度矩阵</p><script type="math/tex; mode=display">\begin{aligned}& \hat{\rho}_{\text {partial }}=\operatorname{tr}_1\left[\hat{\rho}^{\prime}\right]=\sum_{\mu_3}\left\langle\mu_3\left|\frac{\sum_{\mu=1}^R \sum_{\mu^{\prime}=1}^R \alpha_\mu \alpha_{\mu^{\prime}}^*|\mu\rangle\left|\phi_\mu\right\rangle\left\langle\phi_\mu\right|\left\langle\mu^{\prime}\right|}{\sum_{m=1}^R\left|\alpha_m\right|^2 \sum_v\left|\psi_{\mu \nu}\right|^2}\right| \mu_3\right\rangle \\& =\sum_{\mu_3=1}^R \frac{\left|\alpha_{\mu_3}\right|^2\left|\phi_{\mu_3}\right\rangle\left\langle\phi_{\mu_3}\right|}{\sum_{m=1}^R\left|\alpha_m\right|^2 \sum_v\left|\psi_{\mu \nu}\right|^2}\end{aligned}</script><p>如果是精确测量<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.685ex;" xmlns="http://www.w3.org/2000/svg" width="8ex" height="3.063ex" role="img" focusable="false" viewBox="0 -1051 3535.9 1353.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mo" transform="translate(629,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1328.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2384.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(486,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(675,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g></g></g></g></g></svg></mjx-container>我们可以用下面的表达式</p><script type="math/tex; mode=display">\hat{\rho}_{\text {partial }}=\operatorname{tr}_1\left[\frac{\hat{\rho} \hat{P}_\mu}{\operatorname{tr}\left[\hat{\rho} \hat{P}_\mu^{\dagger} \hat{P}_\mu\right]}\right]</script><p>但是如果是非精确测量，我们不能直接写上述的形式，而是应该用标准写法！。</p><h2 id="连续波函数举例"><a href="#连续波函数举例" class="headerlink" title="连续波函数举例"></a>连续波函数举例</h2><p>前面考虑的都是分立的系统，现在来考虑连续变量系统，考虑双粒子1,2的波函数</p><script type="math/tex; mode=display">|\psi\rangle=\iint \psi\left(x_1, x_2\right)\left|x_1\right\rangle\left|x_2\right\rangle</script><p>密度矩阵表示为</p><script type="math/tex; mode=display">\hat{\rho}=\iiint \int \psi\left(x_1, x_2\right) \psi^*\left(x_1^{\prime}, x_2^{\prime}\right)\left|x_1\right\rangle\left|x_2\right\rangle\left\langle x_2^{\prime}\right|\left\langle x_1^{\prime}\right| d x_1 d x_2 d x_1^{\prime} d x_2^{\prime}</script><p>如果对粒子1进行测量，用<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.378ex" height="2.378ex" role="img" focusable="false" viewBox="0 -1051 1051 1051"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g><g data-mml-node="mo" transform="translate(629,257) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>表示</p><script type="math/tex; mode=display">\hat{M}=\int_{x_0-\Delta / 2}^{x_0+\Delta / 2}\left|x_1^{\prime \prime}\right\rangle\left\langle x_1^{\prime \prime}\right| G\left(x_1^{\prime \prime}\right) d x_1^{\prime \prime}</script><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.833ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2136 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(786,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1175,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1747,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>表示探测器在不同位置的置信度。按照标准的做法，测量后的系统应该表示为</p><script type="math/tex; mode=display">\begin{aligned}& \hat{\rho}^{\prime}=\frac{\hat{M}^{\dagger} \hat{\rho} \hat{M}}{\operatorname{tr}\left[\hat{\rho} \hat{M}^{\dagger} \hat{M}\right]} \\& =\frac{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2}\left|x_1^{\prime \prime}\right\rangle\left\langle x_1^{\prime \prime}\left|G\left(x_1^{\prime \prime}\right) d x_1^{\prime \prime} \iiint \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2^{\prime}\right)\right| x_1\right\rangle\left|x_2\right\rangle\left\langle x_2\right|\left\langle x_1^{\prime}\left|d x_1 d x_2 d x_1 d x_2^{\prime} \int_{x_0-\Delta / 2}^{x_0+\Delta / 2}\right| x_1^{\prime \prime \prime}\right\rangle\left\langle x_1^{\prime \prime \prime}\right| G^*\left(x_1^{\prime \prime \prime}\right) d x_1^{\prime \prime \prime}}{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1} \\& =\frac{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} \int_{x_0-\Delta / 2}^{x_0+\Delta / 2} \iint G\left(x_1\right) G^*\left(x_1^{\prime}\right) \psi\left(x_1, x_2\right) \psi^*\left(x_1^{\prime}, x_2^{\prime}\right)\left|x_1\right\rangle\left|x_2\right\rangle\left\langle x_2^{\prime}\right|\left\langle x_1^{\prime}\right| d x_1 d x_2 d x_1^{\prime} d x_2^{\prime}}{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1}\end{aligned}</script><p>最后对测量的系统取Partial Trace</p><script type="math/tex; mode=display">\begin{aligned}& \hat{\rho}_{\text {partial }}=\operatorname{tr}_1\left[\hat{\rho}^{\prime}\right] \\& =\int\left\langle x_1^{\prime \prime}\left|\left[\frac{\int x_{x_0-\Delta / 2}^{x_0+\Delta / 2} \int_{x_0-\Delta / 2}^{x_0+\Delta / 2} \iint G\left(x_1\right) G^*\left(x_1^{\prime}\right) \psi\left(x_1, x_2\right) \psi^*\left(x_1^{\prime}, x_2^{\prime}\right)\left|x_1\right\rangle\left|x_2\right\rangle\left\langle x_2^{\prime}\right|\left\langle x_1^{\prime}\right| d x_1 d x_2 d x_1^{\prime} d x_2^{\prime}}{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1}\right]\right| x_1^{\prime \prime}\right\rangle d x_1^{\prime \prime} \\& =\frac{\iint_{x_0-\Delta / 2}^{x_0+\Delta / 2} \int_{x_0-\Delta / 2}^{x_0+\Delta / 2} \iint G\left(x_1\right) G^*\left(x_1^{\prime}\right) \psi\left(x_1, x_2\right) \psi^*\left(x_1^{\prime}, x_2^{\prime}\right)\left|x_2\right\rangle\left\langle x_2\right| \delta\left(x_1-x_1^{\prime \prime}\right) \delta\left(x_1^{\prime}-x_1^{\prime \prime}\right) d x_1 d x_2 d x_1^{\prime} d x_2^{\prime} d x_1^{\prime \prime}}{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1} \\& =\frac{\iint_{x_0-\Delta / 2}^{x_0+\Delta / 2} \int_{x_0-\Delta / 2}^{x_0+\Delta / 2} \iint \psi\left(x_1, x_2\right) \psi^*\left(x_1^{\prime}, x_2^{\prime}\right)\left|x_2\right\rangle\left\langle x_2^{\prime}\right| \delta\left(x_1-x_1^{\prime \prime}\right) \delta\left(x_1^{\prime}-x_1^{\prime \prime}\right) d x_1 d x_1^{\prime} d x_1^{\prime \prime} d x_2 d x_2^{\prime}}{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1} \\& =\int_{x_0-\Delta / 2}^{x_0+\Delta / 2}\left|G\left(x_1\right)\right|^2 \frac{\iint \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2^{\prime}\right)\left|x_2\right\rangle\left\langle x_2^{\prime}\right| d x_2 d x_2^{\prime} d x_1}{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1} \\& =\int_{x_0-\Delta / 2}^{x_0+\Delta / 2}\left|G\left(x_1\right)\right|^2\left|\psi_{x_1}\right\rangle\left\langle\psi_{x_1}\right| d x_1\end{aligned}</script><p>其中</p><script type="math/tex; mode=display">\left|\psi_{x_1}\right\rangle=\frac{\int \psi\left(x_1, x_2\right) d x_2\left|x_2\right\rangle}{\sqrt{\int_{x_0-\Delta / 2}^{x_0+/ 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1}}</script><h2 id="测量后子系统保真度的计算"><a href="#测量后子系统保真度的计算" class="headerlink" title="测量后子系统保真度的计算"></a>测量后子系统保真度的计算</h2><p>最后补充一下保真度的计算，假设目标量子态为</p><script type="math/tex; mode=display">\left|\psi_{\text {ideal }}\right\rangle=\int f_{\text {ideal }}\left(x_2^{\prime \prime \prime}\right) d x_2^{\prime \prime}\left|x_2^{\prime \prime \prime}\right\rangle</script><p>那么保真度，按照定义，应该表示为</p><script type="math/tex; mode=display">\begin{aligned}& F=\left\langle\psi_{\text {ideal }}\left|\hat{\rho}_{\text {partial }}\right| \psi_{\text {ideal }}\right\rangle \\& =\iint f_{\text {ideal }}\left(x_2^{\prime \prime \prime}\right) f_{\text {ideal }}^*\left(x_2^{\prime \prime \prime}\right)\left\langle x_2^{\prime \prime \prime \prime}\left|\hat{\rho}_{\text {partial }}\right| x_2^{\prime \prime \prime}\right\rangle d x_2^{\prime \prime \prime} d x_2^{\prime \prime \prime \prime} \\& =\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} \frac{\left|G\left(x_1\right)\right|^2}{\text { nor }} \iint f_{\text {ideal }}\left(x_2^{\prime}\right) f_{\text {ideal }}^*\left(x_2\right) \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2^{\prime}\right) d x_2 d x_2^{\prime} d x_1 \\& =\int_{t_{\text {dec }}-t_R / 2}^{t_{\text {dec }}+t_R / 2} \frac{\left|\int f_{\text {ideal }}\left(x_2^{\prime}\right) \psi^*\left(x_1, x_2^{\prime}\right) d \tau_2^{\prime}\right|^2}{\int_{x_0-\Delta / 2}^{x_0+\Delta / 2} G\left(x_1\right) G^*\left(x_1\right) \int \psi\left(x_1, x_2\right) \psi^*\left(x_1, x_2\right) d x_2 d x_1} d x_1\end{aligned}</script><p>或者简化一点</p><script type="math/tex; mode=display">\begin{aligned}F & =\left\langle\psi_{\text {ideal }}\left|\hat{\rho}_{\text {partial }}\right| \psi_{\text {ideal }}\right\rangle \\& =\int_{t_{\text {dec }}-t_R / 2}^{t_{\text {dec }}+t_R / 2}\left|G\left(x_1\right)\right|^2\left\langle\psi_{\text {ideal }}|| \psi_{x_1}\right\rangle\left\langle\psi_{x_1}|| \psi_{\text {ideal }}\right\rangle d x_{1}\end{aligned}</script>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QuantumInformation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献精读以及要点收集</title>
      <link href="/2024/06/10/E_%E7%89%A9%E7%90%86_%E7%BB%8F%E5%85%B8%E5%85%B3%E9%94%AE%E6%96%87%E7%8C%AE%E7%B4%A2%E5%BC%95/"/>
      <url>/2024/06/10/E_%E7%89%A9%E7%90%86_%E7%BB%8F%E5%85%B8%E5%85%B3%E9%94%AE%E6%96%87%E7%8C%AE%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h1 id="学术"><a href="#学术" class="headerlink" title="学术"></a>学术</h1><p>做科研以来，有很多文献需要阅读。有一些经典的文献，比较好记住，因为是大佬的文章，比较容易找，也有一些文章创新性不是很高，但是专业性很足，而且细节很多，是学习知识的好文章。在这个页面，总结一下一些非常经典的、值得丰富阅读的又不容易找到的文章。</p><h1 id="施密特分解"><a href="#施密特分解" class="headerlink" title="施密特分解"></a>施密特分解</h1><p>[1] M. V. Fedorov and N. I. Miklin, Schmidt Modes and Entanglement, Contemporary Physics 55, 94 (2014).<br>（介绍施密特分解的相关知识以及和纠缠的联系）</p><h1 id="Waveguide-QED-方法"><a href="#Waveguide-QED-方法" class="headerlink" title="Waveguide-QED 方法"></a>Waveguide-QED 方法</h1><p>[1] E. V. Stolyarov, <em>Few-Photon Fock-State Wave Packet Interacting with a Cavity-Atom System in a Waveguide: Exact Quantum State Dynamics</em>, Phys. Rev. A <strong>99</strong>, 023857 (2019).</p><h1 id="时域模式"><a href="#时域模式" class="headerlink" title="时域模式"></a>时域模式</h1><p>[1] B. Brecht, D. V. Reddy, C. Silberhorn, and M. G. Raymer, <em>Photon Temporal Modes: A Complete Framework for Quantum Information Science</em>, Phys. Rev. X <strong>5</strong>, 041017 (2015).</p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
          <category> 写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文章写作经验总结</title>
      <link href="/2024/01/17/E_%E7%89%A9%E7%90%86_%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
      <url>/2024/01/17/E_%E7%89%A9%E7%90%86_%E6%96%87%E7%AB%A0%E5%86%99%E4%BD%9C%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="写作​"><a href="#写作​" class="headerlink" title="写作​"></a>写作​</h1><p>之前写文章一直不注重逻辑，以为做科研就是会推导，会计算。当自己开始写文章之后，才发现，做科研绝不仅仅只是推导和计算，还要有物理思想，也要在算之前学会分析某个问题是否有意义。<br>​<br>写文章的过程，是完整的向读者展现自己的科研成果，而不是为了炫技。无论是在题目、摘要，还是正文，目的都是要让别人以最小的代价，知道你做了什么，你想强调什么，你为什么做的牛逼。<br>​<br>最近一边写文章，一边被老板吐槽，幡然醒悟自己以前的一些科研习惯是多么的不好。现在对一些需要注意的点进行总结。</p><h2 id="如何提高文章质量"><a href="#如何提高文章质量" class="headerlink" title="如何提高文章质量"></a>如何提高文章质量</h2><ol><li>写作之前，要先安排好框架，分析逻辑是不是能够站得住脚</li><li>挑选三篇目标杂志的文章，看看别人如何组织背景、摘要、结论</li><li>多看看目标杂志的文章的图，并优化自己的图。<h2 id="摘要部分"><a href="#摘要部分" class="headerlink" title="摘要部分"></a>摘要部分</h2></li></ol><p>一些需要关注的点：</p><ul><li><strong>简洁、通俗易懂</strong>，少用一些不常见的名词来描述你的工作，这样别人不知道你做的是什么。</li><li>第一句一般是背景，也可以是你做的东西。</li><li>要有条理，有层次，每一句话都是有意义的。</li><li>最后一句要说工作的意义或者潜在应用。</li></ul><p>上述是一个常见的，不会出错的大致讨论，实际上要写好一个摘要，还是得自己琢磨背后的逻辑。</p><h2 id="介绍部分"><a href="#介绍部分" class="headerlink" title="介绍部分"></a>介绍部分</h2><ul><li><strong>基本框架</strong>可以写成：<ul><li>大背景是啥。</li><li>问题是啥。</li><li>别人怎么解决。</li><li>解决的不好在哪？/还有什么没解决。</li><li>然后我们提出了···，介绍我们的工作的时候，可以和摘要类似，说法上稍微有点变化就行。</li></ul></li><li>一些<strong>需要避免</strong>的点：<ul><li>一定要注意文献的列举是为了说明工作的背景，但不必一直去罗列别人的东西。即不要天花乱坠的说别人的工作，不要写成related work。一定要注意和自己的工作进行联系和对话，不要跑偏。</li><li>文献非常多，不可能全部引用全，但是在语言表达上，要留有余地，即虽然没有引用，也只是一点小问题，而不是某一大类的文章根本没关注到。</li></ul></li><li>比较<strong>关键</strong>的部分：<ul><li><strong>注意点题</strong>，每一段最后都要落到，我们要做的事情上。</li><li>用关键的语句，指出现有工作的贡献，以及缺点和不足，这些话要反复斟酌，也是审稿人会着重看的东西。</li><li>学会用合适的语言，评价别人的工作。</li><li>逻辑，以及自己的见解，比英文表达更重要。</li><li>注意句子与句子的衔接过渡。</li><li><h2 id="正文部分"><a href="#正文部分" class="headerlink" title="正文部分"></a>正文部分</h2></li></ul></li><li>要有一个逻辑，规划好每一个大的部分应该要完成什么任务。</li><li>然后每一个部分的每一个段落，尽量也有相关的任务，最好是在段落的开头以及结尾说出来这一段要干啥。每一个段落，都是有目的的，是有中心思想的，要让读者能够从一些你的总结性的语言中，知道你每一段是要介绍什么。</li><li>如果文章分成了多个小节，每一节应该都有个过渡以及小总结。</li><li>即使是理论文章，公式也不能太多，将最关键的公式写成行间公式，普通公式就写成行内即可。</li><li>要把复杂的东西，讲简单，保留最核心的东西。</li><li>文章创新点最多两条即可，不要一味的罗列。</li><li>背景介绍要清晰，简单，有说服力。</li><li>图是为你的文字服务的，不要开始描述图。而是说，你有什么要点要展示，那么图的哪些观点可以支持你的观点。</li><li>除非是必要的，不然不要花太多的篇幅讨论别人的已经有的东西，直接一步到位说结论，这才是最重要的。</li><li>注意与文章的主旨互动与服务。</li><li>尽量避免一味的描述、一味的罗列，而是要进行归纳整理。</li></ul><p>一些需要养成的好习惯：</p><ul><li>平时读文章的时候，要有意识的去学习和模仿。</li></ul><h2 id="绘图部分"><a href="#绘图部分" class="headerlink" title="绘图部分"></a>绘图部分</h2><p>绘图也是一门非常重要的技术，我这里先总结一下关键点：<br>（1） </p><h2 id="Cover-Letter部分"><a href="#Cover-Letter部分" class="headerlink" title="Cover Letter部分"></a>Cover Letter部分</h2><h3 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h3><h4 id="第一段，说明文章标题以及主要作者"><a href="#第一段，说明文章标题以及主要作者" class="headerlink" title="第一段，说明文章标题以及主要作者"></a>第一段，说明文章标题以及主要作者</h4><p>格式一、</p><p><strong><em>Cover Letter</em></strong></p><p>Dear Editor,</p><p>We hereby submit the article entitled “Wavepacket interference of two photons through a beam splitter: from temporal entanglement to wavepacket shapin” by XX,YY, and ZZ for consideration as publication in the  XX</p><p>也可以简要说一下内容：</p><p>格式二、</p><p>We are excited to submit a manuscript titled “Passive Photonic Phase Gate via a Two-Level Emitter and Few Cavities” by Z. Tian <em>et al.</em> to be considered for publication in XX. Here we show that ···</p><h4 id="第二段、简要介绍背景以及研究动机"><a href="#第二段、简要介绍背景以及研究动机" class="headerlink" title="第二段、简要介绍背景以及研究动机"></a>第二段、简要介绍背景以及研究动机</h4><p>大背景</p><ul><li>XX  plays an important role in YY，······</li><li>Single photons as flying qubits are ideal in many aspects</li></ul><p>最后点一下当前的困境、未被研究的点。</p><ul><li>XX has not been studied</li><li>XX has not been reported yet</li><li>XX remain unexplored/elusive</li><li>However, the lack of direct interaction··· poses a grand challenge for</li><li>there have been enormous endeavor to resolve the challenge</li><li>One possible way to avoid xxx is to use xxx, which is complicated and challenging to implement in practice. </li><li>Moreover, it has the xx problem. </li><li>In summary, despite of enormous efforts over the past two decades, the problem of xxx persists.</li></ul><h4 id="第三段、-介绍我们做的东西"><a href="#第三段、-介绍我们做的东西" class="headerlink" title="第三段、 介绍我们做的东西"></a>第三段、 介绍我们做的东西</h4><p>先说做了什么</p><ul><li>In our work, we propose a scheme to enhance</li><li>Here, we study the</li></ul><p>然后强调发现在哪：</p><ul><li>We find that ···</li></ul><p>也可以有一些话强调独创性：</p><ul><li>To our knowledge, no such scheme has been presented before</li><li>Our work  <strong>represents a step towards</strong> a broad class of plasmonic devices that <strong>will enable</strong> faster, more  compact optics, communication and computation.</li><li>The results <strong>overcome a long-standing challenge in</strong> constructing spin-controlled quantum emitters under ambient conditions, <strong>opening new possibilities for</strong> tailoring light–matter interactions and designing novel quantum optical devices.</li></ul><h4 id="第四段、工作的创新点以及意义"><a href="#第四段、工作的创新点以及意义" class="headerlink" title="第四段、工作的创新点以及意义"></a>第四段、工作的创新点以及意义</h4><p>说我们工作的最关键创新点在哪：</p><ul><li>we reveal xx</li></ul><ul><li><p>xx are obtained,</p></li><li><p>xx improves</p></li></ul><p>然后简要说明其应用或者对相关领域的影响</p><ul><li><p>which can be used to construct flexible tunable dielectric micro/nano cavity</p></li><li><p>xx is a great platform to engineer</p></li><li><p>our findings may have potential applications for</p></li><li>We believe that this work is important to the field of the rapidly developing quantum photonics and in general quantum information science, and will attract a broad range of researchers. </li></ul><p>最后说我们的工作会引起哪些领域人的兴趣</p><ul><li>we believe this work will be of interest to those working in the fields of nanophotonics, metamaterials, and CQED</li></ul><ul><li>our research will attract the attention of the community from quantum optics to nano-photonics.</li></ul><h4 id="第五段、结尾以及审稿人的介绍"><a href="#第五段、结尾以及审稿人的介绍" class="headerlink" title="第五段、结尾以及审稿人的介绍"></a>第五段、结尾以及审稿人的介绍</h4><p><strong>Five possible reviewers</strong> are provided in the next page.</p><p>We look forward to receiving comments from you in due course.</p><p>Yours faithfully,</p><p>Prof. XX</p><p>单位</p><p>Email: xxx</p><h4 id="第六段、-列出审稿人"><a href="#第六段、-列出审稿人" class="headerlink" title="第六段、 列出审稿人"></a>第六段、 列出审稿人</h4><p><strong><em>Five possible reviewers:</em></strong></p><ol><li>Yun Lai</li></ol><p>Address: National Laboratory of Solid State Microstructures, School of Physics, and Collaborative Innovation Center of Advanced Microstructures, Nanjing University, Nanjing 210093, People’s Republic of China</p><p>Email: laiyun@nju.<a href="mailto:laiyun@nju.edu.cn">edu</a>.cn</p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meep教程(5) MPB计算光子晶体波导能带</title>
      <link href="/2023/12/16/C_%E6%95%99%E7%A8%8B_%E7%94%A8MPB%E8%AE%A1%E7%AE%97%E5%85%89%E5%AD%90%E6%99%B6%E4%BD%93%E6%B3%A2%E5%AF%BC%E8%83%BD%E5%B8%A6/"/>
      <url>/2023/12/16/C_%E6%95%99%E7%A8%8B_%E7%94%A8MPB%E8%AE%A1%E7%AE%97%E5%85%89%E5%AD%90%E6%99%B6%E4%BD%93%E6%B3%A2%E5%AF%BC%E8%83%BD%E5%B8%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="教科书结果重复"><a href="#教科书结果重复" class="headerlink" title="教科书结果重复"></a>教科书结果重复</h2><p>继续使用MEEP来作计算，这次将先会重复一下教科书的结果<br>“Photonic Crystals: Molding the Flow of Light “：P128 Figure5 </p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/MPB_20231216_NanoBeam_Book.png" alt=""><br>上图是要计算的结构，是一个纳米梁波导，其基本参数为:</p><ul><li>周期设置为a=1</li><li>圆孔半径设置为r=0.25</li><li>宽度设置为w=1</li><li>高度设置为h=0.4</li><li>所用材料折射率为:3.4641</li></ul><p>下面是MEEP的具体实现，首先是导入相应的包和设置基本参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### import meep as mp</span></span><br><span class="line"><span class="keyword">from</span> meep <span class="keyword">import</span> mpb</span><br><span class="line"></span><br><span class="line">resolution = <span class="number">25</span>  <span class="comment"># pixels/a 分辨率设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 三维结构设置</span></span><br><span class="line"><span class="comment"># z周期</span></span><br><span class="line">a = <span class="number">1</span>         <span class="comment"># units of um</span></span><br><span class="line"><span class="comment"># 圆孔半径</span></span><br><span class="line">r = <span class="number">0.25</span>         <span class="comment"># units of um</span></span><br><span class="line"><span class="comment"># 高度</span></span><br><span class="line">h = <span class="number">0.4</span>         <span class="comment"># units of um</span></span><br><span class="line"><span class="comment"># 纳米梁宽度</span></span><br><span class="line">w = <span class="number">1</span>        <span class="comment"># units of um</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化处理</span></span><br><span class="line">r = r/a          <span class="comment"># units of "a"</span></span><br><span class="line">h = h/a          <span class="comment"># units of "a"</span></span><br><span class="line">w = w/a          <span class="comment"># units of "a"</span></span><br></pre></td></tr></table></figure><p>然后开始设置MPB的物理模型<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置周期方向和大小，传播方向是周期的，设置为1，其他方向设置为4个周期大小，相应边界条件是不是为0？</span></span><br><span class="line">geometry_lattice = mp.Lattice(size=mp.Vector3(<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置几何结构</span></span><br><span class="line">geometry = [ mp.Block(center=mp.Vector3(), size=mp.Vector3(mp.inf,w,h), material=Si),</span><br><span class="line">             mp.Cylinder(center=mp.Vector3(), radius=r, height=mp.inf, material=mp.air) ]</span><br><span class="line"><span class="comment"># 沿着传播方向改变波矢</span></span><br><span class="line">num_k = <span class="number">20</span></span><br><span class="line">k_points = mp.interpolate(num_k, [mp.Vector3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>), mp.Vector3(<span class="number">0.5</span>,<span class="number">0</span>,<span class="number">0</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 五个本征值</span></span><br><span class="line">num_bands = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化modesolver</span></span><br><span class="line">ms = mpb.ModeSolver(geometry_lattice=geometry_lattice,</span><br><span class="line">                    geometry=geometry,</span><br><span class="line">                    k_points=k_points,</span><br><span class="line">                    resolution=resolution,</span><br><span class="line">                    num_bands=num_bands)</span><br></pre></td></tr></table></figure></p><p>根据对称性的不同，可以计算出不同的模式，我们这里可以计算模式是关于y奇对称，z偶对称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 限制我们关注的模式是关于y奇对称，z偶对称</span></span><br><span class="line">ms.run_yeven_zodd()</span><br></pre></td></tr></table></figure><p>最后取出相应的模式进行绘图<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">freqs = ms.all_freqs</span><br><span class="line">gaps = ms.gap_list</span><br><span class="line">kx=np.linspace(<span class="number">0</span>,<span class="number">0.5</span>,num_k+<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fig=plt.figure()</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(num_bands):</span><br><span class="line">    plt.plot(kx,freqs[:,l])</span><br><span class="line"></span><br><span class="line">plt.plot(kx,kx,<span class="string">'k'</span>)</span><br><span class="line">plt.ylim([<span class="number">0</span>,<span class="number">0.5</span>])</span><br><span class="line">plt.grid(<span class="string">'on'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'$\omega a/(2\pi c)$'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'$k_{x} a/(2\pi)$'</span>)</span><br></pre></td></tr></table></figure></p><p>下图是计算的能带图，可以看到，与教科书的（M(e,1),M(e,2)）是有出入的，我尝试过优化resolution，但是和教科书一直有差距，不知道是什么原因。。。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/MPB_20231216_NanoBeam.png" alt=""></p><h2 id="simpetuscloud例子重复"><a href="#simpetuscloud例子重复" class="headerlink" title="simpetuscloud例子重复"></a>simpetuscloud例子重复</h2><p>然后是重复<a href="http://www.simpetuscloud.com/projects.html#mpb_bandgap">simpetuscloud</a>的一个例子，不知道什么原因，这个网页已经挂了</p><p><img src="http://www.simpetus.com/files/nanobeam_bands.png" alt=""><br>如上图所示是要重复的结构以及能带，基本设置方法和计算方法和第一个例子类似，只是结构有区别，代码不在这里展示了，直接给出计算结果</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/MPB_20231216_BandSimup.png" alt=""></p><p>也可以导出相应的电场分布：</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/MPB_20231216_FieldExample.png" alt=""></p><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>以上的两个粒子，源代码可以从我的Github仓库获取：</p><p><a href="https://github.com/knifelees3/MEEPStudy/blob/master/MPBBand_Book_NanoBeam.ipynb">例子1：教科书纳米梁计算</a><br><a href="https://github.com/knifelees3/MEEPStudy/blob/master/MPBBand_NanoBeam.ipynb">例子2：Simptus纳米梁计算</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FDTD </tag>
            
            <tag> Meep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献精读以及要点收集</title>
      <link href="/2023/09/20/E_%E7%89%A9%E7%90%86_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E4%B8%8E%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%E6%B1%87%E9%9B%86/"/>
      <url>/2023/09/20/E_%E7%89%A9%E7%90%86_%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E4%B8%8E%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%E6%B1%87%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Quantum-Optics-写作"><a href="#Quantum-Optics-写作" class="headerlink" title="Quantum #Optics #写作"></a>Quantum #Optics #写作</h1><p>学习知识应该细嚼慢咽，进行深度思考与优化。</p><p>真正的大师永远怀着一颗学徒的心。</p><p>每次涉及到新的领域的时候，就会发现，自己的一些基础概念不过关，这些都需要自己去仔细的理解、消化、思考。</p><p>以这个文件为目录，我将会对一些经典的重要的知识点进行一个非常详尽的说明与概括，并写好相应的参考文献。</p><h2 id="量子光学"><a href="#量子光学" class="headerlink" title="量子光学"></a>量子光学</h2><ul><li>与量子电动力学的联系与区别</li><li>真空自发辐射模型</li><li>Lamb位移</li><li>无限深势的本征态</li><li>简谐振子的本征态</li><li>压缩态、相干态、Fock态、热态的定义、光子数分布</li><li>量子光场的时空间分布的物理意义的理解，以及与经典光场分布的联系</li><li>量子拍频效应</li><li>非线性光学产生压缩态的具体方程</li><li>多光子、多端口分束器原理</li><li>Bell不等式</li><li>薛定谔方程方法</li><li>主方程方法</li><li>输入、输出方法</li></ul><h2 id="量子信息"><a href="#量子信息" class="headerlink" title="量子信息"></a>量子信息</h2><ul><li>发展历史</li><li>量子计算的模型</li><li>几种量子算法</li><li>量子模拟</li><li>量子随机行走</li><li>量子隐形传态</li></ul><h2 id="拓扑与拓扑光子学"><a href="#拓扑与拓扑光子学" class="headerlink" title="拓扑与拓扑光子学"></a>拓扑与拓扑光子学</h2><ul><li>发展历史</li><li>量子霍尔效应、分数量子霍尔效应</li><li>获得诺贝尔奖的理论？</li><li>一维SSH模型</li><li>二维SSH模型</li><li>光学拓扑的理论分类</li></ul><h2 id="PT-Symmetry系统"><a href="#PT-Symmetry系统" class="headerlink" title="PT-Symmetry系统"></a>PT-Symmetry系统</h2><ul><li>发展历史</li><li>经典文献重复</li><li>光学PT示例</li><li>量子PT文献</li></ul><h2 id="Waveguide-QED"><a href="#Waveguide-QED" class="headerlink" title="Waveguide-QED"></a>Waveguide-QED</h2><ul><li>理论处理方法</li><li>主要现象</li><li>具体应用</li><li><p>未来的应用</p><h2 id="交叉"><a href="#交叉" class="headerlink" title="交叉"></a>交叉</h2></li><li><p>非厄米拓扑</p></li><li>人工合成维度与拓扑</li></ul>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>英语写作重点短句和词汇示例收集</title>
      <link href="/2023/09/09/E_%E7%89%A9%E7%90%86_%E8%8B%B1%E8%AF%AD%E5%86%99%E4%BD%9C%E9%87%8D%E7%82%B9%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%9F%AD%E5%8F%A5/"/>
      <url>/2023/09/09/E_%E7%89%A9%E7%90%86_%E8%8B%B1%E8%AF%AD%E5%86%99%E4%BD%9C%E9%87%8D%E7%82%B9%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%9F%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p>写作一直是自己的弱项，现在想要进行一个非常系统化的训练，不然文章完全写不出来。根据我自己的感受，写好文章需要具备的素质是：</p><ul><li>能够自如的介绍清楚技术方面的内容，比如能够介绍清楚方程的定义、推导以及求解等，能够说清楚我们解决问题的思路以及结果。</li><li>能够系统的总结和概括自己文章的主要内容、创新点</li><li>能够对研究的动机、背景做出非常系统、简洁的描述</li><li>相关语句比较流畅，用词精准</li></ul><p>这些做起来不是一蹴而就，需要多看、多学、多训练。我在这里对一些非常重要的短句、词汇以及长句表达做一些收集，便于以后写文章参考。</p><h2 id="重要词汇"><a href="#重要词汇" class="headerlink" title="重要词汇"></a>重要词汇</h2><p>regulation ：管理，控制<br>enduring： 持久的,不朽的<br>exclusively： 专门地;专有地<br>unprecedented： 前所未有的, 无前例的<br>paradigmatic： 范例的<br>a plethora of phenomena：  种类繁多的现象<br>tailoring the emission： 调整发射</p><h2 id="专业词汇"><a href="#专业词汇" class="headerlink" title="专业词汇"></a>专业词汇</h2><h2 id="典型专业表述收集"><a href="#典型专业表述收集" class="headerlink" title="典型专业表述收集"></a>典型专业表述收集</h2><ul><li>Quantum optics is an exciting field, in which many fundamental experiments, <strong>revealing the peculiarities of quantum mechanics</strong>, have been conducted.</li><li>To achieve such a capability, an important approach is to use the so-called waveguide quantum electrodynamics (QED) system, where one <strong>confines the photons to a waveguide</strong> that is strongly coupled to <strong>a local quantum system</strong></li><li>Optical properties of single emitters can be significantly improved through the interaction with plasmonic structures, leading to enhanced sensing and imaging capabilities. In turn, single emitters can act as sensitive probes of the local electromagnetic field surrounding plasmonic structures, furnishing fundamental insights into their physics and guiding the design of novel plasmonic devices.</li></ul><h2 id="近期进展表述"><a href="#近期进展表述" class="headerlink" title="近期进展表述"></a>近期进展表述</h2><ul><li><p>Recently, <strong>there has been an increased activity</strong> in analyzing the properties of photons propagating in a waveguide coupled to a qubit—a two-level quantum mechanical system</p></li><li><p>The rapid experimental developments, in turn, have motivated significant theoretical efforts</p></li><li><p>Quantum optics has seen rapid development in recent years thanks to the development of appropriate experimental techniques.</p><h2 id="一些专业模型的解释和描述"><a href="#一些专业模型的解释和描述" class="headerlink" title="一些专业模型的解释和描述"></a>一些专业模型的解释和描述</h2></li><li><p>Experimentally, <strong>the waveguides that have been used for this purpose include</strong> optical fibers , metallic plasmonic nanowires , photonic crystal waveguides , and microwave transmission line . <strong>The local quantum system typically incorporates a variety o quantum multi-level systems such a</strong>s actual atoms , quantum dots, or microwave qubits , where the strong nonlinearity of these multi-level systems forms the basis for strong photon-photon interactions. These multi-level systems moreover can be embedded in cavity structures to further control their nonlinear propertie</p></li></ul><h2 id="一些模型的典型描述"><a href="#一些模型的典型描述" class="headerlink" title="一些模型的典型描述"></a>一些模型的典型描述</h2><ul><li>We start the formal description of the method by defining the main resource, namely, signal and idler photons in an entangled state.</li></ul><h2 id="如何更加专业的描述推导过程"><a href="#如何更加专业的描述推导过程" class="headerlink" title="如何更加专业的描述推导过程"></a>如何更加专业的描述推导过程</h2><p>描述xx可以变成yy：</p><ul><li>The excitation amplitude of the atom in the receiving node thus <strong>turns out</strong></li><li>By definition the success rate is the maximum of xx, and <strong>becomes</strong></li><li>whose <strong>formal solution can be expressed in a matrix form as follows</strong></li><li>The solution <strong>reduces to</strong></li><li>Then xx can be expressed as follows</li><li>Where in the last step we use the relation xxx given in Appendix</li><li>Then Eq. (C3)  is further altered to give</li><li>The nontrivial components of the electric field of a focused RPB (illuminating upwards) in cylindrical coordinates takes the form</li><li>Correspondingly, however, <strong>the governing equation (S15) should be modified to a system containing equations</strong> for f0,i of the ith metal part as follows:</li><li><strong>By employing</strong> the following transformation, the original Hamiltonian is transformed into two decoupled ‘‘one-mode’’ Hamiltonians,</li><li>We could thus equivalently solve a system described by， where</li><li>To do so, we start by recalling the definition of the input field operator</li><li>where in the second line we used the fact that</li><li>Now that we know the relationship between the inputoutput formalism and the scattering theory, let us now calculate the S-matrix elements</li><li>the input-output equations appropriate for the Hamiltonian in (1) are</li><li>The single-photon transport properties are described by the single-photon S matrix, which is related to the input and output operator by</li><li>The quantity 〈0|aout(t)|k+〉 can be obtained by sandwiching (10) and (12) between the two states 〈0| and |k+〉</li><li>For subsequent calculations, we also define</li><li>The crucial step in the derivation above is (15), which takes advantage of the single-excitation nature of the input state.</li><li>The QFI <strong>with respect to</strong> the parameter λ <strong>can be formulated</strong> as</li></ul><h3 id="对某个表达式做出解释"><a href="#对某个表达式做出解释" class="headerlink" title="对某个表达式做出解释"></a>对某个表达式做出解释</h3><p>where xxx is xx and y is xxx;</p><p>where the generalized transverse part of the dyadic Green’s  function, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.588ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 1144 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(572,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container> , is constructed from the complete set of transverse eigenfunction  given by</p><h2 id="如何更加专业的看图说话"><a href="#如何更加专业的看图说话" class="headerlink" title="如何更加专业的看图说话"></a>如何更加专业的看图说话</h2><h3 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h3><ul><li><p>Schematic <strong>depicting</strong> the coupling relationships between states in the two-photon emission dynamics.</p></li><li><p>Schematic <strong>diagram</strong> of a complete state-transfer process between two identical chain-coupled MRR-based quantum nodes;</p></li><li><p><strong>Schematic depiction</strong> of the temporal shaping method:</p></li><li><p>The system of interest in this paper is schematically shown in Fig. 1: a whispering-gallery-type resonator interacting with a two-level atom is side coupled to a single-mode waveguide.</p></li><li><p>Single photons emerge from A and B and <strong>impinge simultaneousl</strong>y on a beam splitter.</p></li><li><p>The principal scheme of the method is presented in Fig. 1.</p></li></ul><h3 id="多参数变化的描述"><a href="#多参数变化的描述" class="headerlink" title="多参数变化的描述"></a>多参数变化的描述</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20240114164544.png" alt=""></p><ul><li>Map of the atomic excitation spectrum as g and h are <strong>varied</strong></li><li>Anticrossing between the atomic and cavity resonances as h is continuously varied.</li><li>Background fluorescence <strong>as a function of</strong> x and y at various energy</li></ul><h3 id="图的整体说明"><a href="#图的整体说明" class="headerlink" title="图的整体说明"></a>图的整体说明</h3><ul><li>In Fig. 3, we present calculations for the same input and output modes as in Fig. 2 with the incoming pulse prepared in a coherent state</li><li>Experimental results obtained for parallel polarization are displayed in Fig. 3(a)</li><li>Moreover, as shown in Fig. 3(b), we resolve a pronounced oscillation of the correlation function, starting with a minimum</li><li><p>One notices that the properties of the spectra and the group delays are similar to those for the topological waveguide, except for an additional spectral phase.</p><h2 id="表达什么是必要的"><a href="#表达什么是必要的" class="headerlink" title="表达什么是必要的"></a>表达什么是必要的</h2></li><li><p>When evaluating the effect of losses on the fidelity of the logic gate, it is <strong>imperative</strong> to normalize the temporal shape of the output states.<br><strong>imperative</strong>：必要的, 紧急的, 极重要的</p></li><li><p>The partial or complete confinement of waves is <strong>ubiquitous</strong> in nature and in wave-based technology<br><strong>ubiquitous</strong>：普遍存在的;无处不在的</p></li><li><p>The development, characterization, and control of N-photon sources are instrumental for quantum technological applications.<br><strong>instrumental</strong>： </p></li><li><p>Single-photon sources <strong>are one of the cornerstones</strong> of many quantum information protocols </p></li><li><p><strong>In the context of</strong> quantum information technology, including quantum computing devices, <strong>understanding the interaction between a few-photon state and a two-level atom</strong> plays an important role</p></li><li><p><strong>The capability to</strong> create strong photon-photon interaction at a few-photon level in integrated photonic systems is of central importance for quantum information processing</p></li></ul><p>来自Chatgpt的答案：</p><p>在表达重要观点或强调某一事实时，可以使用一些特定的句型和短语，以增强语气和引起注意。以下是一些常见的表达方式：</p><ol><li><p><strong>强调句型</strong>：</p><ul><li>It is essential that…</li><li>It is crucial to…</li><li>It is of utmost importance to…</li><li>What matters most is…</li></ul></li><li><p><strong>使用副词</strong>：</p><ul><li>Extremely important…</li><li>Significantly, …</li><li>Notably, …</li><li>Importantly, …</li></ul></li><li><p><strong>强调短语</strong>：</p><ul><li>It should be noted that…</li><li>It is worth emphasizing that…</li><li>Of particular significance is…</li><li>A key point to highlight is…</li></ul></li><li><p><strong>使用形容词</strong>：</p><ul><li>Vital information…</li><li>Essential details…</li><li>Critical factors…</li><li>Paramount considerations…</li></ul></li><li><p><strong>在句子开头使用修饰语</strong>：</p><ul><li>Importantly, we must…</li><li>Crucially, the research indicates…</li><li>Of particular note is…</li></ul></li><li><p><strong>在总结时强调</strong>：</p><ul><li>In conclusion, it is vital to…</li><li>To sum up, the most important aspect is…</li><li>In summary, we must recognize…</li></ul></li></ol><p>这些句型和短语可根据具体语境进行适当调整，有助于使表达更加突出和明确。</p><h2 id="如何对参数依赖关系进行描述"><a href="#如何对参数依赖关系进行描述" class="headerlink" title="如何对参数依赖关系进行描述"></a>如何对参数依赖关系进行描述</h2><h2 id="介绍一个理论"><a href="#介绍一个理论" class="headerlink" title="介绍一个理论"></a>介绍一个理论</h2><ul><li>We start the formal description of the method by defining the main resource, namely, signal and idler photons in an entangled state</li></ul><h2 id="如何实现某个方案"><a href="#如何实现某个方案" class="headerlink" title="如何实现某个方案"></a>如何实现某个方案</h2><ul><li>Now we analyze an implementation of the frequencyresolving measurement of the idler photon required in the proposed method. The measurement can be realized with a spectral filter followed by a single-photon time-resolving “click” detector.</li></ul><h2 id="总结某个表达式"><a href="#总结某个表达式" class="headerlink" title="总结某个表达式"></a>总结某个表达式</h2><ul><li><p><strong>The expression implies</strong> that individual detection of signal and idler photons results in homogeneous distribution of photocounts within the time interval tu, while joint detection reveals correlation of photons within the characteristic time tc.</p></li><li><p><strong>This expression represents the main result of the paper</strong>. Namely, the temporal shape of the heralded single-photon pulse is defined by the modulation function in the heralding arm.</p></li></ul><h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><ul><li>As a first example of our formalism, we consider the scattering on an empty one-sided cavity with resonance frequency</li><li>As an example of a system that scatters a single input pulse into a multimode output, we consider phase noise in the system, e.g., due to a jittering of one of the cavity mirrors on a timescale</li><li>As a final example, we apply our theory to a recent experiment by Hacker</li></ul><h2 id="背景部分"><a href="#背景部分" class="headerlink" title="背景部分"></a>背景部分</h2><h3 id="前者的不足之处在于："><a href="#前者的不足之处在于：" class="headerlink" title="前者的不足之处在于："></a>前者的不足之处在于：</h3><ul><li>There are, however, several reasons for which the semiclassical treatment is not completely satisfactory.</li><li>While these schemes offer tantalizing insights into physics and promising prospects, they only apply for photons at the single-frequency limit.</li><li><p>Such a requirement <strong>imposes great challenges</strong> on the implementation of criticality-enhanced quantum sensing</p><h3 id="我们做了什么"><a href="#我们做了什么" class="headerlink" title="我们做了什么"></a>我们做了什么</h3></li><li><p>Furthermore, we estimate <strong>figures of merit</strong> such as heralding probability and state purity of the produced shaped photons as well as achievable temporal durations of the photons<br>figures of merit： 因数，佳度，Q值</p></li></ul><h2 id="文章结尾"><a href="#文章结尾" class="headerlink" title="文章结尾"></a>文章结尾</h2><ul><li><p>In conclusion, we have proposed a method·····</p></li><li><p>To summarize, we have observed the fourth-order interference of two individual photons impinging on a beam splitter in a time-resolved manner.</p></li><li><p><strong>We therefore conclude that</strong> a temporal filter, which accepts only time intervals between photodetections shorter than the mutual coherence time, is a way to obtain nearly perfect two-photon interference, even if the coherence properties of the photons are not ideal. <strong>This makes</strong> linear optical quantum computing [9] <strong>much more feasible</strong> with today’s technology.</p></li><li><p>The theory contributes an <strong>unified</strong> understanding to a variety of the two-photon interference effects.</p></li></ul><h2 id="经典文章赏析"><a href="#经典文章赏析" class="headerlink" title="经典文章赏析"></a>经典文章赏析</h2><h3 id="文献1：PRX-Quantum-4-030326-2023"><a href="#文献1：PRX-Quantum-4-030326-2023" class="headerlink" title="文献1：PRX Quantum 4, 030326 (2023)."></a>文献1：PRX Quantum 4, 030326 (2023).</h3><h4 id="摘要部分"><a href="#摘要部分" class="headerlink" title="摘要部分"></a>摘要部分</h4><ul><li>Quadratic light-matter interactions are nonlinear couplings <strong>such that</strong> quantum emitters interact with photonic or phononic modes <strong>exclusively</strong> via the exchange of excitation pairs.</li></ul><p>exclusively: 专门地;专有地</p><p>这句话对“Quadratic light-matter interactions”做了一个解释，用到了长句以及一些副词来修饰，解释的非常清楚到位</p><ul><li><p>Implementable with atomic and solid-state systems, these couplings <strong>lead to a plethora of phenomena</strong> that have been characterized <strong>in the context of</strong> cavity QED, <strong>where quantum emitters interact with localized bosonic modes</strong>.<br>介绍这些耦合的意义，还是非常长的表述。</p></li><li><p><strong>*We develop</strong> a general scattering theory <strong>under the Markov approximation</strong> and <strong>discuss paradigmatic examples</strong> for spontaneous emission and scattering of biphoton states.<br>这是经常会用到的表达，比如，相似的还有：We propose·····<br><strong>paradigmatic examples</strong>: 范例的</p></li><li><p>Our analytical and semianalytical <strong>results unveil fundamental differences</strong> with respect to conventional waveguide QED systems, such as the spontaneous emission frequency-entangled photon pairs or the full transparency of the emitter to single-photon inputs.<br><strong>unveil</strong>: 揭去…的面罩，除去…的遮盖物</p></li><li><p><strong>This unlocks new opportunities in</strong>  （重点句式）quantum information processing with propagating photons. </p></li><li><p><strong>As a striking example</strong>（重点句式）, we show that a single quadratically coupled emitter can implement a two-photon logic gate with unit fidelity, <strong>circumventing a no-go theorem</strong> derived for conventional waveguide-QED interactions</p></li></ul><h4 id="背景介绍部分"><a href="#背景介绍部分" class="headerlink" title="背景介绍部分"></a>背景介绍部分</h4><ul><li><p>The study of light-matter interactions is one of the main research pillars of quantum science.<br>介绍光与物质相互作用的重要性，如果是我写，肯定是：light-matter interaction is the central problem in quantum science，这里换了一个说法： main research pillars of</p></li><li><p><strong>The implementation of systems</strong> where quantum emitters interact strongly with confined modes of the electromagnetic fields has allowed us to <strong>achieve an unprecedented level of control over quantum degrees of freedom</strong><br>我之前一直想表达的一个观点：随着我们对光与物质相互作用的控制更加自如，强耦合已经可以实现，这段话就说的比较流畅</p></li><li><p><strong>In the framework of cavity QED</strong>, the confinement of the electromagnetic field<strong>makes it possible</strong> to observe a coherent exchange of excitations between <strong>localized photonic modes</strong> and single quantum emitters [3]. Similarly, the <strong>coupling of quantum emitters to propagating fields</strong> can be strongly enhanced using waveguide structures, which <strong>confine photons to a one-dimensional environment</strong><br>对Waveguide-QED的介绍，以Cavity-QED作为对比</p><ul><li>This setup, known as waveguide QED, <strong>has been realized in a variety of platforms</strong> such as atoms [6–9] or quantum dots [10,11] coupled to photonic waveguides, <strong>as well as</strong> superconducting qubits [12–20] coupled to microwave transmission lines.<br>如何介绍、罗列多个系统</li></ul></li><li><p>Waveguide QED structures <strong>have a great potential to</strong> <strong>implement building blocks of quantum networks</strong> [21,22], <strong>since propagating photons are ideal to transport flying qubits over long distances while emitters can provide the strong quantum nonlinearity necessary for quantum information processing.</strong><br>这句话重要是因为其对Waveguide-QED的评价，特别是对传播光子、Emitter的作用。</p></li><li><p>Therefore, there has been intense theoretical [23–30] and experimental [31–36] research in the control and characterization of few-photon correlations generated by single quantum emitters, as well as in the implementation of photonic devices working at the few-photon level<br>这是对领域内的研究的一个评价，说明理论、实验都比较重要.</p></li><li><p>The rich quantum phenomenology <strong>arising in</strong> quadratic light-matter interactions <strong>motivates</strong> a fast-growing interest<br>如何来形容某一个领域的重要性</p><h4 id="Introdution结尾部分"><a href="#Introdution结尾部分" class="headerlink" title="Introdution结尾部分"></a>Introdution结尾部分</h4></li><li><p>In this work, <strong>we develop</strong> a quantum optics theory to describe a single quantum emitter interacting quadratically with the photons that propagate along a one-dimensional waveguide. </p></li><li><strong>*We study this problem</strong> with a two-photon scattering theory based on a Wigner-Weisskopf approach and the Born-Markov approximation. </li><li><strong>We derive</strong> the general form of the scattering matrix, including semianalytical solutions for arbitrary photonic input states and full analytical solutions for Gaussian inputs. </li><li><strong>Applying this theory, we unveil observable features of</strong> the emitter’s response that are <strong>fundamentally different</strong> <strong>with respect to</strong> conventional waveguide QED setups (see Fig. 1). These include (i) the spontaneous emission of correlated biphoton states, (ii) the strong interaction with spectrally narrow two-photon pulses, and (iii) full transparency to single-photon inputs. </li><li>Finally, we show that <strong>these effects can be exploited in quantum information applications</strong>, designing a deterministic controlled-phase gate that acts on pairs of propagating photons with perfect fidelity. This result seems to contradict a famous no-go theorem for photonic gates [40,79,80].</li><li>This shaping of single photons <strong>will push forward the implementation of scalable multidimensional quantum information protocols</strong>, efficient photon-matter coupling, and quantum control at the level of single quanta.</li></ul><h4 id="正文介绍部分"><a href="#正文介绍部分" class="headerlink" title="正文介绍部分"></a>正文介绍部分</h4><ul><li><p>It is convenient to <strong>reparameterize</strong> the wave function’s element using the sum and difference of photon frequencies</p></li><li><p>In this limit <strong>one can formally solve</strong> Eq. (5) and replace the solution into Eq. (4) to obtain</p></li><li><p><strong>For the sake of clarity</strong>, let us first write the scattering relations for a fixed propagation direction of the input field along the waveguide.</p></li></ul><h4 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h4><ul><li>As demonstrated in this work, quadratic light-matter couplings <strong>are a compelling tool to process quantum information</strong> encoded in propagating photons. </li><li>This possibility <strong>should be thoroughly addressed</strong> considering each specific experimental setting, with a detailed microscopic model of the system and realistic noise sources. </li><li><strong>The possibility of tailoring the spectral features of emitted and scattered biphoton states paves also the way to the generation of entanglement in the time-frequency domain</strong>, <strong>which is relevant for</strong> quantum computation [85] and sensing [86–88] applications.</li></ul><p>对什么有意义，也可以用 be relevant for</p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QuantumInformation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica export notebook into pdf files with table of contents and bookmarks</title>
      <link href="/2023/05/20/C_%E6%95%99%E7%A8%8B_MathematicaExportPDFwithTOC/"/>
      <url>/2023/05/20/C_%E6%95%99%E7%A8%8B_MathematicaExportPDFwithTOC/</url>
      
        <content type="html"><![CDATA[<h1 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h1><p>I have been using Mathemtica to write notes. It’s really convenient to use notebook files because we can write  program, formular, figures and text in one file. However, not everyone uses Mathematica, If we want to share our notes with others, exporting nb files into pdf format is necessary.</p><p>In default, the generated pdf by Mathematica is relatively simple, and  there is no TOC or bookmarks in the generated pdf files. It will be very inconvenient to read if the notes are very long. I have searched on stack exchange, but it seems that there is no existing good solution. According to the <a href="https://mathematica.stackexchange.com/questions/267897/how-to-export-pdf-with-bookmarks">question</a>, may be we can save the nb files into <code>tex</code>  format and then compile it into pdf, but (according to my experience) problem exists when the nb file is long and the formular is complicated.</p><p>Finally, I myself try to add bookmarks mannually. I use python to process the generated pdf files, what I want to realize can be summarized as follows:</p><ul><li>Using Mathematica: For a long notebook file, we directly generate the pdf files (<code>pdf file 1</code>) </li><li>Using Mathematica: Then I will extract the chapter/section information and  generate a pdf file (<code>pdf file 2</code>) containing the table of contents (with suitable pdf page numbers)</li><li>Using Python：Finally, I will use python to merge the two pdfs into <code>pdf file 3</code> and add bookmarks into this merged pdf (<code>pdf file 3</code>).</li></ul><p>It seems that the above process is cumbersome, but it can be automated by the program, and the operation is very simple. I will show an example:</p><p>Assuming that the notebook file to be processed is <code>test.nb</code>, then in Mathematica </p><p>(1) we just need run the following program to generate the helping files</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(*The notebook directory*)</span></span><br><span class="line"><span class="variable">fileDir</span> <span class="operator">=</span> </span><br><span class="line">  <span class="string">"./"</span><span class="operator">;</span></span><br><span class="line">  <span class="comment">(*The notebook file*)</span></span><br><span class="line"><span class="variable">fileNb</span> <span class="operator">=</span> <span class="string">"test.nb"</span><span class="operator">;</span></span><br><span class="line"><span class="variable">GenTOCtoPDFTZH</span><span class="punctuation">[</span><span class="variable">fileDir</span><span class="operator">,</span> <span class="variable">fileNb</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><p><strong>NOTES:</strong></p><blockquote><p>By runing above Mathematica program, two pdf files will be generated (<code>pdf file 1</code>, <code>pdf file 2</code>).  Extra txt file names <code>test.txt</code> is also generated. In this txt file, information about the TOC are saved.</p></blockquote><p>(2)then we use the corresponding  python program (see appendix II) to generate the final pdf files.</p><p>If you don’t want to install python, I have also written a program with simple GUI and compiled it into  <a href="https://github.com/knifelees3/ToolBox/releases/tag/v0.1.0-alpha">Exe format</a>. This can be directly run on windows. Original code can be found on <a href="https://github.com/knifelees3/ToolBox/tree/main/PDFTOC">this</a> </p><p>the final pdf files will have toc and bookmarks:<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/MMAtoPDFFiles.gif" alt=""></p><p>However, by using python, the original links in PDF will be lost, so you can’t jump into certain page by clicking the links, this is the problem of  the python package <code>PyPDF2</code>.</p><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><h3 id="the-Mathematica-function"><a href="#the-Mathematica-function" class="headerlink" title="the Mathematica function"></a>the Mathematica function</h3><p>modefied from the <a href="https://mathematica.stackexchange.com/questions/476/generating-a-table-of-contents">question</a><br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">*</span><span class="variable">helper</span> <span class="variable">file</span> <span class="variable">for</span> <span class="variable">creating</span> <span class="variable">cell</span><span class="operator">*</span><span class="punctuation">)</span></span><br><span class="line"><span class="variable">createCell</span><span class="punctuation">[</span><span class="type">text_</span><span class="operator">,</span><span class="type">tag_</span><span class="operator">,</span><span class="type">level_</span><span class="punctuation">]</span><span class="operator">:=</span><span class="built_in">Cell</span><span class="punctuation">[</span><span class="built_in">BoxData</span><span class="punctuation">[</span><span class="built_in">TagBox</span><span class="punctuation">[</span><span class="built_in">GridBox</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="string">""</span><span class="operator">,</span><span class="variable">text</span><span class="operator">,</span><span class="built_in">CounterBox</span><span class="punctuation">[</span><span class="string">"Page"</span><span class="operator">,</span><span class="punctuation">{</span><span class="variable">bookUrl</span><span class="operator">,</span><span class="variable">tag</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span><span class="built_in">GridBoxAlignment</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="string">"Columns"</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="built_in">Left</span><span class="operator">,</span><span class="built_in">Left</span><span class="operator">,</span><span class="built_in">Right</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span><span class="built_in">GridBoxItemSize</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="string">"Columns"</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="number">2</span> <span class="variable">level</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span><span class="number">35</span><span class="operator">-</span><span class="number">2</span> <span class="variable">level</span><span class="operator">,</span><span class="number">5</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span><span class="string">"Grid"</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="string">"Text"</span><span class="operator">,</span><span class="built_in">FontColor</span><span class="operator">-&gt;</span><span class="built_in">Blue</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*helper file for creating cell version II*)</span></span><br><span class="line"><span class="variable">createCellPy</span><span class="punctuation">[</span><span class="type">text_</span><span class="operator">,</span><span class="type">tag_</span><span class="operator">,</span><span class="type">level_</span><span class="punctuation">]</span><span class="operator">:=</span><span class="built_in">Cell</span><span class="punctuation">[</span><span class="built_in">BoxData</span><span class="punctuation">[</span><span class="built_in">TagBox</span><span class="punctuation">[</span><span class="built_in">GridBox</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="string">""</span><span class="operator">,</span><span class="variable">text</span><span class="operator">,</span><span class="string">";"</span><span class="operator">,</span><span class="variable">level</span><span class="operator">,</span><span class="string">";"</span><span class="operator">,</span><span class="built_in">CounterBox</span><span class="punctuation">[</span><span class="string">"Page"</span><span class="operator">,</span><span class="punctuation">{</span><span class="variable">bookUrl</span><span class="operator">,</span><span class="variable">tag</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span><span class="string">";"</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span><span class="built_in">GridBoxAlignment</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="string">"Columns"</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="built_in">Left</span><span class="operator">,</span><span class="built_in">Left</span><span class="operator">,</span><span class="built_in">Left</span><span class="operator">,</span><span class="built_in">Left</span><span class="operator">,</span><span class="built_in">Right</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span><span class="built_in">GridBoxItemSize</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="string">"Columns"</span><span class="operator">-&gt;</span><span class="punctuation">{</span><span class="number">2</span> <span class="variable">level</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span><span class="number">35</span><span class="operator">-</span><span class="number">2</span> <span class="variable">level</span><span class="operator">,</span><span class="number">5</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span><span class="string">"Grid"</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="string">"Text"</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">GenTOCtoPDFTZH</span><span class="punctuation">[</span><span class="type">fileDir_</span><span class="operator">,</span><span class="type">fileNb_</span><span class="punctuation">]</span><span class="operator">:=</span><span class="built_in">Block</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">typeList</span><span class="operator">,</span><span class="variable">filepdf</span><span class="operator">,</span><span class="variable">filepdfToc</span><span class="operator">,</span><span class="variable">filetxt</span><span class="operator">,</span><span class="variable">bookUrl</span><span class="operator">,</span><span class="variable">tocPDF</span><span class="operator">,</span><span class="variable">tocPy</span><span class="operator">,</span><span class="variable">book</span><span class="operator">,</span><span class="variable">fexp</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line"><span class="variable">typeList</span><span class="operator">=</span><span class="punctuation">{</span><span class="string">"Section"</span><span class="operator">,</span><span class="string">"Subsection"</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">filepdf</span><span class="operator">=</span><span class="built_in">StringReplace</span><span class="punctuation">[</span><span class="variable">fileNb</span><span class="operator">,</span><span class="string">".nb"</span><span class="operator">-&gt;</span><span class="string">".pdf"</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">filepdfToc</span><span class="operator">=</span><span class="built_in">StringReplace</span><span class="punctuation">[</span><span class="variable">fileNb</span><span class="operator">,</span><span class="string">".nb"</span><span class="operator">-&gt;</span><span class="string">"Toc.pdf"</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">filetxt</span><span class="operator">=</span><span class="built_in">StringReplace</span><span class="punctuation">[</span><span class="variable">fileNb</span><span class="operator">,</span><span class="string">".nb"</span><span class="operator">-&gt;</span><span class="string">".txt"</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">bookUrl</span><span class="operator">=</span><span class="built_in">FileNameJoin</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">fileDir</span><span class="operator">,</span><span class="variable">fileNb</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SetDirectory</span><span class="punctuation">[</span><span class="variable">fileDir</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">tocPDF</span><span class="operator">=</span><span class="built_in">CreateDocument</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SelectionMove</span><span class="punctuation">[</span><span class="variable">tocPDF</span><span class="operator">,</span><span class="built_in">Before</span><span class="operator">,</span><span class="built_in">Notebook</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">NotebookWrite</span><span class="punctuation">[</span><span class="variable">tocPDF</span><span class="operator">,</span><span class="built_in">Cell</span><span class="punctuation">[</span><span class="string">"目录"</span><span class="operator">,</span><span class="string">"Text"</span><span class="operator">,</span><span class="number">20</span><span class="operator">,</span><span class="built_in">Blue</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">tocPy</span><span class="operator">=</span><span class="built_in">CreateDocument</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">book</span><span class="operator">=</span><span class="built_in">NotebookOpen</span><span class="punctuation">[</span><span class="variable">bookUrl</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SetOptions</span><span class="punctuation">[</span><span class="variable">book</span><span class="operator">,</span><span class="built_in">ShowPageBreaks</span><span class="operator">-&gt;</span><span class="built_in">True</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*iterate over cells to set tags and write lines to TOC*)</span></span><br><span class="line"><span class="built_in">Scan</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="variable">counter</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">]</span><span class="operator">=</span><span class="number">0</span><span class="punctuation">)</span><span class="operator">&amp;,</span><span class="variable">typeList</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SelectionMove</span><span class="punctuation">[</span><span class="variable">book</span><span class="operator">,</span><span class="built_in">Before</span><span class="operator">,</span><span class="built_in">Notebook</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SelectionMove</span><span class="punctuation">[</span><span class="variable">book</span><span class="operator">,</span><span class="built_in">Next</span><span class="operator">,</span><span class="built_in">Cell</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">While</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="variable">cell</span><span class="operator">=</span><span class="built_in">NotebookRead</span><span class="punctuation">[</span><span class="variable">book</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">=!=</span><span class="punctuation">{</span><span class="punctuation">}</span><span class="operator">,</span><span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">Length</span><span class="punctuation">[</span><span class="variable">cell</span><span class="punctuation">]</span><span class="operator">&gt;=</span><span class="number">2</span><span class="operator">,</span><span class="variable">type</span><span class="operator">=</span><span class="variable">cell</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">MemberQ</span><span class="punctuation">[</span><span class="variable">typeList</span><span class="operator">,</span><span class="variable">type</span><span class="punctuation">]</span><span class="operator">,</span><span class="variable">counter</span><span class="punctuation">[</span><span class="variable">type</span><span class="punctuation">]</span><span class="operator">+=</span><span class="number">1</span><span class="operator">;</span></span><br><span class="line"><span class="variable">tag</span><span class="operator">=</span><span class="variable">type</span><span class="operator">&lt;&gt;</span><span class="built_in">ToString</span><span class="punctuation">[</span><span class="variable">counter</span><span class="punctuation">[</span><span class="variable">type</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SetOptions</span><span class="punctuation">[</span><span class="built_in">NotebookSelection</span><span class="punctuation">[</span><span class="variable">book</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">CellTags</span><span class="operator">-&gt;</span><span class="built_in">Union</span><span class="punctuation">[</span><span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Options</span><span class="punctuation">[</span><span class="built_in">NotebookSelection</span><span class="punctuation">[</span><span class="variable">book</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">CellTags</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="variable">tag</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SelectionMove</span><span class="punctuation">[</span><span class="variable">book</span><span class="operator">,</span><span class="built_in">All</span><span class="operator">,</span><span class="built_in">CellContents</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">NotebookWrite</span><span class="punctuation">[</span><span class="variable">tocPDF</span><span class="operator">,</span><span class="variable">createCell</span><span class="punctuation">[</span><span class="built_in">NotebookRead</span><span class="punctuation">[</span><span class="variable">book</span><span class="punctuation">]</span><span class="operator">,</span><span class="variable">tag</span><span class="operator">,</span><span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">typeList</span><span class="operator">,</span><span class="variable">type</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NotebookWrite</span><span class="punctuation">[</span><span class="variable">tocPy</span><span class="operator">,</span><span class="variable">createCellPy</span><span class="punctuation">[</span><span class="built_in">NotebookRead</span><span class="punctuation">[</span><span class="variable">book</span><span class="punctuation">]</span><span class="operator">,</span><span class="variable">tag</span><span class="operator">,</span><span class="built_in">Position</span><span class="punctuation">[</span><span class="variable">typeList</span><span class="operator">,</span><span class="variable">type</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">SelectionMove</span><span class="punctuation">[</span><span class="variable">book</span><span class="operator">,</span><span class="built_in">Next</span><span class="operator">,</span><span class="built_in">Cell</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*存储为txt文件*)</span></span><br><span class="line"><span class="variable">fexp</span><span class="operator">=</span><span class="built_in">FileNameJoin</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">fileDir</span><span class="operator">,</span><span class="variable">filetxt</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">FrontEndExecute</span><span class="punctuation">[</span><span class="built_in">FrontEndToken</span><span class="punctuation">[</span><span class="variable">tocPy</span><span class="operator">,</span><span class="string">"Save"</span><span class="operator">,</span><span class="punctuation">{</span><span class="variable">fexp</span><span class="operator">,</span><span class="string">"Text"</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*存储笔记本文件为pdf文件供Python使用*)</span></span><br><span class="line"><span class="variable">fexp</span><span class="operator">=</span><span class="built_in">FileNameJoin</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">fileDir</span><span class="operator">,</span><span class="variable">filepdf</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Export</span><span class="punctuation">[</span><span class="variable">fexp</span><span class="operator">,</span><span class="variable">book</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*存储目录文件为pdf文件供Python使用*)</span></span><br><span class="line"><span class="variable">fexp</span><span class="operator">=</span><span class="built_in">FileNameJoin</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">fileDir</span><span class="operator">,</span><span class="variable">filepdfToc</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Export</span><span class="punctuation">[</span><span class="variable">fexp</span><span class="operator">,</span><span class="variable">tocPDF</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*关闭所有*)</span></span><br><span class="line"><span class="built_in">NotebookClose</span><span class="punctuation">[</span><span class="variable">book</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">NotebookClose</span><span class="punctuation">[</span><span class="variable">tocPDF</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">NotebookClose</span><span class="punctuation">[</span><span class="variable">tocPy</span><span class="punctuation">]</span><span class="operator">;</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment">(*<span class="comment">(*复制目录到目标笔记本*)</span></span></span><br><span class="line"><span class="comment">SelectionMove[tocPDF,All,Notebook];</span></span><br><span class="line"><span class="comment">data=NotebookRead[tocPDF];</span></span><br><span class="line"><span class="comment">SelectionMove[book,Before,Notebook];</span></span><br><span class="line"><span class="comment">NotebookWrite[book,Cell["目录","Text",20,Blue]];</span></span><br><span class="line"><span class="comment">NotebookWrite[book,NotebookRead[tocPDF]];*)</span></span><br><span class="line"><span class="comment">(*存储为txt文件供Python使用*)</span></span><br></pre></td></tr></table></figure></p><h3 id="Python-program-to-generate-TOC"><a href="#Python-program-to-generate-TOC" class="headerlink" title="Python program to generate TOC"></a>Python program to generate TOC</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># we set the file name to be processed</span></span><br><span class="line"><span class="built_in">dir</span>=<span class="string">'./'</span></span><br><span class="line">fileName=<span class="string">'test'</span></span><br><span class="line">dele=<span class="number">0</span> <span class="comment"># 0代表删除，1代表不删除</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyPDF2 <span class="keyword">import</span> PdfReader, PdfWriter</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment">#sys.path.insert(1, '') # 为了可以让python将当前文件夹加入环境变量</span></span><br><span class="line"></span><br><span class="line">os.chdir(<span class="built_in">dir</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">filetxt=fileName+<span class="string">'.txt'</span></span><br><span class="line">filepdf=fileName+<span class="string">'.pdf'</span></span><br><span class="line">filepdfTOC=fileName+<span class="string">'Toc.pdf'</span></span><br><span class="line">filepdfout=fileName+<span class="string">'WithToc.pdf'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># read lines from txt</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filetxt,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    lines = f.read().split(<span class="string">";"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">numlines=<span class="built_in">int</span>(<span class="built_in">len</span>(lines)/<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">tit_list=[]</span><br><span class="line">level_list=[]</span><br><span class="line">page_list=[]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(numlines):</span><br><span class="line">    tit_list.append(lines[<span class="number">3</span>*l].replace(<span class="string">"\t"</span>, <span class="string">""</span>).replace(<span class="string">"\n"</span>, <span class="string">""</span>))</span><br><span class="line">    level_list.append(lines[<span class="number">3</span>*l+<span class="number">1</span>].replace(<span class="string">"\t"</span>, <span class="string">""</span>).replace(<span class="string">"\n"</span>, <span class="string">""</span>))</span><br><span class="line">    page_list.append(lines[<span class="number">3</span>*l+<span class="number">2</span>].replace(<span class="string">"\t"</span>, <span class="string">""</span>).replace(<span class="string">"\n"</span>, <span class="string">""</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(tit_list)</span></span><br><span class="line"><span class="comment">#print(level_list)</span></span><br><span class="line"><span class="comment">#print(page_list)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate bookmarks</span></span><br><span class="line"></span><br><span class="line">reader_Main = PdfReader(filepdf)  <span class="comment"># open input</span></span><br><span class="line">reader_Toc = PdfReader(filepdfTOC)  <span class="comment"># open input</span></span><br><span class="line">writer = PdfWriter()  <span class="comment"># open output</span></span><br><span class="line"></span><br><span class="line">n_Main = <span class="built_in">len</span>(reader_Main.pages)</span><br><span class="line">n_Toc = <span class="built_in">len</span>(reader_Toc.pages)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n_Toc):</span><br><span class="line">    writer.add_page(reader_Toc.pages[i])  <span class="comment"># insert page of TOC</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n_Main):</span><br><span class="line">    writer.add_page(reader_Main.pages[i])  <span class="comment"># insert page of Main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(numlines):</span><br><span class="line">    <span class="keyword">if</span> level_list[l]==<span class="string">"1"</span>:</span><br><span class="line">        par=writer.add_outline_item(tit_list[l], <span class="built_in">int</span>(page_list[l]), parent=<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">elif</span> level_list[l]==<span class="string">"2"</span>:</span><br><span class="line">        writer.add_outline_item(tit_list[l], <span class="built_in">int</span>(page_list[l]), parent=par)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filepdfout, <span class="string">"wb"</span>) <span class="keyword">as</span> fp:  <span class="comment"># creating result pdf JCT</span></span><br><span class="line">    writer.write(fp)  <span class="comment"># writing to result pdf JCT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> dele==<span class="number">0</span>:</span><br><span class="line"><span class="comment"># Delete the mid files</span></span><br><span class="line">os.remove(filepdf)</span><br><span class="line">os.remove(filepdfTOC)</span><br><span class="line">os.remove(filetxt)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mathemtica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meep教程(4) MPB计算光子晶体能带</title>
      <link href="/2023/04/22/C_%E6%95%99%E7%A8%8B_MPB%E8%AE%A1%E7%AE%97%E4%BA%8C%E7%BB%B4%E5%85%89%E5%AD%90%E6%99%B6%E4%BD%93%E8%83%BD%E5%B8%A6/"/>
      <url>/2023/04/22/C_%E6%95%99%E7%A8%8B_MPB%E8%AE%A1%E7%AE%97%E4%BA%8C%E7%BB%B4%E5%85%89%E5%AD%90%E6%99%B6%E4%BD%93%E8%83%BD%E5%B8%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="Meep"><a href="#Meep" class="headerlink" title="Meep"></a>Meep</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>回归科研以后，一些爱好需要重新拾取起来了。最近学会了用COMSOL计算光子晶体能带，现在尝试来用Meep计算光子晶体能带，希望可以以后有机会作为主力的程序来使用。</p><p>我主要参考的是官方文档：<a href="https://mpb.readthedocs.io/en/latest/Python_Tutorial/">https://mpb.readthedocs.io/en/latest/Python_Tutorial/</a></p><h2 id="简单二维光子晶体能带例子"><a href="#简单二维光子晶体能带例子" class="headerlink" title="简单二维光子晶体能带例子"></a>简单二维光子晶体能带例子</h2><h3 id="能带计算"><a href="#能带计算" class="headerlink" title="能带计算"></a>能带计算</h3><p>本次主要想重复书籍<a href="http://ab-initio.mit.edu/book/">Photonic Crystals: Molding the Flow of Light second edition</a> 第五章的结构的能带计算：<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Snipaste_2023_04_22_17_24_55.png" alt=""><br>按照官方文档的介绍，直接设置结构，计算相应能带即可，具体可以看代码和注释<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> meep <span class="keyword">as</span> mp</span><br><span class="line"><span class="keyword">from</span> meep <span class="keyword">import</span> mpb</span><br><span class="line"></span><br><span class="line">num_bands = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义好扫描的k波矢</span></span><br><span class="line">k_points = [mp.Vector3(),          <span class="comment"># Gamma</span></span><br><span class="line">            mp.Vector3(<span class="number">0.5</span>),       <span class="comment"># X</span></span><br><span class="line">            mp.Vector3(<span class="number">0.5</span>, <span class="number">0.5</span>),  <span class="comment"># M</span></span><br><span class="line">            mp.Vector3()]          <span class="comment"># Gamma</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对k波矢进行插值</span></span><br><span class="line">k_points = mp.interpolate(<span class="number">20</span>, k_points)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基本结构和材料性质</span></span><br><span class="line">geometry = [mp.Cylinder(<span class="number">0.2</span>, material=mp.Medium(epsilon=<span class="number">8.9</span>))]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基本二维cell</span></span><br><span class="line">geometry_lattice = mp.Lattice(size=mp.Vector3(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">resolution = <span class="number">32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mode solver设置</span></span><br><span class="line">ms = mpb.ModeSolver(num_bands=num_bands,</span><br><span class="line">                    k_points=k_points,</span><br><span class="line">                    geometry=geometry,</span><br><span class="line">                    geometry_lattice=geometry_lattice,</span><br><span class="line">                    resolution=resolution)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算te模式</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Square lattice of rods: TE bands"</span>)</span><br><span class="line">ms.run_te()</span><br></pre></td></tr></table></figure></p><p>按照官方文档说法，要查看得到的本振频率，需要从输出的类似的log文件中提取，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tefreqs:, 13, 0.3, 0.3, 0, 0.424264, 0.372604, 0.540287, 0.644083, 0.81406, 0.828135, 0.890673, 1.01328, 1.1124</span><br></pre></td></tr></table></figure><p>我们需要手动将这些信息提取出来，在Linux里面主要通过正则表达式提取，这种方式感觉太不优雅了，官方文章还有例子<a href="https://mpb.readthedocs.io/en/latest/Python_Data_Analysis_Tutorial/">MPBData</a>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tm_freqs = ms.all_freqs</span><br></pre></td></tr></table></figure><p>所以可以直接从<code>ms</code>中提取结果<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ms.run_te()</span><br><span class="line">te_freqs = ms.all_freqs</span><br><span class="line">te_gaps = ms.gap_list</span><br><span class="line">ms.run_tm()</span><br><span class="line">tm_freqs = ms.all_freqs</span><br><span class="line">tm_gaps = ms.gap_list</span><br></pre></td></tr></table></figure><br>可以将能带绘制出来<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">numk,tmp=np.shape(te_freqs)</span><br><span class="line">klist=<span class="built_in">range</span>(numk)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fig,ax=plt.subplots()</span><br><span class="line">x = <span class="built_in">range</span>(<span class="built_in">len</span>(tm_freqs))</span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(num_bands):</span><br><span class="line">    plt.plot(te_freqs[:,l],<span class="string">'r-'</span>)</span><br><span class="line">    plt.plot(tm_freqs[:,l],<span class="string">'b-'</span>)</span><br><span class="line">plt.ylim([<span class="number">0</span>,<span class="number">0.8</span>])</span><br><span class="line">plt.ylabel(<span class="string">'$\omega a/(2\pi c)$'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot gaps</span></span><br><span class="line"><span class="keyword">for</span> gap <span class="keyword">in</span> tm_gaps:</span><br><span class="line">    <span class="keyword">if</span> gap[<span class="number">0</span>] &gt; <span class="number">1</span>:</span><br><span class="line">        ax.fill_between(x, gap[<span class="number">1</span>], gap[<span class="number">2</span>], color=<span class="string">'blue'</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> gap <span class="keyword">in</span> te_gaps:</span><br><span class="line">    <span class="keyword">if</span> gap[<span class="number">0</span>] &gt; <span class="number">1</span>:</span><br><span class="line">        ax.fill_between(x, gap[<span class="number">1</span>], gap[<span class="number">2</span>], color=<span class="string">'red'</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">points_in_between = (<span class="built_in">len</span>(tm_freqs) - <span class="number">4</span>) / <span class="number">3</span></span><br><span class="line">tick_locs = [i*points_in_between+i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line">tick_labs = [<span class="string">'Γ'</span>, <span class="string">'X'</span>, <span class="string">'M'</span>, <span class="string">'Γ'</span>]</span><br><span class="line">ax.set_xticks(tick_locs)</span><br><span class="line">ax.set_xticklabels(tick_labs, size=<span class="number">16</span>)</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/bandgap_benchmark.png" alt=""><br>书中的结果是<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Snipaste_2023_04_22_17_24_27.png" alt=""></p><p>可以看到与书籍的结果是一样的。并且可以比较方便的导出Band Gap，还是比较方便的。</p><h3 id="电场导出"><a href="#电场导出" class="headerlink" title="电场导出"></a>电场导出</h3><p>以上是能带计算的例子，我们也可以导出相应的电场分布，观察tm模式的Ez，<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">efields = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_efields</span>(<span class="params">ms, band</span>):</span><br><span class="line">    efields.append(ms.get_efield(band, bloch_phase=<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line">ms.run_tm(mpb.output_at_kpoint(mp.Vector3(<span class="number">1</span>/<span class="number">2</span>, <span class="number">0</span>,<span class="number">0</span>), mpb.fix_efield_phase,</span><br><span class="line">          get_efields))</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create an MPBData instance to transform the efields</span></span><br><span class="line">eps = ms.get_epsilon() <span class="comment"># 得到折射率分布</span></span><br><span class="line">md = mpb.MPBData(rectify=<span class="literal">True</span>, resolution=<span class="number">32</span>, periods=<span class="number">3</span>)</span><br><span class="line">converted_eps = md.convert(eps) </span><br><span class="line"></span><br><span class="line">converted = []</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> efields:</span><br><span class="line">    <span class="comment"># Get just the z component of the efields</span></span><br><span class="line">    f = f[..., <span class="number">0</span>, <span class="number">2</span>]</span><br><span class="line">    converted.append(md.convert(f))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, f <span class="keyword">in</span> <span class="built_in">enumerate</span>(converted):</span><br><span class="line">    plt.subplot(<span class="number">331</span> + i)</span><br><span class="line">    plt.contour(converted_eps.T, cmap=<span class="string">'binary'</span>)</span><br><span class="line">    plt.imshow(np.real(f).T, interpolation=<span class="string">'spline36'</span>, cmap=<span class="string">'jet'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/output_field_tmEz.png" alt=""></p><p>按道理应该没有Ex,Ey分量，可以进行测试,绘制一下Ex</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create an MPBData instance to transform the efields</span></span><br><span class="line">eps = ms.get_epsilon() <span class="comment"># 得到折射率分布</span></span><br><span class="line">md = mpb.MPBData(rectify=<span class="literal">True</span>, resolution=<span class="number">32</span>, periods=<span class="number">3</span>)</span><br><span class="line">converted_eps = md.convert(eps)</span><br><span class="line">  </span><br><span class="line">converted = []</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> efields:</span><br><span class="line">    <span class="comment"># Get just the  component of the efields</span></span><br><span class="line">    f = f[..., <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">    converted.append(md.convert(f))</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> i, f <span class="keyword">in</span> <span class="built_in">enumerate</span>(converted):</span><br><span class="line">    plt.subplot(<span class="number">331</span> + i)</span><br><span class="line">    plt.contour(converted_eps.T, cmap=<span class="string">'binary'</span>)</span><br><span class="line">    plt.imshow(np.real(f).T, interpolation=<span class="string">'spline36'</span>, cmap=<span class="string">'jet'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/output_field_tmEx.png" alt=""></p><p>结果与预期一致，都是0。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本次介绍了如何通过MEEP的BPB模块计算二维光子晶体能带，接下来还想实现三种不同的波导的能带计算：</p><ul><li>二维缺陷波导</li><li>二维拓扑波导</li><li>三维纳米梁波导</li></ul><p>本次计算的代码可以在我的<a href="https://github.com/knifelees3/MEEPStudy">github</a>中看到。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FDTD </tag>
            
            <tag> Meep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>薛定谔方程作为本征值问题的数值求解</title>
      <link href="/2023/03/18/E_%E7%89%A9%E7%90%86_%E8%96%9B%E5%AE%9A%E8%B0%94%E6%96%B9%E7%A8%8B%E6%9C%AC%E5%BE%81%E5%80%BC%E7%9A%84%E6%95%B0%E5%80%BC%E6%B1%82%E6%B3%95/"/>
      <url>/2023/03/18/E_%E7%89%A9%E7%90%86_%E8%96%9B%E5%AE%9A%E8%B0%94%E6%96%B9%E7%A8%8B%E6%9C%AC%E5%BE%81%E5%80%BC%E7%9A%84%E6%95%B0%E5%80%BC%E6%B1%82%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="物理"><a href="#物理" class="headerlink" title="物理"></a>物理</h1><h2 id="差分化表示"><a href="#差分化表示" class="headerlink" title="差分化表示"></a>差分化表示</h2><p>天下武功出少林，物理中经典光学问题都全部用麦克斯韦方程组描述，量子力学的关键则是薛定谔方程。很多经典的量子物理模型如无限深势阱、简谐振子等模型，薛定谔方程的解都可以解析的表示，但是大部分物理系统得用数值方法来计算。</p><p>本篇笔记将会总结如何通过数值方法分析特定物理系统的本征值以及本征矢量。主要参考了该回答：<br><a href="https://physics.stackexchange.com/questions/170546/numerical-solution-to-schr%c3%b6dinger-equation-eigenvalues">Numerical solution to Schrödinger equation - eigenvalues</a></p><p>一维空间中一般薛定谔方程可以表示为：</p><script type="math/tex; mode=display">i \hbar \frac{\partial}{\partial t} \Psi(x, t)=\left[-\frac{\hbar^2}{2 m} \frac{\partial^2}{\partial x^2}+V(x, t)\right] \Psi(x, t)</script><p>我们假设势能项不含时间，考虑稳态的薛定谔方程，并且近似认为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.798ex;" xmlns="http://www.w3.org/2000/svg" width="8.068ex" height="3.033ex" role="img" focusable="false" viewBox="0 -987.7 3565.9 1340.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,398) scale(0.707)"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(778,0)"><g data-mml-node="mi"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"></path></g><g data-mml-node="mn" transform="translate(646.1,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(379,-345) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1492.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(2010.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3065.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>，此时相应的方程变为</p><script type="math/tex; mode=display">V(x) \Psi (x)- \psi''(x)=E \Psi (x)</script><p>采用差分方法，格点化<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.814ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2128 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="3A8" d="M340 622Q338 623 335 625T331 629T325 631T314 634T298 635T274 636T239 637H212V683H224Q248 680 389 680T554 683H566V637H539Q479 637 464 635T439 622L438 407Q438 192 439 192Q443 193 449 195T474 207T507 232T536 276T557 344Q560 365 562 417T573 493Q587 536 620 544Q627 546 671 546H715L722 540V515Q714 509 708 509Q680 505 671 476T658 392T644 307Q599 177 451 153L438 151V106L439 61Q446 54 451 52T476 48T539 46H566V0H554Q530 3 389 3T224 0H212V46H239Q259 46 273 46T298 47T314 48T325 51T331 54T335 57T340 61V151Q126 178 117 406Q115 503 69 509Q55 509 55 526Q55 541 59 543T86 546H107H120Q150 546 161 543T184 528Q198 514 204 493Q212 472 213 420T226 316T272 230Q287 216 303 207T330 194L339 192Q340 192 340 407V622Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1167,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1739,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 为</p><script type="math/tex; mode=display">\Psi (x_0),\Psi  (x_1),\Psi  (x_2),\text{...},\Psi  (x_M)</script><p>同时二阶求导近似为</p><script type="math/tex; mode=display">\frac{d^2}{dx^2}\Psi  (x)\approx \frac{\Psi  (x-d)+\Psi  (d+x)-2 \Psi( x)}{d^2}=\frac{\Psi  (x_{n-1})+\Psi  (x_{n+1})-2 \Psi \left(  x_n\right)}{d^2}</script><p>将 $\Psi(x<em>{0}),\Psi(x</em>{1}),…,\Psi(x_{N})$ 写成矩阵形式</p><script type="math/tex; mode=display">|\Psi\rangle=\left[\begin{matrix}\Psi(x_{0})\\\Psi(x_{1})\\\Psi(x_{2})\\\Psi(x_{3})\\\cdot \\\Psi(x_{N})\end{matrix}\right]</script><p>那么原方程可以写为<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20230703103838.png" alt=""></p><p>此时可以写为矩阵形式，</p><script type="math/tex; mode=display">H |\Psi\rangle = E |\Psi\rangle</script><p>此时就是差分离散后的微分方程，通过求解H的本征值，就可以计算量子系统的本质值以及本征矢量了。</p><h2 id="无限深势阱模型"><a href="#无限深势阱模型" class="headerlink" title="无限深势阱模型"></a>无限深势阱模型</h2><p>现在一无限深势阱模型为例，演示如何通过上述的本征方法数值计算本征模式，并与解析结果进行对比。无限深势阱的势函数为</p><script type="math/tex; mode=display">V(x)=\left\{\begin{array}{c}\infty, x \leq 0 \text { 或者 } \mathrm{x} \geq L \\0,0<x<L\end{array}\right.</script><p>无限深势阱的薛定谔方程可以表示为</p><script type="math/tex; mode=display">-\frac{\hbar^2}{2 m} \frac{d^2 \psi(x)}{d x^2}+V(x) \psi(x)=E \psi(x)</script><p>其本征函数可以直接写出来</p><script type="math/tex; mode=display">\begin{aligned}& \psi_n=\sqrt{\frac{2}{L}} \sin \left(\frac{\mathrm{n} \pi \mathrm{x}}{L}\right) \\& E_n=\frac{n^2 h^2}{8 m L^2}=(2 \pi)^2 \frac{n^2 \hbar^2}{8 m L^2}\end{aligned}</script><p>为了计算方便，令</p><script type="math/tex; mode=display">\frac{\hbar^2}{2 m}=1</script><p>下面是用Mathematica数值计算的本征值和理论结果的对比，结果是符合的很好的。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20230703104612.png" alt=""></p><p>如果将势能改成抛物线形状，也是可以计算的</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage20230703105017.png" alt=""></p><h2 id="附录：Mathematica代码"><a href="#附录：Mathematica代码" class="headerlink" title="附录：Mathematica代码"></a>附录：Mathematica代码</h2><p>本征矩阵函数<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Potential1DMatrix</span><span class="punctuation">[</span><span class="type">Vx_</span><span class="operator">,</span><span class="type">d_</span><span class="punctuation">]</span><span class="operator">:=</span><span class="built_in">Module</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dim</span><span class="operator">,</span><span class="variable">\[ScriptCapitalH]</span><span class="operator">,</span><span class="variable">\[ScriptCapitalV]</span><span class="operator">,</span><span class="variable">\[ScriptCapitalA]</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line"><span class="variable">dim</span><span class="operator">=</span><span class="built_in">Dimensions</span><span class="punctuation">[</span><span class="variable">Vx</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">\[ScriptCapitalH]</span><span class="operator">=</span><span class="built_in">ConstantArray</span><span class="punctuation">[</span><span class="number">0</span><span class="operator">,</span><span class="punctuation">{</span><span class="variable">dim</span><span class="operator">,</span><span class="variable">dim</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Table</span><span class="punctuation">[</span><span class="variable">\[ScriptCapitalH]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="operator">,</span><span class="variable">l</span><span class="operator">+</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">=</span><span class="number">1</span><span class="operator">;</span><span class="variable">\[ScriptCapitalH]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="operator">+</span><span class="number">1</span><span class="operator">,</span><span class="variable">l</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">=</span><span class="number">1</span><span class="operator">;,</span><span class="punctuation">{</span><span class="variable">l</span><span class="operator">,</span><span class="variable">dim</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">\[ScriptCapitalV]</span><span class="operator">=</span><span class="built_in">ConstantArray</span><span class="punctuation">[</span><span class="number">0</span><span class="operator">,</span><span class="punctuation">{</span><span class="variable">dim</span><span class="operator">,</span><span class="variable">dim</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Table</span><span class="punctuation">[</span><span class="variable">\[ScriptCapitalH]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="operator">,</span><span class="variable">l</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">=-</span><span class="number">2</span><span class="operator">;</span><span class="variable">\[ScriptCapitalV]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="operator">,</span><span class="variable">l</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">=</span><span class="variable">Vx</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="punctuation">{</span><span class="variable">l</span><span class="operator">,</span><span class="variable">dim</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">\[ScriptCapitalA]</span><span class="operator">=-</span><span class="variable">\[ScriptCapitalH]</span><span class="operator">/</span><span class="variable">d</span><span class="operator">^</span><span class="number">2</span><span class="operator">+</span><span class="variable">\[ScriptCapitalV]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Return</span><span class="punctuation">[</span><span class="variable">\[ScriptCapitalA]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><p>无限深势阱模型计算<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">numx</span> <span class="operator">=</span> <span class="number">501</span><span class="operator">;</span></span><br><span class="line"><span class="variable">x</span> <span class="operator">=</span> <span class="built_in">N</span><span class="operator">@</span><span class="built_in">Subdivide</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">10</span><span class="operator">,</span> <span class="number">10</span><span class="operator">,</span> <span class="variable">numx</span> <span class="operator">-</span> <span class="number">1</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">d</span> <span class="operator">=</span> <span class="variable">x</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">-</span> <span class="variable">x</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">Vx</span> <span class="operator">=</span> <span class="built_in">ConstantArray</span><span class="punctuation">[</span><span class="variable">bound</span><span class="operator">,</span> <span class="variable">numx</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">L</span> <span class="operator">=</span> <span class="number">5</span><span class="operator">;</span></span><br><span class="line"><span class="variable">bound</span> <span class="operator">=</span> <span class="number">1001</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Table</span><span class="punctuation">[</span><span class="built_in">If</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;</span> <span class="variable">L</span> <span class="operator">&amp;&amp;</span>  <span class="variable">x</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> <span class="number">0</span><span class="operator">,</span> <span class="variable">Vx</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">l</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">l</span><span class="operator">,</span> <span class="variable">numx</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">\[ScriptCapitalA]</span> <span class="operator">=</span> <span class="variable">Potential1DMatrix</span><span class="punctuation">[</span><span class="variable">Vx</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="punctuation">{</span><span class="variable">\[Lambda]</span><span class="variable">Mat</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">}</span> <span class="operator">=</span> <span class="built_in">Eigensystem</span><span class="punctuation">[</span><span class="variable">\[ScriptCapitalA]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">p1</span> <span class="operator">=</span> <span class="built_in">ListPlot</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">PlotMarkers</span> <span class="operator">-&gt;</span> <span class="string">"OpenMarkers"</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="variable">L</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">0.3</span><span class="operator">,</span> <span class="number">0.3</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"\!\(\*SubscriptBox[\(\[Psi]\), \(0\)]\) \</span></span><br><span class="line"><span class="string">Simulated"</span><span class="operator">,</span> <span class="string">"\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\) Simulated"</span><span class="operator">,</span> </span><br><span class="line">     <span class="string">"\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\) Simulated"</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">AxesLabel</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"x"</span><span class="operator">,</span> <span class="string">"\[Psi](x)"</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">p2</span> <span class="operator">=</span> <span class="built_in">ListLinePlot</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="built_in">Sqrt</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">*</span><span class="variable">d</span><span class="operator">/</span><span class="variable">L</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Pi]</span><span class="operator">/</span><span class="variable">L</span><span class="operator">*</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="built_in">Sqrt</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">*</span><span class="variable">d</span><span class="operator">/</span><span class="variable">L</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="number">2</span> <span class="variable">\[Pi]</span><span class="punctuation">)</span><span class="operator">/</span><span class="variable">L</span><span class="operator">*</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="built_in">Sqrt</span><span class="punctuation">[</span><span class="number">2</span><span class="operator">*</span><span class="variable">d</span><span class="operator">/</span><span class="variable">L</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="number">3</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">)</span><span class="operator">/</span><span class="variable">L</span><span class="operator">*</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="variable">L</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">0.3</span><span class="operator">,</span> <span class="number">0.3</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"\!\(\*SubscriptBox[\(\[Psi]\), \(0\)]\) \</span></span><br><span class="line"><span class="string">Theoretical"</span><span class="operator">,</span> <span class="string">"\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\) Theoretical"</span><span class="operator">,</span> </span><br><span class="line">     <span class="string">"\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\) Theoretical"</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">AxesLabel</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"x"</span><span class="operator">,</span> <span class="string">"\[Psi](x)"</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">p3</span> <span class="operator">=</span> <span class="built_in">Show</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">p1</span><span class="operator">,</span> <span class="variable">p2</span><span class="punctuation">}</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">p1</span> <span class="operator">=</span> <span class="built_in">ListPlot</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Sort</span><span class="operator">@</span><span class="variable">\[Lambda]</span><span class="variable">Mat</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">1</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">100</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotMarkers</span> <span class="operator">-&gt;</span> <span class="string">"OpenMarkers"</span><span class="operator">,</span> <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"Simulated"</span><span class="punctuation">}</span></span><br><span class="line">   <span class="operator">,</span> <span class="built_in">AxesLabel</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"n"</span><span class="operator">,</span> <span class="string">"Energy"</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">p2</span> <span class="operator">=</span> <span class="built_in">Plot</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="variable">n</span><span class="punctuation">)</span><span class="operator">^</span><span class="number">2</span><span class="operator">/</span><span class="punctuation">(</span><span class="number">2</span><span class="operator">*</span><span class="variable">L</span><span class="punctuation">)</span><span class="operator">^</span><span class="number">2</span><span class="operator">*</span><span class="number">4</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="operator">^</span><span class="number">2</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">n</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">21</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"Theoretical"</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">p3</span> <span class="operator">=</span> <span class="built_in">Show</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">p1</span><span class="operator">,</span> <span class="variable">p2</span><span class="punctuation">}</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><p>抛物线形计算<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">numx</span> <span class="operator">=</span> <span class="number">1001</span><span class="operator">;</span></span><br><span class="line"><span class="variable">x</span> <span class="operator">=</span> <span class="built_in">N</span><span class="operator">@</span><span class="built_in">Subdivide</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">10</span><span class="operator">,</span> <span class="number">10</span><span class="operator">,</span> <span class="variable">numx</span> <span class="operator">-</span> <span class="number">1</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">d</span> <span class="operator">=</span> <span class="variable">x</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">-</span> <span class="variable">x</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">Vx</span> <span class="operator">=</span> <span class="operator">-</span><span class="built_in">N</span><span class="operator">@</span><span class="variable">x</span><span class="operator">^</span><span class="number">4</span><span class="operator">/</span><span class="number">100</span><span class="operator">;</span></span><br><span class="line"><span class="variable">\[ScriptCapitalA]</span> <span class="operator">=</span> <span class="variable">Potential1DMatrix</span><span class="punctuation">[</span><span class="variable">Vx</span><span class="operator">,</span> <span class="variable">d</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="punctuation">{</span><span class="variable">\[Lambda]</span><span class="variable">Mat</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">}</span> <span class="operator">=</span> <span class="built_in">Eigensystem</span><span class="punctuation">[</span><span class="variable">\[ScriptCapitalA]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">ListLinePlot</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">VecMat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Optics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三维偶极取向：三维箭头的绘制</title>
      <link href="/2023/01/07/C_%E6%95%99%E7%A8%8B_%E4%B8%89%E7%BB%B4%E5%81%B6%E6%9E%81%E5%8F%96%E5%90%912%E7%AE%AD%E5%A4%B4%E7%BB%98%E5%88%B6/"/>
      <url>/2023/01/07/C_%E6%95%99%E7%A8%8B_%E4%B8%89%E7%BB%B4%E5%81%B6%E6%9E%81%E5%8F%96%E5%90%912%E7%AE%AD%E5%A4%B4%E7%BB%98%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h1><h2 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h2><p>绘制给定直角坐标系下三个垂直的三维箭头，需要绘制出三维效果。</p><p>MATLAB没有天然的三维箭头绘制支持，需要用到别人写好的包。我经过多次尝试发现这些包的实现结果都不如人意。最后不得不采用Mathematica来实现，实现的过程中也发现有许多的坑，本篇笔记将会对实现方法进行记录。</p><h2 id="角度的对比"><a href="#角度的对比" class="headerlink" title="角度的对比"></a>角度的对比</h2><p>用Mathematica绘制时，<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Table</span><span class="punctuation">[</span></span><br><span class="line">  <span class="variable">viewpt</span> <span class="operator">=</span> <span class="punctuation">{</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line">  <span class="built_in">Module</span><span class="punctuation">[</span><span class="punctuation">{</span> <span class="variable">thickline</span> <span class="operator">=</span> <span class="number">0.02</span><span class="operator">,</span> <span class="variable">thickhead</span> <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">    </span><br><span class="line">    <span class="punctuation">{</span><span class="variable">d1</span><span class="operator">,</span> <span class="variable">d2</span><span class="operator">,</span> <span class="variable">d3</span><span class="punctuation">}</span> <span class="operator">=</span> <span class="variable">Dipole3DfromRot</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">   </span><br><span class="line">    <span class="variable">p2</span> <span class="operator">=</span> <span class="built_in">Graphics3D</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="comment">(*Text[Style["d1",18,Red],d1],*)</span></span><br><span class="line">          <span class="punctuation">{</span><span class="built_in">Red</span><span class="operator">,</span> <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">d1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="built_in">Red</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">d1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">          <span class="comment">(*Text[Style["d2",18,Red],d2],*)</span></span><br><span class="line">          <span class="punctuation">{</span><span class="built_in">Green</span><span class="operator">,</span> <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">d2</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="built_in">Green</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">d2</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">          <span class="comment">(*Text[Style["d3",18,Red],d3],*)</span></span><br><span class="line">          <span class="punctuation">{</span><span class="built_in">Blue</span><span class="operator">,</span> <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">d3</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="built_in">Blue</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">d3</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">        <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="operator">,</span> <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="operator">,</span> <span class="built_in">AspectRatio</span> <span class="operator">-&gt;</span> <span class="number">1</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">AxesLabel</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"X"</span><span class="operator">,</span> <span class="string">"Y"</span><span class="operator">,</span> <span class="string">"Z"</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">PlotLabel</span> <span class="operator">-&gt;</span> </span><br><span class="line">      <span class="string">"\[Theta]="</span> <span class="operator">&lt;&gt;</span> <span class="built_in">ToString</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="operator">/</span><span class="variable">\[Pi]</span><span class="operator">*</span><span class="number">180</span><span class="punctuation">]</span> <span class="operator">&lt;&gt;</span> <span class="string">", \[Phi]="</span> <span class="operator">&lt;&gt;</span></span><br><span class="line">        <span class="built_in">ToString</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="variable">view</span><span class="operator">/</span><span class="variable">\[Pi]</span><span class="operator">*</span><span class="number">180</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">    <span class="variable">pexport</span> <span class="operator">=</span> </span><br><span class="line">    <span class="built_in">Show</span><span class="punctuation">[</span><span class="variable">p2</span><span class="operator">,</span> <span class="built_in">ViewPoint</span> <span class="operator">-&gt;</span> <span class="number">3</span><span class="operator">*</span><span class="variable">viewpt</span><span class="operator">,</span> <span class="built_in">AspectRatio</span> <span class="operator">-&gt;</span> <span class="number">1</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">ViewProjection</span> <span class="operator">-&gt;</span> <span class="string">"Orthographic"</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">AxesOrigin</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="operator">,</span> </span><br><span class="line">   <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="operator">/</span><span class="number">2</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Phi]</span><span class="variable">view</span><span class="operator">,</span> </span><br><span class="line">   <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="operator">/</span><span class="number">2</span><span class="operator">/</span><span class="number">2</span><span class="punctuation">}</span><span class="punctuation">]</span> <span class="operator">//</span> <span class="built_in">MatrixForm</span></span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/3DDipoleMathematicaDifferentView.png" alt="MATHEMATICA"></p><p>而采用MATLAB时，</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">addpath(<span class="string">'./FunctionFolder'</span>)</span><br><span class="line">[d1,d2,d3]=Dipole3DfromD1Rot([<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]);</span><br><span class="line">thetamat=[<span class="number">0</span>,<span class="number">45</span>,<span class="number">90</span>];</span><br><span class="line">phimat=[<span class="number">0</span>,<span class="number">45</span>,<span class="number">90</span>];</span><br><span class="line">[thetagrid,phigrid]=<span class="built_in">meshgrid</span>(thetamat,phimat);</span><br><span class="line">thetagrid1d=thetagrid(:);</span><br><span class="line">phigrid1d=phigrid(:);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>()</span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:<span class="number">9</span></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">3</span>,l)</span><br><span class="line">axis equal;</span><br><span class="line">p1=arrow3D([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>], d1/<span class="built_in">sqrt</span>(sum(<span class="built_in">abs</span>(d1).^<span class="number">2</span>,<span class="string">'all'</span>)),<span class="string">'r'</span>);<span class="built_in">hold</span> on;</span><br><span class="line">p2=arrow3D([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>], -d1/<span class="built_in">sqrt</span>(sum(<span class="built_in">abs</span>(d1).^<span class="number">2</span>,<span class="string">'all'</span>)),<span class="string">'r'</span>);<span class="built_in">hold</span> on;</span><br><span class="line">p3=arrow3D([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>], d2/<span class="built_in">sqrt</span>(sum(<span class="built_in">abs</span>(d2).^<span class="number">2</span>,<span class="string">'all'</span>)),<span class="string">'g'</span>);<span class="built_in">hold</span> on;</span><br><span class="line">p4=arrow3D([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>], -d2/<span class="built_in">sqrt</span>(sum(<span class="built_in">abs</span>(d2).^<span class="number">2</span>,<span class="string">'all'</span>)),<span class="string">'g'</span>);<span class="built_in">hold</span> on;</span><br><span class="line">p5=arrow3D([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>], d3/<span class="built_in">sqrt</span>(sum(<span class="built_in">abs</span>(d3).^<span class="number">2</span>,<span class="string">'all'</span>)),<span class="string">'b'</span>);<span class="built_in">hold</span> on;</span><br><span class="line">p6=arrow3D([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>], -d3/<span class="built_in">sqrt</span>(sum(<span class="built_in">abs</span>(d3).^<span class="number">2</span>,<span class="string">'all'</span>)),<span class="string">'b'</span>);<span class="built_in">hold</span> on;</span><br><span class="line">axis equal;</span><br><span class="line">view([phigrid1d(l),thetagrid1d(l)]);</span><br><span class="line">xlabel(<span class="string">'x'</span>);ylabel(<span class="string">'y'</span>);zlabel(<span class="string">'z'</span>);</span><br><span class="line">title([<span class="string">'\theta='</span>,num2str(thetagrid1d(l)),<span class="string">', \phi='</span>,num2str(phigrid1d(l))]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/3DDipoleMATLABDifferentView.png" alt="MATLAB"><br>可以看见默认的角度是不一样的，为了角度一致，需要进行调制，变换规则为</p><script type="math/tex; mode=display">\theta_{\text{Mathematica}}=\pi/2-\theta_{\text{MATLAB}}, \quad \phi_{\text{Mathematica}}=\phi_{\text{MATLAB}}-\pi/2</script><p>调整以后就可以了<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/3DDipoleMathematicaDifferentView_Correct.png" alt="MATLAB"></p><h2 id="在三个箭头中添加椭圆"><a href="#在三个箭头中添加椭圆" class="headerlink" title="在三个箭头中添加椭圆"></a>在三个箭头中添加椭圆</h2><p>还需要添加相应的椭圆，这里设计到三维空间中椭圆的绘制。<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">parafit</span> <span class="operator">=</span> <span class="punctuation">{</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line"><span class="variable">\[Theta]</span><span class="variable">view</span> <span class="operator">=</span> <span class="variable">\[Pi]</span><span class="operator">/</span><span class="number">2</span><span class="operator">;</span> <span class="variable">\[Phi]</span><span class="variable">view</span> <span class="operator">=</span> <span class="variable">\[Pi]</span><span class="operator">/</span><span class="number">2</span><span class="operator">;</span></span><br><span class="line"><span class="variable">viewpt</span> <span class="operator">=</span> <span class="punctuation">{</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="variable">view</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="variable">view</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Module</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">\[Alpha]</span> <span class="operator">=</span> <span class="variable">parafit</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">\[Beta]</span> <span class="operator">=</span> <span class="variable">parafit</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">  <span class="variable">thickline</span> <span class="operator">=</span> <span class="number">0.02</span><span class="operator">,</span> <span class="variable">thickhead</span> <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line"> </span><br><span class="line"> <span class="variable">dx</span> <span class="operator">=</span> <span class="built_in">N</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">dy</span> <span class="operator">=</span> <span class="built_in">N</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="variable">\[Alpha]</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">dz</span> <span class="operator">=</span> <span class="built_in">N</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Beta]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> </span><br><span class="line"> <span class="punctuation">{</span><span class="variable">d1</span><span class="operator">,</span> <span class="variable">d2</span><span class="operator">,</span> <span class="variable">d3</span><span class="punctuation">}</span> <span class="operator">=</span> <span class="variable">Dipole3DfromRot</span><span class="punctuation">[</span><span class="variable">parafit</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">d1D</span> <span class="operator">=</span> <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">d1</span><span class="operator">,</span> <span class="variable">d2</span><span class="operator">,</span> <span class="variable">d3</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">dxyz</span> <span class="operator">=</span> <span class="punctuation">{</span><span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dx</span><span class="operator">,</span> <span class="variable">dx</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dx</span><span class="operator">*</span><span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dx</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dx</span><span class="operator">,</span> <span class="variable">dx</span><span class="operator">*</span><span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dx</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dx</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dx</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dy</span><span class="operator">,</span> <span class="variable">dy</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dy</span><span class="operator">*</span><span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dy</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dy</span><span class="operator">,</span> <span class="variable">dy</span><span class="operator">*</span><span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dy</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dy</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dy</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dz</span><span class="operator">,</span> <span class="variable">dz</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dz</span><span class="operator">*</span><span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dz</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dz</span><span class="operator">,</span> <span class="variable">dz</span><span class="operator">*</span><span class="number">0</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">dz</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dz</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">dz</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">M1D</span> <span class="operator">=</span> <span class="built_in">Inverse</span><span class="punctuation">[</span><span class="variable">dxyz</span><span class="punctuation">]</span> <span class="operator">.</span> <span class="variable">d1D</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">M</span> <span class="operator">=</span> <span class="built_in">ArrayReshape</span><span class="punctuation">[</span><span class="variable">M1D</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">3</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p1</span> <span class="operator">=</span> <span class="built_in">ParametricPlot3D</span><span class="punctuation">[</span></span><br><span class="line">   <span class="variable">M</span> <span class="operator">.</span> <span class="punctuation">{</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">\[Alpha]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span></span><br><span class="line">      <span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">\[Beta]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Theta]</span><span class="operator">,</span> </span><br><span class="line">    <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Phi]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">2</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">Mesh</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Yellow</span><span class="operator">,</span> <span class="built_in">Opacity</span><span class="punctuation">[</span><span class="number">0.1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Specularity</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">False</span> <span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p1cut</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">ParametricPlot3D</span><span class="punctuation">[</span></span><br><span class="line">   <span class="variable">M</span> <span class="operator">.</span> <span class="punctuation">{</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">\[Alpha]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">      <span class="number">0</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Theta]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Phi]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">2</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Mesh</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Opacity</span><span class="punctuation">[</span><span class="number">0.1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Specularity</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">False</span> <span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p2cut</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">ParametricPlot3D</span><span class="punctuation">[</span></span><br><span class="line">   <span class="variable">M</span> <span class="operator">.</span> <span class="punctuation">{</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="number">0</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">\[Beta]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Theta]</span><span class="operator">,</span> </span><br><span class="line">    <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Phi]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">2</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">Mesh</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Opacity</span><span class="punctuation">[</span><span class="number">0.1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Specularity</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">False</span> <span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p3cut</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">ParametricPlot3D</span><span class="punctuation">[</span></span><br><span class="line">   <span class="variable">M</span> <span class="operator">.</span> <span class="punctuation">{</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">*</span><span class="number">0</span><span class="operator">,</span> <span class="variable">\[Alpha]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span></span><br><span class="line">      <span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">\[Beta]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Theta]</span><span class="operator">,</span> </span><br><span class="line">    <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Phi]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">2</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">Mesh</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Opacity</span><span class="punctuation">[</span><span class="number">0.1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Specularity</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">False</span> <span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p1Cir1</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">ParametricPlot3D</span><span class="punctuation">[</span></span><br><span class="line">   <span class="variable">M</span> <span class="operator">.</span> <span class="punctuation">{</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">\[Alpha]</span><span class="operator">*</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Phi]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Phi]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">2</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Dashed</span><span class="operator">,</span> <span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Opacity</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Specularity</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Thickness</span><span class="punctuation">[</span><span class="number">0.005</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">False</span> <span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p1Cir2</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">ParametricPlot3D</span><span class="punctuation">[</span></span><br><span class="line">   <span class="variable">M</span> <span class="operator">.</span> <span class="punctuation">{</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="variable">\[Beta]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Theta]</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> </span><br><span class="line">    <span class="number">2</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Dashed</span><span class="operator">,</span> <span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Opacity</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Specularity</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">False</span> <span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p1Cir3</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">ParametricPlot3D</span><span class="punctuation">[</span></span><br><span class="line">   <span class="variable">M</span> <span class="operator">.</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="operator">*</span><span class="variable">\[Alpha]</span><span class="operator">,</span> <span class="variable">\[Beta]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">\[Theta]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">\[Theta]</span><span class="operator">,</span> </span><br><span class="line">    <span class="number">0</span><span class="operator">,</span> <span class="number">2</span><span class="operator">*</span><span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Dashed</span><span class="operator">,</span> <span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Opacity</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Specularity</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Axes</span> <span class="operator">-&gt;</span> <span class="built_in">True</span> <span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">p2</span> <span class="operator">=</span> <span class="built_in">Graphics3D</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="comment">(*Text[Style["d1",18,Red],d1],*)</span></span><br><span class="line">    <span class="punctuation">{</span><span class="built_in">Red</span><span class="operator">,</span> <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">d1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="built_in">Red</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">d1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">    <span class="comment">(*Text[Style["d2",18,Red],d2],*)</span></span><br><span class="line">    <span class="punctuation">{</span><span class="built_in">Green</span><span class="operator">,</span> <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">d2</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="built_in">Green</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">d2</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">    <span class="comment">(*Text[Style["d3",18,Red],d3],*)</span></span><br><span class="line">    <span class="punctuation">{</span><span class="built_in">Blue</span><span class="operator">,</span> <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">d3</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="built_in">Blue</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Arrowheads</span><span class="punctuation">[</span><span class="variable">thickhead</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Arrow</span><span class="punctuation">[</span><span class="built_in">Tube</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">d3</span><span class="punctuation">}</span><span class="operator">,</span> <span class="variable">thickline</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">   <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"> <span class="variable">pexport</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Show</span><span class="punctuation">[</span><span class="comment">(*p1,*)</span><span class="variable">p2</span><span class="operator">,</span> <span class="variable">p1Cir1</span><span class="operator">,</span> <span class="variable">p1Cir2</span><span class="operator">,</span> <span class="variable">p1Cir3</span><span class="operator">,</span> <span class="variable">p1cut</span><span class="operator">,</span> <span class="variable">p2cut</span><span class="operator">,</span> <span class="variable">p3cut</span><span class="operator">,</span> <span class="variable">p2</span><span class="comment">(*,</span></span><br><span class="line"><span class="comment">   ViewPoint\[Rule]34*viewpt*)</span><span class="operator">,</span> <span class="built_in">AspectRatio</span> <span class="operator">-&gt;</span> <span class="number">1</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">ViewProjection</span> <span class="operator">-&gt;</span> <span class="string">"Orthographic"</span><span class="operator">,</span> <span class="built_in">AxesOrigin</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Lighting</span> <span class="operator">-&gt;</span> <span class="built_in">Automatic</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/3DDipoleWithCircle.gif" alt="3D dipole with sphere"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica和MATLAB绘图模板</title>
      <link href="/2023/01/07/C_%E6%95%99%E7%A8%8B_Mathematica%E5%92%8CMATLAB%E7%BB%98%E5%9B%BE%E6%A8%A1%E6%9D%BF/"/>
      <url>/2023/01/07/C_%E6%95%99%E7%A8%8B_Mathematica%E5%92%8CMATLAB%E7%BB%98%E5%9B%BE%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h1><p>本页面将会将常用的MATLAB和Mathematica命令总结出来，便于快速使用</p><ol><li>领域</li><li>做了什么</li><li>获得创新性</li></ol><h2 id="MATLAB"><a href="#MATLAB" class="headerlink" title="MATLAB"></a>MATLAB</h2><h3 id="MATLAB如何绘图而不显示？"><a href="#MATLAB如何绘图而不显示？" class="headerlink" title="MATLAB如何绘图而不显示？"></a>MATLAB如何绘图而不显示？</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">figure</span>(<span class="string">'visible'</span>,<span class="string">'off'</span>);</span><br><span class="line"><span class="built_in">plot</span>(a)</span><br><span class="line">saveas(f,<span class="string">'newout'</span>,<span class="string">'fig'</span>)</span><br></pre></td></tr></table></figure><h3 id="MATLAB如何设置图片宽度和大小"><a href="#MATLAB如何设置图片宽度和大小" class="headerlink" title="MATLAB如何设置图片宽度和大小"></a>MATLAB如何设置图片宽度和大小</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set(gcf,<span class="string">'units'</span>,<span class="string">'normalzied'</span>,<span class="string">'position'</span>,[x,y,width,height])</span><br></pre></td></tr></table></figure><h3 id="MATLAB绘图使用全屏"><a href="#MATLAB绘图使用全屏" class="headerlink" title="MATLAB绘图使用全屏"></a>MATLAB绘图使用全屏</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f=<span class="built_in">figure</span>(<span class="string">'visible'</span>,<span class="string">'on'</span>,<span class="string">'units'</span>,<span class="string">'normalized'</span>,<span class="string">'outerposition'</span>,[<span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span>]);</span><br></pre></td></tr></table></figure><h3 id="MATLAB如何使用-tight-subplot"><a href="#MATLAB如何使用-tight-subplot" class="headerlink" title="MATLAB如何使用-tight-subplot"></a>MATLAB如何使用-tight-subplot</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% Directly show figures</span></span><br><span class="line">fig1=<span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line">set(gcf,<span class="string">'units'</span>,<span class="string">'normalized'</span>,<span class="string">'Position'</span>, [<span class="number">0.1</span> <span class="number">0.1</span> <span class="number">0.6</span> <span class="number">0.8</span>])</span><br><span class="line">[ha, pos] = tight_subplot(<span class="number">4</span>,<span class="number">4</span>,[<span class="number">.05</span> <span class="number">.01</span>],[<span class="number">.1</span> <span class="number">.1</span>],[<span class="number">.05</span> <span class="number">.05</span>]);</span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:<span class="number">16</span></span><br><span class="line">    axes(ha(l));</span><br><span class="line">    pcolor(x_grid,y_grid,decay_sort(:,:,l));shading interp;colormap jet;colorbar;</span><br><span class="line">    axis tight</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">sgtitle(<span class="string">'original data'</span>)</span><br></pre></td></tr></table></figure><h3 id="MATLAB让NAN变成0"><a href="#MATLAB让NAN变成0" class="headerlink" title="MATLAB让NAN变成0"></a>MATLAB让NAN变成0</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mat(<span class="built_in">isnan</span>(mat))=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="matlab打印当前时间以及显示信息"><a href="#matlab打印当前时间以及显示信息" class="headerlink" title="matlab打印当前时间以及显示信息"></a>matlab打印当前时间以及显示信息</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">showtext=[datestr(now, <span class="string">'yyyy-mm-dd HH:MM:SS'</span>),<span class="string">' Connecting to server succssfully! \n'</span>];</span><br><span class="line">fprintf(showtext);</span><br></pre></td></tr></table></figure><h3 id="MATLAB关闭提示信息"><a href="#MATLAB关闭提示信息" class="headerlink" title="MATLAB关闭提示信息"></a>MATLAB关闭提示信息</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">w = warning(<span class="string">'query'</span>,<span class="string">'last'</span>);</span><br><span class="line">id = w.identifier;</span><br><span class="line">warning(<span class="string">'off'</span>,id);</span><br></pre></td></tr></table></figure><h3 id="MATLAB导出EPS高清图片"><a href="#MATLAB导出EPS高清图片" class="headerlink" title="MATLAB导出EPS高清图片"></a>MATLAB导出EPS高清图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set(gcf,'Renderer','Painter');</span><br><span class="line">hgexport(gcf,figure_save);</span><br></pre></td></tr></table></figure><h3 id="matlab绘图速查表"><a href="#matlab绘图速查表" class="headerlink" title="matlab绘图速查表"></a>matlab绘图速查表</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/cheatsheet_large.png" alt=""></p><h3 id="MATLAB如何改变坐标和字体"><a href="#MATLAB如何改变坐标和字体" class="headerlink" title="MATLAB如何改变坐标和字体"></a>MATLAB如何改变坐标和字体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xlabel('\omega_{1}/\Gamma','fontsize',15,'fontname','times new roman');</span><br><span class="line">ylabel('\omega_{2}/\Gamma','fontsize',15,'fontname','times new roman');</span><br><span class="line">set(gca,'FontName','times new roman','Fontsize',15,'XColor','k','YColor','k','LineWidth',1.3);</span><br><span class="line">set(gcf,'Renderer','Painter');</span><br><span class="line">hgexport(gcf,figure_save);</span><br></pre></td></tr></table></figure><h2 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h2><h3 id="一般的线图"><a href="#一般的线图" class="headerlink" title="一般的线图"></a>一般的线图</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Frame</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">FrameLabel</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"x"</span><span class="operator">,</span> <span class="string">"y"</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">Joined</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">7</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0.1</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">  <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">20</span><span class="operator">,</span> <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Times"</span><span class="operator">,</span> <span class="built_in">FontColor</span> <span class="operator">-&gt;</span> <span class="built_in">Black</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line"> <span class="built_in">FrameStyle</span> <span class="operator">-&gt;</span> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Thickness</span> <span class="operator">-&gt;</span> <span class="number">0.005</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> <span class="built_in">Placed</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="string">"Re"</span><span class="operator">,</span> <span class="string">"Im"</span><span class="operator">,</span> <span class="string">"Abs"</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0.2</span><span class="operator">,</span> <span class="number">0.5</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="如何固定每一个图的轴大小是定值？"><a href="#如何固定每一个图的轴大小是定值？" class="headerlink" title="如何固定每一个图的轴大小是定值？"></a>如何固定每一个图的轴大小是定值？</h3><p>需要手动设置图的大小以及图框的填坑比例<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">ImagePaddingSet</span> <span class="operator">=</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">80</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">50</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line"><span class="variable">Ratio</span><span class="operator">=</span><span class="number">1</span><span class="operator">/</span><span class="number">1.25</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(*绘图语句*)</span></span><br><span class="line"><span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line"> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">20</span><span class="operator">,</span> <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Helvetica"</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">FontColor</span> <span class="operator">-&gt;</span> <span class="built_in">Black</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">FrameStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line"> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Black</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">Thickness</span> <span class="operator">-&gt;</span> </span><br><span class="line">   <span class="number">0.005</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">PlotStyle</span> <span class="operator">-&gt;</span> <span class="variable">StyleLine</span><span class="operator">,</span> <span class="built_in">AspectRatio</span> <span class="operator">-&gt;</span> <span class="variable">Ratio</span><span class="operator">,</span> <span class="built_in">ImagePadding</span> \</span><br><span class="line"><span class="operator">-&gt;</span><span class="variable">ImagePaddingSet</span><span class="operator">,</span> <span class="built_in">ImageSize</span> <span class="operator">-&gt;</span> <span class="number">400</span></span><br></pre></td></tr></table></figure></p><h3 id="图例自定义形状和位置"><a href="#图例自定义形状和位置" class="headerlink" title="图例自定义形状和位置"></a>图例自定义形状和位置</h3><p>一些设置marker的<a href="https://mathematica.stackexchange.com/questions/84857/how-can-we-make-publication-quality-plotmarkers-without-version-10">方法</a><br>绘制好看的点线图，可以自己设置矩形的图例<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Marker1</span> <span class="operator">=</span> <span class="built_in">Table</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Graphics</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">EdgeForm</span><span class="punctuation">[</span><span class="built_in">Thickness</span><span class="punctuation">[</span><span class="number">0.1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="punctuation">{</span></span><br><span class="line"><span class="built_in">Rational</span><span class="punctuation">[</span><span class="number">11</span><span class="operator">,</span> <span class="number">51</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line"><span class="built_in">Rational</span><span class="punctuation">[</span><span class="number">42</span><span class="operator">,</span> <span class="number">85</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line"><span class="built_in">Rational</span><span class="punctuation">[</span><span class="number">184</span><span class="operator">,</span> <span class="number">255</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Polygon</span><span class="punctuation">[</span><span class="built_in">CirclePoints</span><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">0.04</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">i</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="variable">L</span><span class="operator">,</span> </span><br><span class="line">    <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><br>也可以自己修改位置<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">l1</span> <span class="operator">=</span> <span class="built_in">ListLinePlot</span><span class="punctuation">[</span><span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">\[Kappa]</span><span class="variable">swep</span><span class="operator">,</span> <span class="variable">SvNCea1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotMarkers</span> <span class="operator">-&gt;</span> <span class="variable">Marker1</span><span class="operator">,</span> <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">2</span><span class="operator">,</span> <span class="number">20</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0.5</span><span class="operator">,</span> <span class="number">1.6</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Frame</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">20</span><span class="operator">,</span> <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Times"</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">FontColor</span> <span class="operator">-&gt;</span> <span class="built_in">Black</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Placed</span><span class="punctuation">[</span><span class="built_in">LineLegend</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="string">"C(e,\!\(\*SubscriptBox[\(a\), \(1\)]\),0)=1"</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">       <span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Helvetica"</span><span class="operator">,</span> <span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">15</span><span class="operator">,</span> </span><br><span class="line">        <span class="built_in">Black</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">LegendLayout</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"Column"</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0.5</span><span class="operator">,</span> <span class="number">0.75</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">FrameStyle</span> <span class="operator">-&gt;</span> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Thickness</span> <span class="operator">-&gt;</span> <span class="number">0.005</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">FrameLabel</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"\[Kappa]/\!\(\*SubscriptBox[\(\[Kappa]\), \(opt\)]\</span></span><br><span class="line"><span class="string">\)"</span><span class="operator">,</span> <span class="string">"SvN"</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">l2</span> <span class="operator">=</span> <span class="built_in">ListLinePlot</span><span class="punctuation">[</span><span class="built_in">Thread</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">\[Kappa]</span><span class="variable">swep</span><span class="operator">,</span> <span class="variable">SvNCa1a1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotMarkers</span> <span class="operator">-&gt;</span> <span class="variable">Marker2</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> </span><br><span class="line">    <span class="built_in">Placed</span><span class="punctuation">[</span><span class="built_in">LineLegend</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="string">"C(\!\(\*SubscriptBox[\(a\), \</span></span><br><span class="line"><span class="string">\(1\)]\),\!\(\*SubscriptBox[\(a\), \(1\)]\),0)=1"</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">      <span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Helvetica"</span><span class="operator">,</span> <span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">15</span><span class="operator">,</span> </span><br><span class="line">        <span class="built_in">Black</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">LegendLayout</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"Column"</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0.5</span><span class="operator">,</span> <span class="number">0.75</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Show</span><span class="punctuation">[</span><span class="variable">l1</span><span class="operator">,</span> <span class="variable">l2</span><span class="punctuation">]</span> <span class="operator">//</span> <span class="variable">fixTickThickness</span></span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage 20220212145757.png" alt=""></p><h3 id="手动设置Ticks"><a href="#手动设置Ticks" class="headerlink" title="手动设置Ticks"></a>手动设置Ticks</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">p1plot</span> <span class="operator">=</span> <span class="built_in">Plot</span><span class="punctuation">[</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="number">10</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">Frame</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="operator">-</span><span class="number">10</span><span class="operator">,</span> <span class="number">10</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">   <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">20</span><span class="operator">,</span> <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Times New Roman"</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">FontColor</span> <span class="operator">-&gt;</span> <span class="built_in">Black</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">FrameStyle</span> <span class="operator">-&gt;</span> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Thickness</span> <span class="operator">-&gt;</span> <span class="number">0.005</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">FrameTicks</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="variable">Charting</span><span class="operator">`</span><span class="variable">ScaledTicks</span><span class="punctuation">[</span><span class="string">"Linear"</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">5</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">None</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">Charting</span><span class="operator">`</span><span class="variable">ScaledTicks</span><span class="punctuation">[</span><span class="string">"Linear"</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">10</span><span class="operator">,</span> <span class="number">10</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">10</span><span class="operator">,</span> <span class="number">2</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">None</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Pastedimage 20220702201810.png" alt=""></p><h3 id="Colorbar的设置"><a href="#Colorbar的设置" class="headerlink" title="Colorbar的设置"></a>Colorbar的设置</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> </span><br><span class="line"> <span class="built_in">Placed</span><span class="punctuation">[</span><span class="built_in">BarLegend</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="string">"TemperatureMap"</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="variable">pMax</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">None</span><span class="operator">,</span> </span><br><span class="line">   <span class="string">"Ticks"</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0.3</span><span class="operator">,</span> <span class="number">0.6</span><span class="operator">,</span> <span class="number">0.9</span><span class="operator">,</span> <span class="number">1.2</span><span class="operator">,</span> <span class="number">1.5</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">LegendMarkerSize</span> <span class="operator">-&gt;</span> <span class="number">125</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">LegendMargins</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="operator">-</span><span class="number">15</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Right</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="绘制一般的线图，默认参数"><a href="#绘制一般的线图，默认参数" class="headerlink" title="绘制一般的线图，默认参数"></a>绘制一般的线图，默认参数</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FrameLabel</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"\[Theta]"</span><span class="operator">,</span> <span class="string">"Probability"</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">Frame</span> <span class="operator">-&gt;</span> <span class="built_in">True</span><span class="operator">,</span></span><br><span class="line"><span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> </span><br><span class="line"> <span class="built_in">Placed</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="string">"xx"</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">0.5</span><span class="operator">,</span> </span><br><span class="line">   <span class="number">0.6</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">PlotTheme</span> <span class="operator">-&gt;</span> <span class="string">"Scientific"</span><span class="operator">,</span> <span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line"> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">15</span><span class="operator">,</span> <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Helvetica"</span><span class="operator">,</span> </span><br><span class="line">  <span class="built_in">FontColor</span> <span class="operator">-&gt;</span> <span class="built_in">Black</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">FrameStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line"> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Thickness</span> <span class="operator">-&gt;</span> <span class="number">0.005</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> Mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB生成GIF动图</title>
      <link href="/2022/10/08/C_%E6%95%99%E7%A8%8B_MATLAB%E7%94%9F%E6%88%90GIF%E5%8A%A8%E5%9B%BE/"/>
      <url>/2022/10/08/C_%E6%95%99%E7%A8%8B_MATLAB%E7%94%9F%E6%88%90GIF%E5%8A%A8%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-Dataprocessing"><a href="#MATLAB-Dataprocessing" class="headerlink" title="MATLAB #Dataprocessing"></a>MATLAB #Dataprocessing</h1><p>GIF现如今广泛流行于网络平台，因为其比图片具有更多的信息，同时又比视频具有更小的体积。</p><p>在科研、工作中，经常会需要将一个过程动态的展示出来，之前都是登录一些在线网站，上传生成的图片，没有网络的话就不方便，同时也不利于信息安全。</p><p>我最近发现MATLAB直接生成GIF也是非常方便的，写一篇笔记记录。</p><h2 id="方法1：直接绘图并生成GIF"><a href="#方法1：直接绘图并生成GIF" class="headerlink" title="方法1：直接绘图并生成GIF"></a>方法1：直接绘图并生成GIF</h2><p>第一种方法是直接生成GIF，实现的方法可以通过直接在MATLAB搜索GIF关键词来找到。需要首先通过代码绘制一系列图片，并且将这些图存储起来，然后通过代码将图片导入到一个GIF文件中。我这里直接给出代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% To generate a gif files from plot</span></span><br><span class="line"></span><br><span class="line">numx=<span class="number">100</span>;</span><br><span class="line">numt=<span class="number">20</span>;</span><br><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">6</span>*<span class="built_in">pi</span>,numx);</span><br><span class="line">t=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>,numt);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 1. Directly export gif figures needed</span></span><br><span class="line"><span class="comment">%--------------------------------------------------------------</span></span><br><span class="line">img_series=cell(numt,<span class="number">1</span>); <span class="comment">% 用一个Cell来存储fig对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Plot for different time</span></span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:numt</span><br><span class="line"></span><br><span class="line">    y=<span class="built_in">sin</span>(x-t(l));</span><br><span class="line">    fig=<span class="built_in">figure</span>();</span><br><span class="line">    <span class="built_in">plot</span>(x,y,<span class="string">'r-'</span>);</span><br><span class="line">    xlabel(<span class="string">'x'</span>);ylabel(<span class="string">'y'</span>);</span><br><span class="line">    drawnow;</span><br><span class="line">    frame = getframe(fig);</span><br><span class="line">    img_series{l,<span class="number">1</span>} = frame2im(frame);</span><br><span class="line">    close(fig);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Export GIF</span></span><br><span class="line">filename = <span class="string">'Export_1.gif'</span>; <span class="comment">% Specify the output file name</span></span><br><span class="line"><span class="keyword">for</span> idx = <span class="number">1</span>:numt</span><br><span class="line">    [A,map] = rgb2ind(img_series{idx},<span class="number">256</span>); <span class="comment">%标准操作</span></span><br><span class="line">    <span class="keyword">if</span> idx == <span class="number">1</span></span><br><span class="line">        imwrite(A,map,filename,<span class="string">'gif'</span>,<span class="string">'LoopCount'</span>,Inf,<span class="string">'DelayTime'</span>,<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        imwrite(A,map,filename,<span class="string">'gif'</span>,<span class="string">'WriteMode'</span>,<span class="string">'append'</span>,<span class="string">'DelayTime'</span>,<span class="number">0.5</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>生成的gif如下所示</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Export_1.gif" alt=""></p><h2 id="方法2：导入已有的一系列图片生成GIF"><a href="#方法2：导入已有的一系列图片生成GIF" class="headerlink" title="方法2：导入已有的一系列图片生成GIF"></a>方法2：导入已有的一系列图片生成GIF</h2><p>还有一些图片不是MATLAB生成的，而是本来就存在的，当进行合成的时候，需要我们先导入进来，主要是通过<code>imread</code>函数来导入图片。为了演示如何操作，我这里将绘制的图导出为<code>png</code>，然后再导入，再导出为gif。<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">% To generate a gif files from plot</span></span><br><span class="line"></span><br><span class="line">numx=<span class="number">100</span>;</span><br><span class="line">numt=<span class="number">20</span>;</span><br><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">6</span>*<span class="built_in">pi</span>,numx);</span><br><span class="line">t=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>,numt);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% Export png files and then load and exported into gif</span></span><br><span class="line"><span class="comment">% Create a series if png files</span></span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:numt</span><br><span class="line">    y=<span class="built_in">sin</span>(x-t(l));</span><br><span class="line">    fig=<span class="built_in">figure</span>();</span><br><span class="line">    <span class="built_in">plot</span>(x,y,<span class="string">'r-'</span>);</span><br><span class="line">    xlabel(<span class="string">'x'</span>);ylabel(<span class="string">'y'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">% Export PNG</span></span><br><span class="line">    fig_name=[<span class="string">'fig_no_'</span>,num2str(l),<span class="string">'.png'</span>];</span><br><span class="line">    print(fig_name,<span class="string">'-dpng'</span>);</span><br><span class="line">    close(fig);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Load the png files and then export</span></span><br><span class="line">delaytime=<span class="number">0.5</span>; <span class="comment">% unit is s</span></span><br><span class="line">exportedGIFName=<span class="string">'Export_2.gif'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:numt</span><br><span class="line">a=imread([<span class="string">'fig_no_'</span>,num2str(l),<span class="string">'.png'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 因为GIF文件不支持三维数据，所以应调用 rgb2ind，使用颜色图 map 将图像中的 RGB 数据转换为索引图像A</span></span><br><span class="line">[A, map] = rgb2ind(a,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">if</span> l==<span class="number">1</span></span><br><span class="line">   imwrite(A,map,exportedGIFName, <span class="string">'gif'</span>,<span class="string">'LoopCount'</span>,Inf,<span class="string">'DelayTime'</span>,delaytime);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   imwrite(A,map,exportedGIFName, <span class="string">'gif'</span>,<span class="string">'WriteMode'</span>,<span class="string">'append'</span>,<span class="string">'DelayTime'</span>,delaytime);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><br>结果与直接导出是一样的。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量子计算与量子信息（一）量子计算有关的历史</title>
      <link href="/2022/08/08/E_%E7%89%A9%E7%90%86-%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF%E4%B8%8E%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97%E5%8E%86%E5%8F%B2/"/>
      <url>/2022/08/08/E_%E7%89%A9%E7%90%86-%E9%87%8F%E5%AD%90%E4%BF%A1%E6%81%AF%E4%B8%8E%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Quantum-Optics"><a href="#Quantum-Optics" class="headerlink" title="Quantum #Optics"></a>Quantum #Optics</h1><p>一直想做一个量子计算的笔记，之前写了一个量子隐形传态的笔记，现在打算将基本历史做一个比较广的总结。</p><h2 id="早期计算机的发展"><a href="#早期计算机的发展" class="headerlink" title="早期计算机的发展"></a>早期计算机的发展</h2><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/HistoryofClassicalComputations.png" alt="早期计算机"></p><p>为了方便计算，早在古代，人们就发明了算盘等工具，这算是计算机最早的雏形。<br>在17世纪的欧洲，诞生了各种简单的机械的计算机，如Schickard在1623年以及Pascal在1642年发明了可以加减的机械计算机，1687年莱布尼兹发明了可以进行乘除运算的机械计算机等。<br>Charles Babbage在1834年构思、发明出了世界上第一台可编程的机械计算机，该机器包含了算术逻辑单元、控制单元以及集成内存，使其成为通用计算机的第一个设计，因此Charles Babbage被称为通用计算机之父。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/TuringMachine.png" alt="图灵机"><br>Alan Turing则在上世纪提出了著名的图灵机模型，同时基于对于计算机和人脑的对比，提出了图灵检验，其超前的思想使得他被称为“计算机科学之父”。<br>大名鼎鼎的冯·诺依曼则提出了冯·诺依曼架构，其将程序和数据一起存储在存储器中，使得早起的简单的硬件编程电子计算机变成了可以软件编程，并亲自参与了1946年的第一台图灵完备的电子数字计算机ENIAC的研制，冯诺依曼也被称为“计算机之父”。<br>不过世界上第一台电子计算机则是John Vincent Atanasoff在1939年制造的 “ABC机”，其逻辑元件采用的是真空电子管。<br>1947年12月，贝尔实验室的肖克利等人研制出了一种点接触型的锗晶体管，晶体管出现后，人们就能用一个小巧的、消耗功率低的电子器件，来代替体积大、功率消耗大的电子管了。之后晶体管开始被集成，由此经历了集成电路时代以及大规模集成电路时代。</p><h2 id="量子计算的发展"><a href="#量子计算的发展" class="headerlink" title="量子计算的发展"></a>量子计算的发展</h2><p><img src="https://upload.wikimedia.org/wikipedia/en/4/42/Richard_Feynman_Nobel.jpg" alt=""></p><p>量子计算的概念始于上世纪90年代，当时63岁的物理学家Richard Feynman在一次会议中作出了题为“Simulating physics with computers”的演讲，他提出要模拟计算我们周围的量子世界，仅仅用经典的计算机非常困难的，必须用量子力学的规律来设计计算机[1]。</p><p>同时，另外一位俄罗斯数学家Yuri Manin也在他的书中提出了要计算量子多体系统如果用经典的计算机所需的资源将会指数增加。</p><p>物理学家则 Paul Benioff[2] 发表了一系列文章提出了图灵机的量子力学模型[2]，他证明了对于每一个图灵机和任意数量的问题规模，都存在一个对应的哈密顿量和一类合适的初态，让图灵机的每一步的计算对应到纯态的演化过程中。</p><p>David Deutsch在1985年发表了那篇影响深远的文章[3]，他提出了加强版的“Church–Turing principle”：任意物理上可有限实现的系统均能被一个通用计算机在有限资源下完美模拟。他指出量子图灵机可以满足加强版的加强版的“Church–Turing principle”，同时他还指出了量子计算机不仅仅可以被用来解决量子问题，由于量子计算的并行性、随机性以及量子关联等，一些经典的问题也可以通过量子计算机得到极大的加速。这些概念都极大的指导了后续计算机科学的研究。</p><p>在上述物理学家的启发带领下，量子计算有关的理论、实验相继被做出。</p><p>1992年David Deutsch和Richard Jozsa找到了一种特殊的Deutsch–Jozsa算法和问题[10]，对于量子计算很容易但是对于经典计算机来说却很困难，证明了量子计算在某些问题上的优越性。</p><p>Peter Shor在1994年提出了Shor算法[11]，提出了量子计算机在解决质因数分解上的高效性，其速度远胜传统电脑，对于现在通行于银行及网络等处的RSA加密算法可以破解而构成威胁。</p><p>Lov K. Grover则在1996年提出了Grover算法[12]，用来加速搜索，被公认为即Shor算法之后的第二大经典量子算法。</p><p>1998年 Bernhard Omer提出了量子计算编程语言[13]，拉开了量子计算机可编程的帷幕。</p><p>2000年DiViCenzo提出了实现通用的量子计算机需要满足的五个条件[14]：（1）具有可大规模拓展的高质量的量子比特；（2）量子比特可以被初始化到简单的基态，如<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.165ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3167 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mn" transform="translate(278,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(2000,0)"></path></g><g data-mml-node="mo" transform="translate(2778,0)"><path data-c="27E9" d="M55 732Q56 739 61 744T75 750Q85 750 92 740Q95 733 186 494T278 250T187 6T92 -240Q85 -250 75 -250Q67 -250 62 -245T55 -232Q55 -227 145 11Q236 248 236 250T145 489Q55 727 55 732Z"></path></g></g></g></svg></mjx-container>；（3）系统的退相干时间要比逻辑门操作的时间要长；（4）可以实现通用的逻辑门操作；（5）可以对特定的量子比特进行测量；2009年MIT三位科学家联合提出了一种求解线性系统的HHL算法[15]，其有望使得量子计算在机器学习、人工智能科技取得突破。</p><p>在理论发展的同时，人们开始在各种不同的物理系统中进行量子计算的实现。如NMR[6]，超导系统[7]、半导体量子点系统[5]，离子阱系统[4]、量子拓扑系统[16,17]以及光学系统等。每一种系统都有各自的优势和缺点，并在目前都取得了进展。同时D-Wave，Intel，IBM，Google、微软等商业公司也纷纷加入了量子计算机的研制。目前最成功的当属超导量子比特，2019年Google公司的研究人员构建了一台由54个量子比特组成的Sycamore处理器[7]，其用来进行量子线路采样计算，他们表明该量子处理器在200秒内进行100万次样本采集。2020年，中国科学技术大学的潘建伟院士团队通过光学系统构建了由76个光子组成的量子计算机“九章”[8]，对于高斯波色采样进行了快速求解。</p><h2 id="什么是计算？"><a href="#什么是计算？" class="headerlink" title="什么是计算？"></a>什么是计算？</h2><p>计算是我们人类才有的概念，自然界每天都在不停的演化，我们人类会提出一些抽象的理论模型，来对自然界进行描述，包括对于未来的预测以及历史的探究等，当然描述不是全部描述，只需要将我们关心的物理性质提取出来，比如位置、动量、温度等。这些理论模型往往涉及到一些复杂的逻辑推理和数学运算，比如量子力学就是需要我们来解薛定谔方程，仅仅靠人用笔和纸来进行计算是不够高效的，图灵最早构想图灵机也是想象的有一个机器能够模拟我们人类在纸上进行运算这一活动。</p><p>为了能够高效的求解量子问题，最好是用量子图灵机来进行。这样一个量子图灵机的物理实现，可以先用一些抽象简化的物理模型来进行研究，我觉得这些模型主要可以分为两类，一类是波包性质的，即需要传播的，比如光子、声波等（还有一些自旋波这种不是很懂，可能也是抽象出来的准粒子？），其<strong>能级是一个连续谱</strong>；一类是具体的局域的物理系统或者物质，<strong>其能级一般是分离的，</strong>包括各种多能级系统、谐振腔、非线性晶体等。用这些抽象的物理模型之间的耦合、能量交换来进行量子计算，也对应着不同的物理平台。</p><p>我做了下面的一个示意图来描述量子计算的思路。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/图片10.png" alt="计算的过程"><br>以下是上图的一些参考文献：<br>[1] H.-S. Zhong, H. Wang, Y.-H. Deng, M.-C. Chen, L.-C. Peng, Y.-H. Luo, et al. Quantum Computational Advantage Using Photons. Science, 2020, 370(6523): 1460–1463<br>[2] J.-P. Li, X. Gu, J. Qin, D. Wu, X. You, H. Wang, et al. Heralded Nondestructive Quantum Entangling Gate with Single-Photon Sources. Physical Review Letters, 2021, 126(14): 140501<br>[3] B. Hacker, S. Welte, G. Rempe, S. Ritter. A Photon–Photon Quantum Gate Based on a Single Atom in an Optical Resonator. Nature, 2016, 536(7615): 193–196<br>[4] E. Pelucchi, G. Fagas, I. Aharonovich, D. Englund, E. Figueroa, Q. Gong, et al. The Potential and Global Outlook of Integrated Photonics for Quantum Technologies. Nature Reviews Physics, 2021: 1–15<br>[5] R. Blatt, D. Wineland. Entangled States of Trapped Atomic Ions. Nature, 2008, 453(7198): 1008–1015<br>[6] X. Zhang, H.-O. Li, G. Cao, M. Xiao, G.-C. Guo, G.-P. Guo. Semiconductor Quantum Computation. National Science Review, 2019, 6(1): 32–54<br>[7] R. Laflamme, E. Knill, D. G. Cory, E. M. Fortunato, T. Havel, C. Miquel, et al. Introduction to NMR Quantum Information Processing. ArXiv:Quant-Ph/0207172, 2002<br>[8] F. Arute, K. Arya, R. Babbush, D. Bacon, J. C. Bardin, R. Barends, et al. Quantum Supremacy Using a Programmable Superconducting Processor. Nature, 2019, 574(7779): 505–510</p><h2 id="不同的量子计算模型"><a href="#不同的量子计算模型" class="headerlink" title="不同的量子计算模型"></a>不同的量子计算模型</h2><p>对于经典的计算过程，除了图灵提出的图灵机模型以外，还有诸如随机存取机（Random-access machine），布尔电路模型（Boolean circuits），<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.027ex;" xmlns="http://www.w3.org/2000/svg" width="1.319ex" height="1.597ex" role="img" focusable="false" viewBox="0 -694 583 706"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g></g></g></svg></mjx-container>演算模型（Lambda calculus）以及各种通用编程语言（Universal programming languages）等模型，这些模型都是和图灵机等价的。</p><p>而量子计算除了同样的量子图灵机模型外，也有量子逻辑门电路（Quantum Circuit）模型，量子退火（Quantum annealing）（或者绝热量子计算）模型、基于测量的量子计算模型（measurement-based quantum computation）以及连续或者分立的量子随机行走模型等。我接下来将会用简要的语言概括其主要思想，因为有一些模型和我们的工作是有交叉的。</p><h3 id="1-量子线路模型-Quantum-circuit-model"><a href="#1-量子线路模型-Quantum-circuit-model" class="headerlink" title="1.  量子线路模型 (Quantum circuit model)"></a>1.  量子线路模型 (Quantum circuit model)</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/SchematicofQuantumCircuit.png" alt="量子线路模型示意图"><br>这是一种最常见最熟悉的模型，大家讨论量子计算的时候，也会和经典计算的逻辑电路进行类比，这样更加易于接受。量子逻辑电路模型主要分为三个部分：</p><ol><li>量子态的初始化<script type="math/tex; mode=display">|\psi\rangle=\left|\psi_{1}\right\rangle \otimes\left|\psi_{2}\right\rangle \otimes\left|\psi_{3}\right\rangle \otimes \ldots\left|\psi_{n-1}\right\rangle \otimes\left|\psi_{n}\right\rangle</script></li><li>通用的逻辑门操作</li></ol><script type="math/tex; mode=display">|\Psi'\rangle=\hat{U}|\Psi\rangle</script><ol><li>测量<br>在该量子模型中，除了最后一步测量以外，其他的逻辑门操作都是幺正的、可逆的，这也是大家认为经典计算和量子计算的关键不同点，即基本思路是用一个量子系统的演化去模拟另外一个量子系统的演化，这两个系统的演化都是满足薛定谔方程的。</li></ol><h3 id="2-量子退火模型-绝热量子模型（Quantum-annealing-or-quantum-adiabatic-quantum-computations）"><a href="#2-量子退火模型-绝热量子模型（Quantum-annealing-or-quantum-adiabatic-quantum-computations）" class="headerlink" title="2. 量子退火模型/绝热量子模型（Quantum annealing or quantum adiabatic quantum computations）"></a>2. 量子退火模型/绝热量子模型（Quantum annealing or quantum adiabatic quantum computations）</h3><p>量子计算的过程就是一个系统从初态到末态的幺正演化，而绝热量子演化或者量子退火模型则是需要一个<strong>随时间变化的哈密顿量</strong>，让系统从初态到末态缓慢的演化，末态刚好是所需要的结果，即我们需要让哈密顿量从初始的!演化到目标的，可以进行如下的设置</p><script type="math/tex; mode=display">\widehat{H}(t)=s(t) \widehat{H}_{1}+(1-s(t)) \widehat{H}_{0}</script><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="3.638ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1608 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(469,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(858,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(1219,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>是从0缓慢增加到1的一个函数。这样一个绝热演化模型也是图灵等价的，可以实现通用的量子计算。DWave公司作为最早的开始商业的量子计算机的公司，其就是在实现量子退火算法，不过目前仍然是简单的量子退火算法的实现，达不到通用量子计算的程度，同时其实现的功能是否比经典计算机更快也收到质疑，因为其不像Google有真正的文章发表出来。</p><h3 id="3-基于测量的量子计算-Measurement-based-quantum-computation"><a href="#3-基于测量的量子计算-Measurement-based-quantum-computation" class="headerlink" title="3. 基于测量的量子计算(Measurement based quantum computation)"></a>3. 基于测量的量子计算(Measurement based quantum computation)</h3><p>基于测量的量子计算[18]，其在2001年提出，其不同之处在于，<strong>这篇文章打破了大家的一般的思路，即量子测量一定要是幺正演化的</strong>，演化完毕之后再进行相应测量。在该文章中，量子态被初始化到一个非常纠缠的态上，叫Cluster Sate，后续会有一些单比特门的测量，测量比特的顺序、在何种基矢下测量都是要根据所要进行的计算来决定的。</p><p>测量的过程中，有一些比特被测量之后，整个量子系统就少了一个比特，还有一些比特被测量之后，可以让另外的比特进行一个隐形传态的过程。</p><p>细节部分我可以再单独写一个专门的笔记，这是原文的一些表述：</p><blockquote><p>Here we propose a different model of a scalable quantum computer. <strong>In our model, the entire resource for the quantum computation is provided initially in the form of a specific entangled state (a so-called cluster state [6]) of a large number of qubits. Information is then written onto the cluster, processed, and read out from the cluster by one-particle measurements only.</strong> The entangled state of the cluster thereby serves as a universal “substrate” for any quantum computation. Cluster states can be created efficiently in any system with a quantum Ising-type interaction (at very low temperatures) between two-state particles in a lattice configuration.</p><p>To process quantum information with this network, it suffices to measure its particles in a certain order and in a certain basis. Quantum information is thereby propagated horizontally through the cluster by measuring the qubits on the wire while qubits on vertical connections are used to realize two-bit quantum gates. The basis in which a certain qubit is measured depends in general on the results of preceding measurements. <strong>The processing is finished once all qubits except the last one on each wire have been measured. At this point, the results of previous measurements determine in which basis these “output” qubits need to be measured for the final readout. We note that, in the entire process, only one-qubit measurements are required.</strong> The amount of entanglement therefore decreases with every measurement [8] and all entanglement involved in the process is provided by the initial resource, the cluster state. This is different from the scheme of Ref. [11], which uses Bell measurements (capable of producing entanglement) to realize quantum gates.</p></blockquote><p>而被大家在光学所广泛引用的则是另外一篇文章，叫做KLM算法。其和上述文章类似的思路，即要实现CNOT门操作，我们需要辅助的纠缠的光子，让纠缠的光子对和目标的光子、控制的光子通过分束器纠缠起来，然后在特定的位置进行测量，只有在一些特定情况下，比如特定分束器端的某个位置都探测到光子，则代表发生的是我们所需的演化，相应的控制门操作完成了，不然就得重新来，或者需要对光子进行操作。</p><p>不过对于光子的任意操作，则不需要测量，这是因为对于光子的单比特操作是非常容易的。</p><h3 id="4-量子行走模型-（Quantum-walk）"><a href="#4-量子行走模型-（Quantum-walk）" class="headerlink" title="4. 量子行走模型 （Quantum walk）"></a>4. 量子行走模型 （Quantum walk）</h3><p>随机行走即假想有一个“walker”在一个“Graph”上进行来回的走动，经典的和量子的随机行走都是初始化一个特定的图之后，然后让粒子随机的在上面漫步，一段时间之后对粒子处于某些位置的概率进行计算，其主要应用领域是一些问题的模拟以及一些搜索算法的实现，后来证明随机行走的量子模型也是和通用的图灵机等价，并可以用来进行通用的量子计算的。</p><p>量子的随机行走模型由两种，一种是连续时间的随机行走，一种是非连续的随机行走，主要区别是有没有人在投掷硬币。</p><h4 id="Discrete-Quantum-walk"><a href="#Discrete-Quantum-walk" class="headerlink" title="Discrete-Quantum walk"></a>Discrete-Quantum walk</h4><p><img src="file:///C:/Users/ZHAOHU~1/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg" alt=""><br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/图片5.png" alt="图灵机"><br><a href="https://www.koushare.com/video/videodetail/8416">https://www.koushare.com/video/videodetail/8416</a></p><p>如上图所示，是一个一维的随机行走过程，这个人每次都会掷硬币来决定接下来是向左走还是向右走，经典的随机行走只有一条路，但是量子的则是叠加的状态，最后停留位置的最大概率也是不一样的。</p><p>通过设计合适的“硬币”和“图”，可以让系统按照我们所需要的方式来演化，实现量子计算。</p><p>Viv Kendon[19]在2010年通过和quantum circuit模型对比，证明了这种投掷硬币的量子随机行走是可以进行通用的量子计算的。</p><h4 id="Continuous-quantum-walk"><a href="#Continuous-quantum-walk" class="headerlink" title="Continuous quantum walk"></a>Continuous quantum walk</h4><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/Snipaste_2022-08-08_16-18-59.png" alt="来自文章：arXiv:2004.01329"><br>而连续的量子行走则是没有硬币的概念，一个人在一个图决定的哈密顿量下进行连续的满足薛定谔方程的演化，</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/Snipaste_2022-08-08_16-18-07.png" alt="来自文章：arXiv:2004.01329"></p><p>这里面的主要人物是Childs, 他在2009年首先写了一篇文章证明了连续的随机行走因为可以通用的量子逻辑门而可以完成通用的量子计算[20]，<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/Snipaste_2022-08-08_16-19-35.png" alt="Science2013"></p><p>但是这个方法所需的资源很多，比如一个由N个比特组成的系统，其初态有个，然后末态也有个，物理实现的所需要的物理系统很多？</p><p>Childs在2013年又写了一篇Science文章，讲述了如何通过多个Walker，Walker之间还可以有相互作用，这样的一个系统来实现随机的量子行走，所需的资源不再是指数的形式。</p><p>这些工作Youtube上有一些视频，我看了之后还不能很好的消化。</p><p>Viv Kendon自己的报告：</p><p><a href="https://www.youtube.com/watch?v=jGyydbJceD0">https://www.youtube.com/watch?v=jGyydbJceD0</a></p><p>还有Childs的合作者的报告：</p><p><a href="https://www.youtube.com/watch?v=SwOc7kO7acM">https://www.youtube.com/watch?v=SwOc7kO7acM</a></p><p>但是量子随机行走应该是一种Passive的方式，需要合适的物理系统来实现。</p><h3 id="5-拓扑量子计算-Topological-quantum-computation"><a href="#5-拓扑量子计算-Topological-quantum-computation" class="headerlink" title="5. 拓扑量子计算(Topological quantum computation)"></a>5. 拓扑量子计算(Topological quantum computation)</h3><p>这是目前还停留在理论的模型，其使用的是一种“任意子”的准粒子来进行量子计算，因为拓扑的保护，这样的量子计算会不容易受到周围环境的干扰而出错。</p><p>目前好像就微软在大力的支持该方向的工作。因为对于拓扑的相关知识不是很清楚，所以没有深入研究。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]  R. P. Feynman. Simulating Physics with Computers. International Journal of Theoretical Physics, 1982, 21(6): 467–488</p><p>[2]  P. Benioff. Quantum Mechanical Hamiltonian Models of Turing Machines. Journal of Statistical Physics, 1982, 29(3): 515–546</p><p>[3]  D. Deutsch. Quantum Theory, the Church-Turing Principle and the Universal Quantum Computer(1985)</p><p>[4]  R. Blatt, D. Wineland. Entangled States of Trapped Atomic Ions. Nature, 2008, 453(7198): 1008–1015</p><p>[5]  X. Zhang, H.-O. Li, G. Cao, M. Xiao, G.-C. Guo, G.-P. Guo. Semiconductor Quantum Computation. National Science Review, 2019, 6(1): 32–54</p><p>[6]  R. Laflamme, E. Knill, D. G. Cory, E. M. Fortunato, T. Havel, C. Miquel, et al. Introduction to NMR Quantum Information Processing. ArXiv:Quant-Ph/0207172, 2002</p><p>[7]  F. Arute, K. Arya, R. Babbush, D. Bacon, J. C. Bardin, R. Barends, et al. Quantum Supremacy Using a Programmable Superconducting Processor. Nature, 2019, 574(7779): 505–510</p><p>[8]  H.-S. Zhong, H. Wang, Y.-H. Deng, M.-C. Chen, L.-C. Peng, Y.-H. Luo, et al. Quantum Computational Advantage Using Photons. Science, 2020, 370(6523): 1460–1463</p><p>[9]  J. M. Arrazola, V. Bergholm, K. Brádler, T. R. Bromley, M. J. Collins, I. Dhand, et al. Quantum Circuits with Many Photons on a Programmable Nanophotonic Chip. Nature, 2021, 591(7848): 54–60</p><p>[10] D. Deutsch, R. Jozsa. Rapid Solution of Problems by Quantum Computation. Proceedings of the Royal Society of London. Series A: Mathematical and Physical Sciences, 1992, 439(1907): 553–558</p><p>[11] L. M. K. Vandersypen, M. Steffen, G. Breyta, C. S. Yannoni, M. H. Sherwood, I. L. Chuang. Experimental Realization of Shor’s Quantum Factoring Algorithm Using Nuclear Magnetic Resonance. Nature, 2001, 414(6866): 883–887</p><p>[12] L. K. Grover. A Fast Quantum Mechanical Algorithm for Database Search. ArXiv:Quant-Ph/9605043, 1996</p><p>[13] B. Ömer. A Procedural Formalism for Quantum Computing.</p><p>[14] D. P. DiVincenzo. The Physical Implementation of Quantum Computation. Fortschritte Der Physik: Progress of Physics, 2000, 48(9‐11): 771–783</p><p>[15] A. W. Harrow, A. Hassidim, S. Lloyd. Quantum Algorithm for Linear Systems of Equations. Physical Review Letters, 2009, 103(15): 150502</p><p>[16] A. Yu. Kitaev. Fault-Tolerant Quantum Computation by Anyons. Annals of Physics, 2003, 303(1): 2–30</p><p>[17] N. E. Bonesteel, L. Hormozi, G. Zikos, S. H. Simon. Braid Topologies for Quantum Computation. Physical Review Letters, 2005, 95(14): 140503</p><p>[18] R. Raussendorf, H. J. Briegel. A One-Way Quantum Computer. Physical Review Letters, 2001, 86(22): 5188–5191</p><p>[19] N. B. Lovett, S. Cooper, M. Everitt, M. Trevers, V. Kendon. Universal Quantum Computation Using the Discrete-Time Quantum Walk. Physical Review A, 2010, 81(4): 042330</p><p>[20] A. M. Childs. Universal Computation by Quantum Walk. Physical Review Letters, 2009, 102(18): 180501</p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QuantumInformation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica颜色图使用技巧</title>
      <link href="/2022/06/06/C_%E6%95%99%E7%A8%8B_Mathematica%E9%A2%9C%E8%89%B2%E5%9B%BE%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/06/06/C_%E6%95%99%E7%A8%8B_Mathematica%E9%A2%9C%E8%89%B2%E5%9B%BE%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h1><p>Mathematica, MATLAB以及Python的不同函数库都有自己风格的颜色图，当使用其中一种软件的时候，想用另外一个软件的颜色图就需要费一些功夫。<br>我之前写了一篇笔记记录如何将Python、MATLAB以及Origin中使用彼此的颜色图<br>:<br><a href="https://zhuanlan.zhihu.com/p/392858132">知乎：如何获取Python的颜色图供Origin使用？</a><br><a href="https://knifelees3.github.io/2021/07/24/C_%E6%95%99%E7%A8%8B_Python%E7%94%9F%E6%88%90Origin%E6%88%96%E8%80%85MATLAB%E6%89%80%E9%9C%80%E9%A2%9C%E8%89%B2%E5%9B%BE%E6%96%87%E4%BB%B6/">个人博客：如何获取Python的颜色图供Origin使用？</a></p><p>以及如何自定义颜色图<br><a href="https://zhuanlan.zhihu.com/p/349138194">知乎：MATLAB如何自定义颜色图（colormap）</a><br><a href="https://knifelees3.github.io/2021/01/30/C_%E6%95%99%E7%A8%8B_MATLAB%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A2%9C%E8%89%B2%E6%9B%B2%E7%BA%BF/">个人博客:MATLAB如何自定义颜色曲线</a></p><p>最近我想再Mathematica使用常见的”jet”颜色图，并且希望将Mathematica的颜色图导出在MATLAB使用，中间遇到了一些问题，在这里将解决方法记录下来。</p><h2 id="如何在Mathematica中更好的使用“jet”函数"><a href="#如何在Mathematica中更好的使用“jet”函数" class="headerlink" title="如何在Mathematica中更好的使用“jet”函数"></a>如何在Mathematica中更好的使用“jet”函数</h2><h3 id="如何使用Jet函数"><a href="#如何使用Jet函数" class="headerlink" title="如何使用Jet函数"></a>如何使用Jet函数</h3><p>“jet”颜色图的使用可以通过手动定义函数的方法来实现，<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">jet</span><span class="punctuation">[</span><span class="type">u_</span><span class="operator">?</span><span class="built_in">NumericQ</span><span class="punctuation">]</span><span class="operator">:=</span><span class="built_in">Blend</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">0</span><span class="operator">,</span><span class="number">0</span><span class="operator">,</span><span class="number">9</span><span class="operator">/</span><span class="number">16</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span><span class="punctuation">{</span><span class="number">1</span><span class="operator">/</span><span class="number">9</span><span class="operator">,</span><span class="built_in">Blue</span><span class="punctuation">}</span><span class="operator">,</span><span class="punctuation">{</span><span class="number">23</span><span class="operator">/</span><span class="number">63</span><span class="operator">,</span><span class="built_in">Cyan</span><span class="punctuation">}</span><span class="operator">,</span><span class="punctuation">{</span><span class="number">13</span><span class="operator">/</span><span class="number">21</span><span class="operator">,</span><span class="built_in">Yellow</span><span class="punctuation">}</span><span class="operator">,</span><span class="punctuation">{</span><span class="number">47</span><span class="operator">/</span><span class="number">63</span><span class="operator">,</span><span class="built_in">Orange</span><span class="punctuation">}</span><span class="operator">,</span><span class="punctuation">{</span><span class="number">55</span><span class="operator">/</span><span class="number">63</span><span class="operator">,</span><span class="built_in">Red</span><span class="punctuation">}</span><span class="operator">,</span><span class="punctuation">{</span><span class="number">1</span><span class="operator">,</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span><span class="number">0</span><span class="operator">,</span><span class="number">0</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span><span class="variable">u</span><span class="punctuation">]</span><span class="operator">/;</span><span class="number">0</span><span class="operator">&lt;=</span><span class="variable">u</span><span class="operator">&lt;=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><br>解决思路来自<br><a href="https://stackoverflow.com/questions/5753508/custom-colorfunction-colordata-in-arrayplot-and-similar-functions/9321152#9321152">Custom ColorFunction/ColorData in ArrayPlot (and similar functions)</a><br>在Mathematica中使用时只需要添加<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Colorfunction</span><span class="operator">-&gt;</span><span class="variable">jet</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>即可。</p><h3 id="如何自定义颜色的取值范围"><a href="#如何自定义颜色的取值范围" class="headerlink" title="如何自定义颜色的取值范围"></a>如何自定义颜色的取值范围</h3><p>在Mathematica中绘图时，采用<code>ListDensityPlot</code>函数画出来的颜色图的取值范围默认是数据的最大值或者最小值，这在一些情况下不能满足我们的需要，因为我们希望颜色图对应的范围为一些整数值，在MATLAB中可以直接通过<code>caxis([min,max])</code>来定义颜色范围，而在Mathematica中则需要自己进行定义，<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DensityPlot</span><span class="punctuation">[</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">y</span><span class="operator">,</span> <span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">ColorFunction</span> <span class="operator">-&gt;</span> <span class="punctuation">(</span><span class="built_in">ColorData</span><span class="punctuation">[</span><span class="string">"TemperatureMap"</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Rescale</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="operator">,</span> <span class="built_in">ColorFunctionScaling</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> <span class="built_in">BarLegend</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Automatic</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><br><img src="https://i.stack.imgur.com/QrJlG.png" alt="test"><br>上面的绘图方式将范围限制了(-1,1)，注意关键是<code>ColorFunction -&gt; (ColorData["TemperatureMap",      Rescale[#, {-1, 1}]] &amp;), ColorFunctionScaling -&gt; False,  PlotLegends -&gt; BarLegend[{Automatic, {-1, 1}}]</code>这三句命令。这是对于系统内部就有的颜色函数，可以采用<code>(ColorData["TemperatureMap",  Rescale[#, {-1, 1}]] &amp;)</code>的方式来缩放范围，如果是我们自己定义的“jet”函数呢？我在<a href="https://mathematica.stackexchange.com/questions/269111/how-to-set-fixed-colorbar-values-for-jet-colormap">Mathematica StackExchange</a>上问了，但是在得到答复之前自己解决了：<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DensityPlot</span><span class="punctuation">[</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">*</span><span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span><span class="operator">*</span><span class="number">0.3</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">y</span><span class="operator">,</span> <span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">ColorFunction</span> <span class="operator">-&gt;</span> <span class="punctuation">(</span><span class="variable">jet</span><span class="punctuation">[</span><span class="built_in">Rescale</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">3</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">ColorFunctionScaling</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> <span class="built_in">BarLegend</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Automatic</span><span class="operator">,</span> <span class="punctuation">{</span><span class="operator">-</span><span class="number">3</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.stack.imgur.com/xBiYi.png" alt=""></p><p>关键是<code>ColorFunction -&gt; (jet[Rescale[#, {-3, 3}]] &amp;)</code>。</p><h2 id="如何在Mathematica中使用Python或者MATLAB导出的颜色数据"><a href="#如何在Mathematica中使用Python或者MATLAB导出的颜色数据" class="headerlink" title="如何在Mathematica中使用Python或者MATLAB导出的颜色数据"></a>如何在Mathematica中使用Python或者MATLAB导出的颜色数据</h2><p>(解决主要来源于<a href="https://mathematica.stackexchange.com/questions/118412/implementing-a-custom-colormap">StackExchange</a>)<br>之前讲的<code>jet</code>函数是通过函数精确定义的，更加常见的场景是导入一些MATLAB或者Python的颜色图数据，然后在MATLAB使用。我这里介绍如何使用MATLAB的<code>hot</code>函数，<br>首先我们使用MATLAB的颜色函数<code>hot</code>产生所需的RGB三维数据，并将其和范围<code>[0,1]</code>合并写成一个四维数组，<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">num=<span class="number">256</span>;</span><br><span class="line">var=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">1</span>,num);</span><br><span class="line">list=hot(num);</span><br><span class="line">hotmap=[var',list];</span><br><span class="line">save(<span class="string">'hotmap.mat'</span>,<span class="string">'hotmap'</span>);</span><br></pre></td></tr></table></figure><br>这里导出的文件’hotmap.mat’就是颜色数据，需要再在Mathematica打开，<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SetDirectory</span><span class="punctuation">[</span><span class="built_in">NotebookDirectory</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">cmapdata</span> <span class="operator">=</span> <span class="built_in">Import</span><span class="punctuation">[</span><span class="string">"./hotmap.mat"</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">hotmapdata</span> <span class="operator">=</span> </span><br><span class="line">  <span class="built_in">Table</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">cmapdata</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="variable">l</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="variable">cmapdata</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">,</span> <span class="variable">l</span><span class="operator">,</span> <span class="number">2</span> <span class="operator">;;</span> <span class="number">4</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">l</span><span class="operator">,</span></span><br><span class="line">     <span class="built_in">Dimensions</span><span class="punctuation">[</span><span class="variable">cmapdata</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">hotmap</span> <span class="operator">=</span> <span class="punctuation">(</span><span class="built_in">Blend</span><span class="punctuation">[</span><span class="variable">hotmapdata</span><span class="operator">,</span> <span class="type">#</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><br>然后就可以使用了，例如<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">showcolorfunction</span><span class="punctuation">[</span><span class="type">color_</span><span class="punctuation">]</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="built_in">With</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">opts</span> <span class="operator">=</span> <span class="punctuation">{</span><span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="built_in">All</span><span class="operator">,</span> <span class="built_in">ColorFunction</span> <span class="operator">-&gt;</span> <span class="variable">color</span><span class="operator">,</span> </span><br><span class="line">      <span class="built_in">PlotPoints</span> <span class="operator">-&gt;</span> <span class="number">40</span><span class="operator">,</span> <span class="built_in">PlotRangePadding</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> <span class="built_in">ImageSize</span> <span class="operator">-&gt;</span> <span class="number">200</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Column</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">DensityPlot</span><span class="punctuation">[</span></span><br><span class="line">      <span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span> <span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="number">2</span> <span class="variable">\[Pi]</span><span class="operator">,</span> <span class="number">2</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">y</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">\[Pi]</span><span class="operator">,</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">      <span class="built_in">FrameTicks</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> <span class="built_in">AspectRatio</span> <span class="operator">-&gt;</span> <span class="number">1</span><span class="operator">/</span><span class="number">4</span><span class="operator">,</span> <span class="variable">opts</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">DensityPlot</span><span class="punctuation">[</span></span><br><span class="line">      <span class="number">10</span> <span class="built_in">Cos</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">]</span> <span class="built_in">Exp</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="number">2</span> <span class="variable">\[Pi]</span><span class="operator">,</span> <span class="number">2</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">y</span><span class="operator">,</span> <span class="operator">-</span><span class="variable">\[Pi]</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">      <span class="built_in">FrameTicks</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> <span class="built_in">AspectRatio</span> <span class="operator">-&gt;</span> <span class="number">1</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span> <span class="variable">opts</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">DensityPlot</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="operator">-</span><span class="number">1</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">y</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">1</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">      <span class="built_in">FrameTicks</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="built_in">None</span><span class="operator">,</span> <span class="built_in">None</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="built_in">Automatic</span><span class="operator">,</span> <span class="built_in">None</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">      <span class="built_in">AspectRatio</span> <span class="operator">-&gt;</span> <span class="number">1</span><span class="operator">/</span><span class="number">10</span><span class="operator">,</span> <span class="variable">opts</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">Center</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">showcolorfunction</span><span class="operator">@</span><span class="variable">hotmap</span></span><br></pre></td></tr></table></figure><br><img src="https://pic1.zhimg.com/80/v2-f30ae149ea298fdc1a85296b078bb788_720w.jpg" alt=""></p><h2 id="如何导出Mathematica的颜色图"><a href="#如何导出Mathematica的颜色图" class="headerlink" title="如何导出Mathematica的颜色图"></a>如何导出Mathematica的颜色图</h2><p>另外一个要解决的问题是如何导出Mathematica的颜色图？我以颜色图“TemperatureMap”为例，<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f</span> <span class="operator">=</span> <span class="built_in">ColorData</span><span class="punctuation">[</span><span class="string">"TemperatureMap"</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">mat</span> <span class="operator">=</span> <span class="built_in">Table</span><span class="punctuation">[</span><span class="variable">f</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="number">0.01</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">TerpColor</span> <span class="operator">=</span> <span class="variable">mat</span> <span class="operator">/.</span> <span class="punctuation">{</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="type">x_</span><span class="operator">,</span> <span class="type">y_</span><span class="operator">,</span> <span class="type">z_</span><span class="punctuation">]</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="variable">y</span><span class="operator">,</span> <span class="variable">z</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">Export</span><span class="punctuation">[</span><span class="string">"TemperatureMap.mat"</span><span class="operator">,</span> </span><br><span class="line">  <span class="variable">TerpColor</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>导出的”TemperatureMap.mat”文件就可以在MATLAB中使用了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为软件机考题目</title>
      <link href="/2022/06/02/C_%E6%95%99%E7%A8%8B_%E5%8D%8E%E4%B8%BA%E8%BD%AF%E4%BB%B6%E6%9C%BA%E8%80%83%E9%A2%98%E7%9B%AE/"/>
      <url>/2022/06/02/C_%E6%95%99%E7%A8%8B_%E5%8D%8E%E4%B8%BA%E8%BD%AF%E4%BB%B6%E6%9C%BA%E8%80%83%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>之前面试华为，弄过两次机考，将其记录下来，侵权则删。</p><h2 id="第一次机考"><a href="#第一次机考" class="headerlink" title="第一次机考"></a>第一次机考</h2><h3 id="1-无尽的任务"><a href="#1-无尽的任务" class="headerlink" title="1. 无尽的任务"></a>1. 无尽的任务</h3><p>小杰在工作中有很多任务，为了保持高效，小杰在同一时间内只处理一项任务。在当前交付周期里，有n个任务（1&lt;=n&lt;=1000）,每个任务的价值为vi(1&lt;=vi&lt;=1000)，需要完成的时间为（1&lt;=ti&lt;10000）,最后期限为di(1&lt;=di&lt;=1000),超过最后期限完成则产生不了任何价值，球，求小杰能输出的最大价值是多少。</p><p><strong>解答要求</strong>：</p><p>时间限制：C/C++ 1000ms,其他语言：2000ms<br>内存限制：C/C++ 256MB,其他语言：512MB</p><h4 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 1"></a>样例 1</h4><p><strong>输入</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">3 3 10</span><br><span class="line">1 1 10</span><br><span class="line">10 10 10</span><br></pre></td></tr></table></figure><p> <strong>输出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p><strong>解释</strong>：</p><p>前两个任务价值和才6，第三个是10，如果选择前两个任务的任何一个，那就完成不了第三个任务。所以只要选择第三个任务去完成，就可以获取最大的任务价值。</p><h4 id="样例2"><a href="#样例2" class="headerlink" title="样例2"></a>样例2</h4><p><strong>输入</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">6 5 4</span><br><span class="line">5 1 5</span><br><span class="line">5 5 10</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p><strong>解释</strong></p><p>结果是选择第一个和第三个任务。选择第一个任务花了5个单位的时间，第二个任务需要在期限5以前完成，所以选择不了，只能再选择第三个任务。</p><h3 id="2-开门次数"><a href="#2-开门次数" class="headerlink" title="2. 开门次数"></a>2. 开门次数</h3><p>小明家有座超级大房子，有很多房间，用数字编号，房间之间有门，门打开后会自动关上，使用空格分隔的房间号roomJ,roomK，代表了roomJ和roomk之间有门，可以来回。假如小明身处房间roomA,需要去往指定房间roomB，请给出最少需要开几次门才能到达。</p><p><strong>解答要求</strong>：<br>时间限制：C/C++ 1000ms,其他语言：2000ms<br>内存限制：C/C++ 32MB,其他语言：64MB</p><p><strong>输入</strong></p><p>第一行是当前所处房间roomA.</p><p>第二行是目的地房间号roomB.</p><p>第三行是门的数量N.</p><p>第四行开始的N行，是使用空格分隔的两个房间号，代表一扇门。</p><p><strong>说明</strong>：</p><p>1&lt;=门的数量&lt;=100</p><p>房间号为int数字</p><p> <strong>输出</strong></p><p>最少开门次数</p><h4 id="样例1"><a href="#样例1" class="headerlink" title="样例1"></a>样例1</h4><p><strong>输入</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">3 4</span><br><span class="line">2 5</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>解释：小明从房间1到房间2，房间2到房间5，最少开两次门就可以达到。</p><p><strong>提示</strong></p><p>题目确保有解。</p><h2 id="第二次机考"><a href="#第二次机考" class="headerlink" title="第二次机考"></a>第二次机考</h2><h3 id="1-最小设备能力"><a href="#1-最小设备能力" class="headerlink" title="1. 最小设备能力"></a>1. 最小设备能力</h3><p>在一段笔直的公路上，需要部署相同规格临控设备组中分别给出了需要监控的点位和监控设备安装的点位（点位用距位置0的距离描述）。<br>求解部署的监控设备的最小覆盖范围为多少，才能确保安装点位覆盖需要监控的点位</p><p><strong>特别注意</strong>：客监控点监控设备的规洛完全相同<br><strong>解答要求</strong><br>时间限制：C/C++1000ms，其他语言：2000ms<br>内存限制：C/C++256MB，其他语言：512MB</p><p><strong>输入</strong><br>第一行为一个整数N，表示总共需要监控的点位数量；<br>第二行为N个整数（单空格间隔），分别表示这N个需要监控点位的坐标点；<br>第三行为一个整数M，表示允许安装的点位数量；第四行为M个整数（单空格间隔），表示允许安装设备的坐标点；</p><p><strong>输出</strong><br>设备需要最小覆盖距离</p><h4 id="样例1-1"><a href="#样例1-1" class="headerlink" title="样例1"></a>样例1</h4><p><strong>输入</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 5</span><br><span class="line">3</span><br></pre></td></tr></table></figure><br><strong>输出</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p><strong>解释</strong>：<br>1.输入参数：总共需要覆盖的点位数为2，分别为点位1和5；总共需要部署的监控设备数是1，监控点位是3；<br>2.点位3与点位1距离为2，点位3与点位5距离为2；<br>3.设备最小覆盖的距离为2</p><h4 id="样例2-1"><a href="#样例2-1" class="headerlink" title="样例2"></a>样例2</h4><p><strong>输入</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3 5</span><br><span class="line">2</span><br><span class="line">2 5</span><br></pre></td></tr></table></figure><br><strong>输出</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p><strong>解释</strong>：<br>1输入参数：总共需要覆盖的点位数为4，分别为点位1，235；总共需要部署的监控设备数是2，监控点位是2.5；<br>2点位2与点位1或点位3的距离为1，点位2与点位2的距离为0，点位5与点位5的距离为0；<br>3.由于设备覆盖距离相同，要保证监控点位2覆盖周边点位，最小距离为1；</p><p><strong>提示</strong>:<br>1.需要监控的点位个数最大不超过500；<br>2.需要安装监控设备的点位个数不超过500；<br>3.各个点位用整数表示，最大不超过UINT32，即OxFFFFFFFF=4294967295；<br>4.输入点位可能存在乱序的情况；</p><h3 id="2-单词的组合"><a href="#2-单词的组合" class="headerlink" title="2. 单词的组合"></a>2. 单词的组合</h3><p>析文章中相邻两个单词之间搭配关系，其规则如下：<br>1.找出文章中出现次数最多的单词，（可能多个单词出现次数并列第一）。<br>2.包含该单词（规则1找出的单词）的出现次数最多的单词组合。<br>3.按字典序输出这些单词组合，如果没有符合条件的单词组合输出NULL。<br><strong>注意</strong>：<br>1.单词：未被标点符号或者空隔断的连续字母是一个单词。<br>2.单词只包含小写字母，最长不超过100个字母。<br>3.单词组合：2个相邻的单词，2个单词之间只能用1个空格分割。<br>4.用2个及以上空格分割的2个单词不是单词组合。<br>5.用非空格的符号分割的2个单词不是单词组合。<br>6.包含A的单词组合：A可能在前面，也可能在后面。<br>7.出现次数最多的单词可能没有单词组合。</p><p><strong>解答要求</strong><br>时间限制：C/C++1000ms，其他语言：2000ms<br>内存限制：C/C++32MB，其他语言：64MB</p><p><strong>输入</strong>：<br>第一行开始给出一个长字符串，长度小于2048。<br>输入只包合小写字母、空格、常见标点符号（”、、（、y、），不包含大写字母、数字、换行符。</p><p><strong>输出</strong>：<br>第一行开始，按字典序输出字符串。</p><p><strong>注意</strong>：<br>1.输出请按字典序排列。（字典序是基于字母顺序排列的单词按字母顺序排列的方法。）<br>2.输出请去掉重复的单词组合。<br>3.如果符合题目要求的输出或者输出为空，请输出NULL。</p><h4 id="样例1-2"><a href="#样例1-2" class="headerlink" title="样例1"></a>样例1</h4><p><strong>输入</strong>：<code>how,are  you</code><br><strong>输出</strong>：<code>NULL</code></p><p><strong>解释</strong>：找不到符合条件的字符串，输出”NULL”。<br><strong>注意：</strong>are和you之间有2个空格</p><h4 id="样例2-2"><a href="#样例2-2" class="headerlink" title="样例2"></a>样例2</h4><p><strong>输入</strong>：<code>helo word hijackhow are u hello cat helo dog</code><br><strong>输出</strong>：<code>cat hello hello cathello dog hello word u hello</code><br><strong>解释</strong>：<br>字符串中出现次数最多的单词是“hello”<br>包含hello”的单词组合中”cat hello”””elo cat，”hello dog””hello wo rd”，”u hello”出现次数都为1次并列最多<br>输出按字符串的字典序输出。<br><strong>注意</strong>:<code>jackhow</code>因为单词之间使用非空格分割，所以不是一个单词组合。</p><h4 id="样例3"><a href="#样例3" class="headerlink" title="样例3"></a>样例3</h4><p><strong>输入</strong>：<code>aa.bb.bb.cc dd eeff</code><br><strong>输出</strong>：<code>NULL</code><br><strong>解释</strong>：出现次数最多的单词是<code>bb</code>，但是没有相应的单词组合</p><h4 id="样例4"><a href="#样例4" class="headerlink" title="样例4"></a>样例4</h4><p><strong>输入</strong>：<code>aa bb cc dd</code><br><strong>输出</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aa bb</span><br><span class="line">bb cc</span><br><span class="line">cc dd</span><br></pre></td></tr></table></figure></p><p><strong>解释</strong>：<br>出现次数最多的单词为“aa””bb””cc””dd”<br>包含这些单词的组合有aa bb””bb cc”ccddr”这些组合出现的次数都为1次。</p><h3 id="3-求覆盖村落所需要的基站数"><a href="#3-求覆盖村落所需要的基站数" class="headerlink" title="3. 求覆盖村落所需要的基站数"></a>3. 求覆盖村落所需要的基站数</h3><p>运营商拟在广阔的荒湾地区部营站，该地感到划为MN个方格，其中分布看×个村溶（每个村落占用一个方格）。已知每个基站能够盖益。个方格的正方形区域，求覆盖所有村落至少需要建立几个基站。<br>解答要求<br>时间限制C/C++3000ms，其他语言：6000ms<br>内存限制：C/C++64MB，其他语言：128MB<br>输入：<br>第一行为两个整数M和N（O&lt;M.N&lt;100000），代表矩形地区的大小；第二行为一个整数×（0&lt;X&lt;=20），代表村落数量；接下来有X行，每行有两个整数m和n（0&lt;=m&lt;M，0&lt;=n&lt;N），代表一个村落的坐标<br>输出：<br>输出一个整数，代表覆盖所有村落至少需要的基站个数。</p><h4 id="样例1-3"><a href="#样例1-3" class="headerlink" title="样例1"></a>样例1</h4><p><strong>输入</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">99999 999992001000010000</span><br></pre></td></tr></table></figure><br><strong>输出</strong>：<code>2</code><br>解释：有两个村落，坐标分别为（0，0）和（10000，10000）。它们相累甚远。<br>无法用同一个其站覆盖，要覆盖它们至少需要两个基站</p><h4 id="样例2-3"><a href="#样例2-3" class="headerlink" title="样例2"></a>样例2</h4><p><strong>输入</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">10 10 </span><br><span class="line">2</span><br><span class="line">2 6</span><br><span class="line">4 8</span><br></pre></td></tr></table></figure><br><strong>输出</strong>：<code>1</code><br><strong>解释</strong>：有两个村落，坐标分别为（2，6）和（4，8）。若在坐标为（3，7）的方格设置一个基站，以该方格为中心的3×3的区域能够覆盖所有村落，故只需一个基站即可。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows11的一些问题（打印机、wifi热点共享）</title>
      <link href="/2022/02/19/C_%E6%95%99%E7%A8%8B_Windows11%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/2022/02/19/C_%E6%95%99%E7%A8%8B_Windows11%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><p>换了新的ROG幻13后，发现windows11存在着各种各样的问题。中间有两个问题让我抓狂了很久，一个是发现我的打印机的双面打印选项消失了，另外则是发现windows的热点共享后手机可以连接但是实际是没有网络的。本笔记将分别介绍如何解决他们。</p><h2 id="打印机失去了双面打印"><a href="#打印机失去了双面打印" class="headerlink" title="打印机失去了双面打印"></a>打印机失去了双面打印</h2><p>正值博士毕业论文的关键时期，打印机却不支持双面打印，实在是严重的影响了我的工作生产力。网络上提供的方法都是打开共享打印机设置，开启共享打印之类的，不能解决我的问题。我的设备设置根本就没有双面打印这个东西！而且我发现我在刚刚添加好打印机之后其是可以双面打印的，但是第二次开启电脑之后，双面打印的功能就消失了。总不能每次都重新添加一遍吧。。。</p><p>后来经过我仔细的摸索，发现需要更改的驱动程序，貌似Windows11会自动将默认的驱动程序改掉？如图所示，当我们打开打印机的属性设置的时候，选择“高级”，其默认的驱动程序是“Generic/Text Only”，这个是不支持双面打印的，需要我们将其改为“Microsoft IPP Class Driver”。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2022-02-18_15-48-15.png" alt=""></p><p>之后打印机就支持双面打印了。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pasted image 20220219153912.png" alt=""><br>![[Attachment/Pasted image 20220219153912.png]]</p><h2 id="Wifi热点分享后手机连接没有网络"><a href="#Wifi热点分享后手机连接没有网络" class="headerlink" title="Wifi热点分享后手机连接没有网络"></a>Wifi热点分享后手机连接没有网络</h2><p>最开始升级之后，电脑的Wifi热点分享出去，手机可以连接但是没有网络，发现可以通过开启“服务”中的如下图所示的两个服务即可，</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/微信截图_20220219154309.png" alt=""></p><p>可以将其启动方式改为手动即可。我以为问题以及解决，但是当我将笔记本换到实验室的时候，又不能开启了！该方法也失效了，最近发现，其需要修改适配器设置。我们首先找到wifi热点所对应的网络连接<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2022-02-19_15-07-58.png" alt=""></p><p>我笔记本是“本地连接11”，也有可能叫“本地连接2”，然后打开设置，将ipv4的IP地址获取改为自动即可。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2022-02-19_15-09-38.png" alt=""></p><p>windows出了问题不一定马上别人就有解决之道，特别是网络上的消息鱼龙混杂且大多是抄来抄去的，我希望我的笔记可以帮助到和我有同样问题的人。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验误差与拟合误差的区别与计算</title>
      <link href="/2021/11/16/C_%E6%95%99%E7%A8%8B_%E5%AE%9E%E9%AA%8C%E8%AF%AF%E5%B7%AE%E5%92%8C%E6%8B%9F%E5%90%88%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/"/>
      <url>/2021/11/16/C_%E6%95%99%E7%A8%8B_%E5%AE%9E%E9%AA%8C%E8%AF%AF%E5%B7%AE%E5%92%8C%E6%8B%9F%E5%90%88%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="实验误差与拟合误差的区别"><a href="#实验误差与拟合误差的区别" class="headerlink" title="实验误差与拟合误差的区别"></a>实验误差与拟合误差的区别</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>作为一个做理论的人，之前对于误差分析关注不多，最近文章投稿时发现对于误差的分析比较欠缺，自己不是很懂，因此特地查阅学习了一遍，写一篇笔记记录。</p><h2 id="实验误差"><a href="#实验误差" class="headerlink" title="实验误差"></a>实验误差</h2><h3 id="基本定义"><a href="#基本定义" class="headerlink" title="基本定义"></a>基本定义</h3><p>首先是实验误差，也可以叫做测量误差，误差的定义首先要搞清楚，是指测量值和真实值之间的差值，首先是随机误差，是指某一次测量值和真实值之间的误差</p><script type="math/tex; mode=display">\delta_{i}=x_{i}-L_{0}</script><p>其中$L<em>{0}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="11.312ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 5000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">真</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">实</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">值</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g></g></g></svg></mjx-container>x</em>{i}$为测量值。一般来说，我们可以用算数平均值来作为真实值的估计</p><script type="math/tex; mode=display">\bar{x}=\frac{\sum_{i}^{n}x_{i}}{n}</script><p>将测量值与真实值的差值叫做残余误差，</p><script type="math/tex; mode=display">r_{i}=x_{i}-\bar{x}</script><p>接下来就是标准差，一个具有N个样本的系统的标准差定义为</p><script type="math/tex; mode=display">\sigma=\sqrt{\frac{\sum_{i}^{N}r_{i}^2}{N}}</script><p>同时我们一般只是抽取其中的n个样本进行衡量，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.09ex;" xmlns="http://www.w3.org/2000/svg" width="6.384ex" height="1.636ex" role="img" focusable="false" viewBox="0 -683 2821.6 723"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(1933.6,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> ，因此根据样本的均值和方差代表总体时，记住均值是无偏的，但是方差是有篇的！详细推导维基百科相关词条都是有的，这里不再赘述。因此，样本的平均值为</p><script type="math/tex; mode=display">\bar{x}\frac{\sum_{i}^{n}x_{i}}{n}</script><p>定义样本的无偏标准差</p><script type="math/tex; mode=display">\sigma_{x}=\sqrt{\frac{\sum_{i}^{N}r_{i}^2}{N-dof}}</script><p>其中 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="3.518ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 1555 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1005,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container> 代表的是自由度，比如系统有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个变量，有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container> 组数据，那么 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="13.296ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 5877 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1005,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1832.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2888.6,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(3998.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4999,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>.</p><p>我们要测量多个变量 $x<em>{i}^{j}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="31.674ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 14000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">多</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">次</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">然</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">后</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">通</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">过</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">入</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">公</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g><g data-mml-node="mi" transform="translate(11000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">等</text></g><g data-mml-node="mi" transform="translate(12000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="mi" transform="translate(13000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g></g></g></svg></mjx-container>x</em>{i}^{j}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="27.149ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 12000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">计</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">出</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">来</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">需</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">要</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">物</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">理</text></g><g data-mml-node="mi" transform="translate(11000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g></g></g></svg></mjx-container>y=f(x<em>{1},x</em>{2},…)$ 。上面的误差是指由于多次测量造成与真实结果的区别，叫做A类误差。还有一类误差，是仪器造成的固有偏差，叫做b类误差。</p><h3 id="误差的合成"><a href="#误差的合成" class="headerlink" title="误差的合成"></a>误差的合成</h3><p>然后是误差的合成，假设为了测量某个量我们需要测量 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个独立的变量 $p<em>{i}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="64.354ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 28444.7 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">每</text></g><g data-mml-node="mi" transform="translate(1444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(2444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mi" transform="translate(3444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(4444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">误</text></g><g data-mml-node="mi" transform="translate(5444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">差</text></g><g data-mml-node="mi" transform="translate(6444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">都</text></g><g data-mml-node="mi" transform="translate(7444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(8444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">可</text></g><g data-mml-node="mi" transform="translate(9444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">以</text></g><g data-mml-node="mi" transform="translate(10444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">获</text></g><g data-mml-node="mi" transform="translate(11444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">得</text></g><g data-mml-node="mi" transform="translate(12444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(13444.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(14444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(15444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">些</text></g><g data-mml-node="mi" transform="translate(16444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">变</text></g><g data-mml-node="mi" transform="translate(17444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mi" transform="translate(18444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(19444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">终</text></g><g data-mml-node="mi" transform="translate(20444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">会</text></g><g data-mml-node="mi" transform="translate(21444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(22444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">入</text></g><g data-mml-node="mi" transform="translate(23444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">函</text></g><g data-mml-node="mi" transform="translate(24444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(25444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text></g><g data-mml-node="mi" transform="translate(26444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">达</text></g><g data-mml-node="mi" transform="translate(27444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g></g></g></svg></mjx-container>y=f(x</em>{i},p<em>{j})<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="24.887ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 11000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">计</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">函</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">值</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">里</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g></g></g></svg></mjx-container>(x</em>{i},p<em>{j})<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="9.05ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 4000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">代</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">表</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">变</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g></g></g></svg></mjx-container>p</em>{j}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="4.525ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 2000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g></g></g></svg></mjx-container>i<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="38.462ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 17000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">次</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">测</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">结</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">果</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5000,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">。</text></g></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">每</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">变</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(11000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">无</text></g><g data-mml-node="mi" transform="translate(12000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">偏</text></g><g data-mml-node="mi" transform="translate(13000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">标</text></g><g data-mml-node="mi" transform="translate(14000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">准</text></g><g data-mml-node="mi" transform="translate(15000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">差</text></g><g data-mml-node="mi" transform="translate(16000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g></g></g></svg></mjx-container>\sigma<em>{p</em>{j}}$ ,那么最终的测量值的误差为</p><script type="math/tex; mode=display">\sigma_{f}^{A}=\sqrt{\sum_{j}^{m}\left(\sigma_{p_{j}}\frac{\partial f}{\partial p_{j}    }\right)^2}</script><p>上面只是A类误差的合成，如果还考虑到B类误差的话，总的误差为</p><script type="math/tex; mode=display">\sigma_{f}=\sqrt{(\sigma_{f}^{A})^2+(\sigma_{f}^{B})^2}</script><h2 id="拟合误差"><a href="#拟合误差" class="headerlink" title="拟合误差"></a>拟合误差</h2><h3 id="一般拟合过程"><a href="#一般拟合过程" class="headerlink" title="一般拟合过程"></a>一般拟合过程</h3><p>上面是对于实验测量误差的一个简要介绍，接下来分析拟合的一个过程，一般我们测量了很多数据以后，会尝试对数据进行一个拟合，得出拟合的参数，拟合一般采用的是最小二乘法，即我们的目标函数是使得残差的平方和最小</p><script type="math/tex; mode=display">S=s^2=\sum_{i}^{n}r_{i}^2=\sum_{i}^{n}(f(x_{i})-y_{i})^2</script><p>这样一个二次型最小值的寻找，如果是线性的，直接求解即可，如果是非线性，则需要通过给定合适的初始值迭代寻找，比较常用的方法有<a href="https://en.wikipedia.org/wiki/Gauss%E2%80%93Newton_algorithm">高斯牛顿算法</a></p><script type="math/tex; mode=display">p^{s+1}=p^{s}-(\mathbf{J}_{r}^{T}\mathbf{J}_{r})^{-1}\mathbf{J}_{r}^{T}r</script><p>其中，</p><script type="math/tex; mode=display">(\mathbf{J}_{r})_{ij}=\frac{\partial r_{i}}{\partial p_{j}}</script><p>为雅克比矩阵的矩阵元。也有更加复杂的拟合方式，这里不再赘述。</p><h3 id="置信区间的表述"><a href="#置信区间的表述" class="headerlink" title="置信区间的表述"></a>置信区间的表述</h3><p>我们拟合完了之后，一般需要给出一个置信区间内的拟合参数的范围，比如拟合参数在<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="4.942ex" height="1.532ex" role="img" focusable="false" viewBox="0 -666 2184.4 677"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(751.2,0)"><path data-c="B1" d="M56 320T56 333T70 353H369V502Q369 651 371 655Q376 666 388 666Q402 666 405 654T409 596V500V353H707Q722 345 722 333Q722 320 707 313H409V40H707Q722 32 722 20T707 0H70Q56 7 56 20T70 40H369V313H70Q56 320 56 333Z"></path></g><g data-mml-node="mi" transform="translate(1751.4,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></svg></mjx-container>之间，这是怎么得到的呢？首先来说置信区间，我们从高斯分布来看，高斯分布定义为</p><script type="math/tex; mode=display">f(\delta)=\frac{1}{2\pi\sqrt{\sigma}}e^{-\frac{\delta^2}{2\sigma^2}}</script><p>一般所说的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.423ex" height="1.554ex" role="img" focusable="false" viewBox="0 -665 1071 687"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g></g></g></svg></mjx-container> 原则，即指我们有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.902ex;" xmlns="http://www.w3.org/2000/svg" width="19.68ex" height="3.171ex" role="img" focusable="false" viewBox="0 -1002.8 8698.7 1401.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1140,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mi" transform="translate(1640,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(2211,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2877.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(3933.6,0)"><g data-mml-node="mo" transform="translate(0 0.5)"><path data-c="222B" d="M113 -244Q113 -246 119 -251T139 -263T167 -269Q186 -269 199 -260Q220 -247 232 -218T251 -133T262 -15T276 155T297 367Q300 390 305 438T314 512T325 580T340 647T361 703T390 751T428 784T479 804Q481 804 488 804T501 805Q552 802 581 769T610 695Q610 669 594 657T561 645Q542 645 527 658T512 694Q512 705 516 714T526 729T538 737T548 742L552 743Q552 745 545 751T525 762T498 768Q475 768 460 756T434 716T418 652T407 559T398 444T387 300T369 133Q349 -38 337 -102T303 -207Q256 -306 169 -306Q119 -306 87 -272T55 -196Q55 -170 71 -158T104 -146Q123 -146 138 -159T153 -195Q153 -206 149 -215T139 -230T127 -238T117 -242L113 -244Z"></path></g><g data-mml-node="TeXAtom" transform="translate(699.9,532.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(505,-340.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mi" transform="translate(1278,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g></g></g><g data-mml-node="mi" transform="translate(5962.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(6512.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6901.7,0)"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="mo" transform="translate(7345.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(7734.7,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(8254.7,0)"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g></g></g></svg></mjx-container>的把握，测量值的偏差落在 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.373ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4142.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(389,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1167,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mi" transform="translate(1667,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(2238,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2682.7,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mi" transform="translate(3182.7,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(3753.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 之间。MATLAB拟合时，一般采用 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.127ex;" xmlns="http://www.w3.org/2000/svg" width="4.147ex" height="1.824ex" role="img" focusable="false" viewBox="0 -750 1833 806"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(1000,0)"><path data-c="25" d="M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z"></path></g></g></g></svg></mjx-container>  置信区间来表述，即我们有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.127ex;" xmlns="http://www.w3.org/2000/svg" width="4.147ex" height="1.824ex" role="img" focusable="false" viewBox="0 -750 1833 806"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(1000,0)"><path data-c="25" d="M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z"></path></g></g></g></svg></mjx-container> 的把握，测量值落在 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.744ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3864.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(389,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1167,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1528,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(2099,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2543.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(2904.7,0)"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mo" transform="translate(3475.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container><br>之间，而 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewBox="0 -626 361 637"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container> 是使得</p><script type="math/tex; mode=display">P(3\sigma)=\int_{-t\sigma}^{t\sigma}f(\delta)d\delta=0.95</script><p>同时对于样本数较小的情况，我们的估计不能用高斯函数，而应该用学生氏函数  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.962ex" height="1.538ex" role="img" focusable="false" viewBox="0 -669 1751 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(389,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(667,0)"></path><path data-c="76" d="M338 431Q344 429 422 429Q479 429 503 431H508V385H497Q439 381 423 345Q421 341 356 172T288 -2Q283 -11 263 -11Q244 -11 239 -2Q99 359 98 364Q93 378 82 381T43 385H19V431H25L33 430Q41 430 53 430T79 430T104 429T122 428Q217 428 232 431H240V385H226Q187 384 184 370Q184 366 235 234L286 102L377 341V349Q377 363 367 372T349 383T335 385H331V431H338Z" transform="translate(1223,0)"></path></g></g></g></svg></mjx-container>，这里不再赘述。我么需要给定置信区间以及自由度，来计算出t值，比如我们需要 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.127ex;" xmlns="http://www.w3.org/2000/svg" width="4.147ex" height="1.824ex" role="img" focusable="false" viewBox="0 -750 1833 806"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(1000,0)"><path data-c="25" d="M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z"></path></g></g></g></svg></mjx-container> 的置信区间，则可以</p><script type="math/tex; mode=display">t=\text{tinv}(1-(1-0.95)/2,dof)</script><p>在自由度大于31之后，学生分布和高斯分布会越来越近。</p><h3 id="误差的传递"><a href="#误差的传递" class="headerlink" title="误差的传递"></a>误差的传递</h3><p>我们通过拟合，找到了s的最小值，那么怎么得到对应变量的最小值呢？我们需要计算模型的雅克比矩阵</p><script type="math/tex; mode=display">(\mathbf{J}_{r})_{ij}=\frac{\partial r_{i}}{\partial p_{j}}</script><p>这个雅克比矩阵可以解析计算，也可以数值差分的方式计算，一般MATLAB或者Python都会把这个矩阵给出，然后根据如下公式，计算每一个参数的方差</p><script type="math/tex; mode=display">S=s^2=\sum_{i}^{n}r_{i}^2=\sum_{i}^{n}(f(x_{i})-y_{i})^2</script><script type="math/tex; mode=display">dof=N-m</script><script type="math/tex; mode=display">pcov=(\mathbf{J}_{r}^{T}\mathbf{J}_{r})^{-1}\frac{s^2}{dof}</script><p>然后要求某个置信区间的参数范围，只需要先求出<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewBox="0 -626 361 637"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container></p><script type="math/tex; mode=display">t=\text{tinv}(1-(1-0.95)/2,dof)</script><p>然后对应的参数在范围</p><script type="math/tex; mode=display">p_{i}\in (p_{i}-t(\sqrt{pcov})_{i,i},p_{i}+t(\sqrt{pcov})_{i,i})</script><p>MATLAB的一些函数<code>fit,lsqsquare</code>都可以直接获得拟合范围，一些函数如<code>lsqcurvefit</code>，或者Python的<code>curve_fit</code>等可能不会返回每一个变量的范围，但是会返回所需要的雅克比矩阵，这样我们也可以进行手动计算。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://kitchingroup.cheme.cmu.edu/blog/2013/02/12/Nonlinear-curve-fitting-with-parameter-confidence-intervals/">Nonlinear curve fitting with parameter confidence intervals</a><br><a href="https://stats.stackexchange.com/questions/231868/relation-between-covariance-matrix-and-jacobian-in-nonlinear-least-squares">Relation between Covariance matrix and Jacobian in Nonlinear Least Squares</a><br><a href="https://www.mathworks.com/help/curvefit/least-squares-fitting.html">Least-Squares Fitting</a><br><a href="https://www.mathworks.com/help/stats/nlinfit.html#btk7ign-ErrorModel">nlinfit</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MATLAB </tag>
            
            <tag> 误差分析 </tag>
            
            <tag> 拟合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谨慎使用Pop3方式同步邮件</title>
      <link href="/2021/10/11/C_%E6%95%99%E7%A8%8B_%E8%B0%A8%E6%85%8E%E4%BD%BF%E7%94%A8Pop3%E6%96%B9%E5%BC%8F%E5%90%8C%E6%AD%A5%E9%82%AE%E4%BB%B6/"/>
      <url>/2021/10/11/C_%E6%95%99%E7%A8%8B_%E8%B0%A8%E6%85%8E%E4%BD%BF%E7%94%A8Pop3%E6%96%B9%E5%BC%8F%E5%90%8C%E6%AD%A5%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h1><p>为了方便的对邮件进行管理，我使用thunderbird对我的各种邮箱进行了统一的登录设置。最近打开邮件的时候，突然发现校园邮箱的半个月之前的邮件没有了，可把我急坏了，以为是误删除了，还发了邮件去问工作人员，最后得知是因为我自己设置客户端的时候，选取了pop3模式，这个模式会将所有的邮件下载到本地，然后对服务器端的邮件进行删除。</p><p>我打开了我的设置了Pop3模式的电脑，发现确实本地都还在，因此只需要想办法将邮件恢复就可以了。那么怎么做呢？搜索了之后发现了如下两个比较有用的消息，</p><p>其实基本思路就是，</p><ol><li>方法1：<ol><li>将本地的未在服务器端的邮件进行导出。</li><li>在另外一台电脑或者本地电脑都行，重新用Thunderbird新建imap账户，然后在收件箱内导入邮件即可。导入的时候需要用到插件，importexport之类的一个插件。</li><li>同时导入的时候可能会卡，这个最坑，需要仔细比对哪些没有导入成功，又重新导入一遍。</li><li>由于不断的导入，总会有一些邮件被重复导入，这时候就需要用其他的插件去除掉重复邮件。</li><li>最后删除掉pop3账户，避免重复的再次把服务器邮件进行下载到本地。</li></ol></li><li>方法2<ol><li>在同一个电脑重新用Thunderbird新建imap账户，然后直接将pop3账户的邮件复制到imap账户。</li><li>这个方法的缺点也是可能复制了很多邮件只有一部分成功，也需要再次进行比对，很麻烦。</li></ol></li></ol><p>个人推荐第一种方法。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zotero配合坚果云使用以及其与Endnote的互传</title>
      <link href="/2021/09/13/C_%E6%95%99%E7%A8%8B_Zotero%E9%85%8D%E5%90%88%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%BD%BF%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%B8%8EEndnote%E7%9A%84%E4%BA%92%E4%BC%A0/"/>
      <url>/2021/09/13/C_%E6%95%99%E7%A8%8B_Zotero%E9%85%8D%E5%90%88%E5%9D%9A%E6%9E%9C%E4%BA%91%E4%BD%BF%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%B8%8EEndnote%E7%9A%84%E4%BA%92%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Endnote-Reference-Zotero"><a href="#Endnote-Reference-Zotero" class="headerlink" title="Endnote #Reference #Zotero"></a>Endnote #Reference #Zotero</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在之前的文章中我介绍了如何使用Endnote[[Software&amp;Program/Reference/C<em>教程_EndNote文献管理总结]]，个人博客相应页面为[EndNote文献管理总结](<a href="https://knifelees3.github.io/2019/05/16/C">https://knifelees3.github.io/2019/05/16/C</a></em>%E6%95%99%E7%A8%8B_EndNote%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86%E6%80%BB%E7%BB%93/). Endnote其使用范围广且可以方便的与别人分享数据库是其主要优势，但是也有一些缺点。当有一天我想在Ipad上看文献是，发现Endnote还是不够方便，Zotero的优势就显现出来了。经过一段时间的使用，我认为Zotero适合平时出于兴趣收集各种文献，博士论文、书籍等，等到需要写作与老师分享文献时则导出一份Endnote数据库给老师即可。</p><h2 id="基本使用以及必备插件安装"><a href="#基本使用以及必备插件安装" class="headerlink" title="基本使用以及必备插件安装"></a>基本使用以及必备插件安装</h2><p>首先是基本使用按照，很简单，在官网上搜索下载最新的版本安装即可，我安装的<a href="https://www.zotero.org/download/">稳定版本</a>，还有<a href="https://zhuanlan.zhihu.com/p/354561099">beta版本</a>，据说有类似endnote的预览功能，我还没试过。同时可以直接安装Chrome插件，</p><p><img src="https://i.loli.net/2021/10/24/MUuHQA1NGJjLaeE.png" alt=""><br>安装好之后，就可以进行使用了，逻辑和Endnote很像，感觉多摸索一下就可以了。好处是可以建非常多层的文件夹，更适合将所有的文献整理到一个软件中。</p><p>然后是插件安装，我认为非常好用的插件如下</p><p><img src="https://i.loli.net/2021/10/24/CtLoJRkK3H6PsUj.png" alt=""></p><p>特别是ZotFile，可以对文献进行重命名等，而QuickLook在你安装了软件QuickLook之后，可以支持你按空格键对文献进行实时预览。</p><h2 id="坚果云Web-Dev同步"><a href="#坚果云Web-Dev同步" class="headerlink" title="坚果云Web-Dev同步"></a>坚果云Web-Dev同步</h2><p>另外就是同步功能了，因为我们需要在不同的电脑甚至是Ipad,手机等访问文献，我采用的是坚果云同步的，<a href="https://www.jianguoyun.com">坚果云官</a></p><p>  注册之后，如果需要大的容量需要开启会员，我会员开了快五年了，觉得已经离不开了。<br>  Web-Dev首先要在坚果云开启应用，登录你的坚果云账号，点击右上角的账号名称，选择【账户信息】-&gt;【安全选项】，看到下面有个<strong>第三方应用管理</strong>，点击【<strong>添加应用密码</strong>】。应用名称就写Zotero吧，方便好记。当然，你也可以用其他名字，不过这样以后你有可能就不知道这是哪个应用了。确定之后，就会自己生成一个应用密码。</p><p>  然后在Zotero中的同步进行设置，首先是你得注册Zotero,然后文件同步选择web-dev<br><img src="https://i.loli.net/2021/10/24/W3Kvr4OuzX9x5IS.png" alt=""><br>  然后输入对应的路径、以及坚果云的知乎以及密码，注意此处的密码是刚刚坚果云应用的密码，粘贴过来即可。</p><h2 id="与Obsidian的联合使用！"><a href="#与Obsidian的联合使用！" class="headerlink" title="与Obsidian的联合使用！"></a>与Obsidian的联合使用！</h2><p>另外就是和Obsidian的使用了，当我们使用obsidian管理文献之后，我们会对文献用adobe pdf进行标注，然后我们右键pdf文件，就选择提取标注，就可以将批注提取出来了<br><img src="https://i.loli.net/2021/10/24/uBZRGUKl6PVmE78.png" alt=""></p><p>如图所示<br><img src="https://i.loli.net/2021/10/24/ZOCmDw9nq3EduaK.png" alt=""></p><p>这样一些蓝色的链接，当你拷贝到Obsidian之后，点击是可以直接打开pdf对应的位置的，这其实是非常棒的，当你写了一个笔记，是关于某篇文献的某一页的标注，你可以直接精确应用，以后想看具体引用内容就可以非常方便的进行查看引用了。</p><h2 id="Ipad访问的方法"><a href="#Ipad访问的方法" class="headerlink" title="Ipad访问的方法"></a>Ipad访问的方法</h2><p>另外就是Ipad访问，我用的是Papership，以为是坚果云web-dev管理，因此可以直接在ipad进行查看、标注，也可以同步到电脑端。</p><h2 id="与Endnote的数据互通"><a href="#与Endnote的数据互通" class="headerlink" title="与Endnote的数据互通"></a>与Endnote的数据互通</h2><p>Endnote和Zotero可以通过导入、导出数据库来实线数据互通。</p><p>通过Endnote导出之后，需要手动将PDF与xml文件夹放在同一个大的根文件夹里面，再从Zotero里面导入才可以将PDF信息也导入进去。</p><p>通过Zotero导出的文件，默认PDF文件夹和xml文件已经在同一个文件夹，从Endnote导入时，需要导入之后，手动将PDF文件夹放在对应的Endnote library的数据库的PDF文件夹中。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EndNote </tag>
            
            <tag> 文献管理 </tag>
            
            <tag> Zotero </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python生成Origin或者MATLAB的Pal格式的颜色图文件</title>
      <link href="/2021/07/24/C_%E6%95%99%E7%A8%8B_Python%E7%94%9F%E6%88%90Origin%E6%88%96%E8%80%85MATLAB%E6%89%80%E9%9C%80%E9%A2%9C%E8%89%B2%E5%9B%BE%E6%96%87%E4%BB%B6/"/>
      <url>/2021/07/24/C_%E6%95%99%E7%A8%8B_Python%E7%94%9F%E6%88%90Origin%E6%88%96%E8%80%85MATLAB%E6%89%80%E9%9C%80%E9%A2%9C%E8%89%B2%E5%9B%BE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-MATLAB-origin-colormap"><a href="#Python-MATLAB-origin-colormap" class="headerlink" title="Python #MATLAB #origin #colormap"></a>Python #MATLAB #origin #colormap</h1><p>Python的颜色图（ <a href="https://matplotlib.org/stable/tutorials/colors/colormaps.html">colormaps</a>）非常多而且非常好看，在用Origin或者MATLAB的时候自己也想用Python的颜色图，因此写了这样一个程序。其中用Python生成MATLAB程序已经在另外一篇博客介绍过了<a href="这是我的本地位置，不能打开">[Software&amp;Program/MATLAB/C_教程_MATLAB如何自定义颜色曲线]</a>，网络链接为<a href="https://knifelees3.github.io/2021/01/30/C_%E6%95%99%E7%A8%8B_MATLAB%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A2%9C%E8%89%B2%E6%9B%B2%E7%BA%BF/">MATLAB如何自定义颜色曲线</a></p><p><img src="https://raw.githubusercontent.com/knifelees3/pycmap2palormat/main/Snipaste_20210724213844.png" alt=""></p><p>而Python生成Origin的Pal文件则需要保存为二进制数据，并且得有一些头文件的信息输出。我参考了MATLAB的一个函数<a href="https://www.mathworks.com/matlabcentral/fileexchange/43114-cmap2pal-convert-matlab-colormap-to-binary-pal-format">cmap2pal</a><br>这里面最关键的输出二进制文件的操作为：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% Open file</span></span><br><span class="line">fid=fopen(path,<span class="string">'w'</span>,mf);</span><br><span class="line"><span class="keyword">if</span>(fid&lt;<span class="number">0</span>)</span><br><span class="line">    throw(MException(<span class="string">'cmap2pal:Open'</span>,<span class="string">'Error opening file (%s) for writing'</span>,path));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write RIFF signature</span></span><br><span class="line">fwrite(fid,<span class="string">'RIFF'</span>,<span class="string">'uint8'</span>,<span class="number">0</span>,mf);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write file length</span></span><br><span class="line">fwrite(fid,flen<span class="number">-8</span>,<span class="string">'uint32'</span>,<span class="number">0</span>,mf);                               <span class="comment">% 8 byte header (RIFF header)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write PAL signature</span></span><br><span class="line">fwrite(fid,<span class="string">'PAL '</span>,<span class="string">'uint8'</span>,<span class="number">0</span>,mf);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write data signature</span></span><br><span class="line">fwrite(fid,<span class="string">'data'</span>,<span class="string">'uint8'</span>,<span class="number">0</span>,mf);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write data block size</span></span><br><span class="line">fwrite(fid,flen<span class="number">-20</span>,<span class="string">'uint32'</span>,<span class="number">0</span>,mf);                              <span class="comment">% 20 byte header (RIFF + Chunk)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write version number</span></span><br><span class="line">fwrite(fid,[<span class="number">0</span>,<span class="number">3</span>],<span class="string">'uint8'</span>,<span class="number">0</span>,mf);                                 <span class="comment">% Always 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write palette length</span></span><br><span class="line">fwrite(fid,depth,<span class="string">'uint16'</span>,<span class="number">0</span>,mf);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% Write palette data</span></span><br><span class="line">fwrite(fid,[cmap.*<span class="number">255</span>,<span class="built_in">zeros</span>(depth,<span class="number">1</span>)]',<span class="string">'uint8'</span>,<span class="number">0</span>,mf);           <span class="comment">% RGBA tuples</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% Close file</span></span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><br>Python为了生成二进制文件，需要借助包<code>struct</code><br>里面关于数据的输出格式是这样的<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pastedimage20210724135425.png" alt=""><br>而对应的MATLAB格式<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pastedimage20210724135645.png" alt=""><br>通过在<a href="https://stackoverflow.com/questions/68506574/how-to-write-char-and-integer-into-binary-files-with-specificed-precison-using-p">StackOverflow</a>知道了正确的代码书写方式,我还写了一个图形界面版本，<br><img src="https://raw.githubusercontent.com/knifelees3/pycmap2palormat/main/image-20210724211211555.png" alt=""><br>代码详情可见我的github地址：<br><a href="https://github.com/knifelees3/pycmap2palormat"># pycmap2palormat</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MATLAB </tag>
            
            <tag> Colormap </tag>
            
            <tag> Origin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meep教程(3):Meep的模式投影方法计算偶极子耦合到光波导的效率</title>
      <link href="/2021/07/11/C_%E6%95%99%E7%A8%8B_%E7%94%A8Meep%E8%AE%A1%E7%AE%97%E5%81%B6%E6%9E%81%E5%AD%90%E8%80%A6%E5%90%88%E5%88%B0%E5%85%89%E6%B3%A2%E5%AF%BC%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%95%88%E7%8E%87/"/>
      <url>/2021/07/11/C_%E6%95%99%E7%A8%8B_%E7%94%A8Meep%E8%AE%A1%E7%AE%97%E5%81%B6%E6%9E%81%E5%AD%90%E8%80%A6%E5%90%88%E5%88%B0%E5%85%89%E6%B3%A2%E5%AF%BC%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%95%88%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<h1 id="Meep"><a href="#Meep" class="headerlink" title="Meep"></a>Meep</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>因为实验室需要，我的研究生生涯相当一部分就是在计算这个耦合效率，偶极子放在波导附近时，其一部分能量会耦合到波导中去，偶极子可以是任意的荧光分子、量子点等，我们希望提高这个耦合效率，其定义为耦合到波导部分的功率比上总的辐射功率</p><script type="math/tex; mode=display">\beta=\frac{p_{guide}}{p_{total}}</script><p>其中$p<em>{guide}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="85.973ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 38000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">偶</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">极</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">子</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">耦</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">合</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">到</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">波</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">导</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">功</text></g><g data-mml-node="mi" transform="translate(11000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mi" transform="translate(12000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(13000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">需</text></g><g data-mml-node="mi" transform="translate(14000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">要</text></g><g data-mml-node="mi" transform="translate(15000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(16000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">传</text></g><g data-mml-node="mi" transform="translate(17000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">播</text></g><g data-mml-node="mi" transform="translate(18000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="mi" transform="translate(19000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">向</text></g><g data-mml-node="mi" transform="translate(20000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">上</text></g><g data-mml-node="mi" transform="translate(21000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">将</text></g><g data-mml-node="mi" transform="translate(22000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">总</text></g><g data-mml-node="mi" transform="translate(23000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">场</text></g><g data-mml-node="mi" transform="translate(24000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">与</text></g><g data-mml-node="mi" transform="translate(25000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">波</text></g><g data-mml-node="mi" transform="translate(26000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">导</text></g><g data-mml-node="mi" transform="translate(27000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">模</text></g><g data-mml-node="mi" transform="translate(28000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g><g data-mml-node="mi" transform="translate(29000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">场</text></g><g data-mml-node="mi" transform="translate(30000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">进</text></g><g data-mml-node="mi" transform="translate(31000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">行</text></g><g data-mml-node="mi" transform="translate(32000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">投</text></g><g data-mml-node="mi" transform="translate(33000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">影</text></g><g data-mml-node="mi" transform="translate(34000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">得</text></g><g data-mml-node="mi" transform="translate(35000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">到</text></g><g data-mml-node="mi" transform="translate(36000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(37000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">而</text></g></g></g></svg></mjx-container>p</em>{total}$则是偶极子总的辐射功率，需要计算包裹偶极子的一个封闭面上的坡印廷矢量的积分。这是最一般最有效的方法，其实还有基于模式分析的半解析方法来计算，我这里就不在详细讨论，本笔记目的只是为了计算出正确的耦合效率。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/DipoleNearGuideStructure.png" alt=""></p><h2 id="波导模式求解"><a href="#波导模式求解" class="headerlink" title="波导模式求解"></a>波导模式求解</h2><p>这次的结构要复杂一些，如下图所示<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/DipoleNearGuideonSub.png" alt=""></p><p>我们还是需要先求解一下对应的波导模式，和上篇笔记的做法一样，只是结构更加复杂了，设置结构的代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> meep <span class="keyword">as</span> mp</span><br><span class="line"><span class="keyword">from</span> meep <span class="keyword">import</span> mpb</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">omega = <span class="number">1</span>/<span class="number">0.78</span></span><br><span class="line"><span class="comment"># index of material</span></span><br><span class="line">index_SiN=<span class="number">2.02</span></span><br><span class="line">index_SiO2=<span class="number">1.46</span></span><br><span class="line">index_PVA=<span class="number">1.5</span></span><br><span class="line">index_An=<span class="number">1.8</span></span><br><span class="line"><span class="comment"># The size of the guide</span></span><br><span class="line">width=<span class="number">0.65</span></span><br><span class="line">height=<span class="number">0.25</span></span><br><span class="line"></span><br><span class="line">height_An=<span class="number">0.2</span></span><br><span class="line">height_PVA=<span class="number">0.03</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The size of simulation domain</span></span><br><span class="line">width_cal=<span class="number">2.5</span></span><br><span class="line">length_cal=<span class="number">2.5</span></span><br><span class="line">height_cal=<span class="number">2.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Thinkness of PML</span></span><br><span class="line">t_pml=<span class="number">0.4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The size of box to obatin the dipole power</span></span><br><span class="line">size_x=<span class="number">0.3</span></span><br><span class="line">size_y=<span class="number">0.3</span></span><br><span class="line">size_z=<span class="number">0.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The position of dipole</span></span><br><span class="line">pos_x=<span class="number">0</span></span><br><span class="line">pos_y=<span class="number">0</span></span><br><span class="line">pos_z=height+<span class="number">0.005</span></span><br><span class="line"></span><br><span class="line">resolution=<span class="number">50</span></span><br><span class="line">numx=<span class="built_in">int</span>(width_cal*resolution)</span><br><span class="line">numy=<span class="built_in">int</span>(height_cal*resolution)</span><br><span class="line">x_list=np.linspace(-width_cal/<span class="number">2</span>,width_cal/<span class="number">2</span>,numx)</span><br><span class="line">y_list=np.linspace(-height_cal/<span class="number">2</span>,height_cal/<span class="number">2</span>,numy)</span><br><span class="line">x_grid,y_grid=np.meshgrid(x_list,y_list)</span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">cell_size = mp.Vector3(length_cal,width_cal,height_cal)</span><br><span class="line"></span><br><span class="line">pml_layers = [mp.Absorber(thickness=t_pml,direction=mp.Y),</span><br><span class="line">                   mp.PML(thickness=t_pml,direction=mp.Z),</span><br><span class="line">                   mp.PML(thickness=t_pml,direction=mp.X)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Y dipole </span></span><br><span class="line">source = [mp.Source(mp.ContinuousSource(frequency= omega), </span><br><span class="line">            component = mp.Ex, center=mp.Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.255</span>) )]</span><br><span class="line"></span><br><span class="line">geometry = [mp.Block(material=mp.Medium(epsilon=index_SiN**<span class="number">2</span>), </span><br><span class="line">                     size=mp.Vector3(mp.inf,width, height),</span><br><span class="line">                     center=mp.Vector3(<span class="number">0</span>, <span class="number">0</span>, height/<span class="number">2</span>)),</span><br><span class="line"></span><br><span class="line">            mp.Block(material=mp.Medium(epsilon=index_SiO2**<span class="number">2</span>),</span><br><span class="line">                     size=mp.Vector3(mp.inf,mp.inf, height_cal/<span class="number">2</span>),</span><br><span class="line">                     center=mp.Vector3(<span class="number">0</span>, <span class="number">0</span>, -height_cal/<span class="number">4</span>)),</span><br><span class="line"></span><br><span class="line">            mp.Block(material=mp.Medium(epsilon=index_An**<span class="number">2</span>),</span><br><span class="line">                     size=mp.Vector3(mp.inf,mp.inf, height_An),</span><br><span class="line">                     center=mp.Vector3(<span class="number">0</span>, <span class="number">0</span>, height+height_An/<span class="number">2</span>)),</span><br><span class="line">            mp.Block(material=mp.Medium(epsilon=index_PVA**<span class="number">2</span>),</span><br><span class="line">                     size=mp.Vector3(mp.inf,mp.inf, height_PVA),</span><br><span class="line">                     center=mp.Vector3(<span class="number">0</span>, <span class="number">0</span>, height+height_An+height_PVA/<span class="number">2</span>))</span><br><span class="line">                     ]</span><br></pre></td></tr></table></figure><p>然后是计算波导模式和绘图<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">geometry_lattice = mp.Lattice(size=mp.Vector3(<span class="number">0</span>, width_cal, height_cal))</span><br><span class="line">num_modes = <span class="number">1</span></span><br><span class="line">ms = mpb.ModeSolver(</span><br><span class="line">    geometry_lattice = geometry_lattice,</span><br><span class="line">    geometry         = geometry,</span><br><span class="line">    resolution       = resolution,</span><br><span class="line">    num_bands        = num_modes)</span><br><span class="line"><span class="comment"># ms.init_sim()</span></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">E = []</span><br><span class="line">store_fields = <span class="keyword">lambda</span> ms_temp, mode: E.append(ms_temp.get_efield(which_band=mode,bloch_phase=<span class="literal">False</span>))    </span><br><span class="line"></span><br><span class="line">mode=<span class="number">1</span></span><br><span class="line">k = ms.find_k(</span><br><span class="line">    mp.NO_PARITY, <span class="comment"># p</span></span><br><span class="line">    omega, <span class="comment"># omega</span></span><br><span class="line">    mode, <span class="comment"># band_min</span></span><br><span class="line">    mode, <span class="comment"># band_max</span></span><br><span class="line">    mp.Vector3(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>), <span class="comment"># korig_and_kdir</span></span><br><span class="line">    <span class="number">1e-4</span>, <span class="comment"># tol</span></span><br><span class="line">    omega * <span class="number">2</span>, <span class="comment"># kmag_guess</span></span><br><span class="line">    omega * <span class="number">0.1</span>, <span class="comment"># kmag_min</span></span><br><span class="line">    omega * <span class="number">4</span>, <span class="comment"># kmag_max</span></span><br><span class="line">    store_fields <span class="comment"># band_funcs</span></span><br><span class="line">    )</span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">neff=k[<span class="number">0</span>]/omega</span><br><span class="line">eps = ms.get_epsilon()</span><br><span class="line">eps_arr=np.transpose(np.array(eps))</span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line"><span class="comment"># Plot the E fields</span></span><br><span class="line">mode=<span class="number">0</span></span><br><span class="line">Ex=np.squeeze(E[mode][:,:,<span class="number">0</span>,<span class="number">0</span>]).transpose()</span><br><span class="line">Ey=np.squeeze(E[mode][:,:,<span class="number">0</span>,<span class="number">1</span>]).transpose()</span><br><span class="line">Ez=np.squeeze(E[mode][:,:,<span class="number">0</span>,<span class="number">2</span>]).transpose()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Current band: {}'</span>.<span class="built_in">format</span>(mode+<span class="number">1</span>))</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># plt.pcolormesh(x_grid,y_grid,eps.transpose(), cmap='binary')</span></span><br><span class="line">plt.pcolormesh(x_grid,y_grid,np.<span class="built_in">abs</span>(Ex), cmap=<span class="string">'jet'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">plt.axis(<span class="string">'off'</span>)</span><br><span class="line">plt.title(<span class="string">'Ex'</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment"># plt.pcolormesh(x_grid,y_grid,eps.transpose(), cmap='binary')</span></span><br><span class="line">plt.pcolormesh(x_grid,y_grid,np.<span class="built_in">abs</span>(Ey), cmap=<span class="string">'jet'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">plt.axis(<span class="string">'off'</span>)</span><br><span class="line">plt.title(<span class="string">'Ey'</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment"># plt.pcolormesh(x_grid,y_grid,eps.transpose(), cmap='binary')</span></span><br><span class="line">plt.pcolormesh(x_grid,y_grid,np.<span class="built_in">abs</span>(Ez), cmap=<span class="string">'jet'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">plt.axis(<span class="string">'off'</span>)</span><br><span class="line">plt.title(<span class="string">'Ez'</span>)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br><span class="line">plt.savefig(<span class="string">'SimulatedField_onChip.png'</span>)</span><br></pre></td></tr></table></figure></p><p>其模场分布如下<br><img src="https://raw.githubusercontent.com/knifelees3/MEEPStudy/master/SimulatedField_onChip.png" alt=""><br>其折射率平方的分布绘制出来，便于我们进一步检查结构是否准确<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fig1=plt.figure()</span><br><span class="line">plt.pcolormesh(x_grid,y_grid,eps_arr,  cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.savefig(<span class="string">'StructuresonChip.png'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><br>其分布如下<br><img src="https://raw.githubusercontent.com/knifelees3/MEEPStudy/master/StructuresonChip.png" alt=""><br>因此我们的结构设置是没有问题的。</p><h2 id="求解耦合效率"><a href="#求解耦合效率" class="headerlink" title="求解耦合效率"></a>求解耦合效率</h2><p>我们需要设置一个封闭的面包裹住偶极子，将表面的功率密度积分，得到总功率，还需要设置两个模式投影，其实只需要一个，因为结构是对称的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">sim = mp.Simulation(resolution=resolution,</span><br><span class="line"></span><br><span class="line"> cell_size=cell_size,</span><br><span class="line"></span><br><span class="line"> boundary_layers=pml_layers,</span><br><span class="line"></span><br><span class="line"> geometry=geometry,</span><br><span class="line"></span><br><span class="line"> sources=source,</span><br><span class="line"></span><br><span class="line"> eps_averaging= <span class="literal">False</span>,</span><br><span class="line"></span><br><span class="line"> Courant = <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 模式投影面设置</span></span><br><span class="line"></span><br><span class="line">box_1 = sim.add_mode_monitor(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(<span class="number">0.2</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line"></span><br><span class="line"> size=mp.Vector3(<span class="number">0</span>,width_cal,height_cal))) </span><br><span class="line"></span><br><span class="line">box_2 = sim.add_mode_monitor(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(-<span class="number">0.2</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line"></span><br><span class="line"> size=mp.Vector3(<span class="number">0</span>,width_cal,height_cal))) </span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 总积分面设置</span></span><br><span class="line"></span><br><span class="line">box_x1 = sim.add_flux(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(pos_x-size_x/<span class="number">2</span>,pos_y,pos_z),size=mp.Vector3(<span class="number">0</span>,size_y,size_z)))</span><br><span class="line"></span><br><span class="line">box_x2 = sim.add_flux(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(pos_x+size_x/<span class="number">2</span>,pos_y,pos_z),size=mp.Vector3(<span class="number">0</span>,size_y,size_z)))</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">box_y1 = sim.add_flux(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(pos_x,pos_y-size_y/<span class="number">2</span>,pos_z),size=mp.Vector3(size_x,<span class="number">0</span>,size_z)))</span><br><span class="line"></span><br><span class="line">box_y2 = sim.add_flux(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(pos_x,pos_y+size_y/<span class="number">2</span>,pos_z),size=mp.Vector3(size_x,<span class="number">0</span>,size_z)))</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">box_z1 = sim.add_flux(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(pos_x,pos_y,pos_z-size_z/<span class="number">2</span>),size=mp.Vector3(size_x,size_y,<span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line">box_z2 = sim.add_flux(omega, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">mp.FluxRegion(center=mp.Vector3(pos_x,pos_y,pos_z+size_z/<span class="number">2</span>),size=mp.Vector3(size_x,size_y,<span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br></pre></td></tr></table></figure></p><p>然后就可以计算然后输出结果了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sim.run(until_after_sources=</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mp.stop_when_fields_decayed(20, mp.Ey, pt, 1e-3))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sim.run(until_after_sources=20)</span></span><br><span class="line"></span><br><span class="line">sim.run(until=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"></span><br><span class="line">x1 = mp.get_fluxes(box_x1)</span><br><span class="line"></span><br><span class="line">x2 = mp.get_fluxes(box_x2)</span><br><span class="line"></span><br><span class="line">y1 = mp.get_fluxes(box_y1)</span><br><span class="line"></span><br><span class="line">y2 = mp.get_fluxes(box_y2)</span><br><span class="line"></span><br><span class="line">z1 = mp.get_fluxes(box_z1)</span><br><span class="line"></span><br><span class="line">z2 = mp.get_fluxes(box_z2)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">mode1 = sim.get_eigenmode_coefficients(box_1,</span><br><span class="line"></span><br><span class="line"> [<span class="number">1</span>], eig_parity=mp.NO_PARITY)</span><br><span class="line"></span><br><span class="line">mode2 = sim.get_eigenmode_coefficients(box_2,</span><br><span class="line"></span><br><span class="line"> [<span class="number">1</span>], eig_parity=mp.NO_PARITY)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"></span><br><span class="line">ptotal = -x1[<span class="number">0</span>]+x2[<span class="number">0</span>]-y1[<span class="number">0</span>]+y2[<span class="number">0</span>]-z1[<span class="number">0</span>]+z2[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">pmode_1 = <span class="built_in">abs</span>(mode1.alpha[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>])**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">pmode_2 = <span class="built_in">abs</span>(mode2.alpha[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>])**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">effic_1=pmode_1/ptotal</span><br><span class="line"></span><br><span class="line">effic_2=pmode_2/ptotal</span><br><span class="line"></span><br><span class="line">neff1 = mode1.kdom[<span class="number">0</span>].x/omega</span><br><span class="line"></span><br><span class="line">neff2 = mode2.kdom[<span class="number">0</span>].x/omega</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(neff1)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(neff2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"efficency to position direction:, {} "</span>.<span class="built_in">format</span>(effic_1))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"efficency to negative direction:, {} "</span>.<span class="built_in">format</span>(effic_2))</span><br></pre></td></tr></table></figure></p><h2 id="收敛性测试"><a href="#收敛性测试" class="headerlink" title="收敛性测试"></a>收敛性测试</h2><p>为了检查收敛性，我还改变了不同的分辨率（resolution），看结果是否准确，<br><a href="https://github.com/knifelees3/MEEPStudy/blob/master/DipoleEmissionNearWaveguide_BenchmarkResolution.py">代码地址</a><br>其结果如下<br><img src="https://raw.githubusercontent.com/knifelees3/MEEPStudy/master/benchmarkresolution_dipolenearguide.png" alt=""></p><p>可以看见其实只需要50的分辨率就可以了，后面结果变化的很小。</p><h2 id="与Lumerical和FDTD对比"><a href="#与Lumerical和FDTD对比" class="headerlink" title="与Lumerical和FDTD对比"></a>与Lumerical和FDTD对比</h2><p>另外我又扫描了偶极子的竖直高度和Lumerical FDTD以及COMSOL的解析结果对比，<a href="https://github.com/knifelees3/MEEPStudy/blob/master/DipoleEmissionNearWaveguide_SweepDipoleHeight.py">代码地址</a></p><p>其结果如下<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/power_comparison_20210711.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/beta_comparison_20210711.png" alt=""><br>可以看见Meep的Pguide的结果与COMSOL理论符合的非常好，与LumeircalFDTDSlutions不那么好，这与LumeircalFDTDSlutions归一化不好有关，而耦合效率吧则是完全对上的。</p><p>以上就是计算的全过程了。如果对你有帮助记得点赞~</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FDTD </tag>
            
            <tag> Meep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meep教程(2):Meep和MPB分别计算光波导模式教程</title>
      <link href="/2021/07/11/C_%E6%95%99%E7%A8%8B_%E7%94%A8Meep%E5%92%8CMPB%E8%AE%A1%E7%AE%97%E5%85%89%E6%B3%A2%E5%AF%BC%E6%A8%A1%E5%BC%8F/"/>
      <url>/2021/07/11/C_%E6%95%99%E7%A8%8B_%E7%94%A8Meep%E5%92%8CMPB%E8%AE%A1%E7%AE%97%E5%85%89%E6%B3%A2%E5%AF%BC%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Meep"><a href="#Meep" class="headerlink" title="Meep"></a>Meep</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>安装完Meep之后一直很少用它来做具体的计算，因为COMSOL和Lumerical FDTD Solutions确实有图形界面非常好用，最近想要计算偶极子耦合到直波导的耦合效率，用COMSOL计算三维结构需要较大的内存，用FDTD的时候服务器没有图形界面，扫描设置很不方便，这时候决定好好打磨一下Meep以为我所用。我的思路是：</p><ol><li>学会用Meep计算光波导模式并和COMSOL对上</li><li>学会用Meep设置偶极子的源计算并计算器耦合到波导模式的功率</li></ol><p>今天笔记主要讲的是第一步。</p><h2 id="那里可以学习？"><a href="#那里可以学习？" class="headerlink" title="那里可以学习？"></a>那里可以学习？</h2><p>Meep如果直接去浏览官方文档还是比较低效的，最好是可以直接从例子中学习，有不懂再去看。我也希望我把我的例子写出来可以帮助大家快速上手，用Meep计算波导模式有两个方法，我是各种浏览github的问题区域知道的，里面别人分享了很多的源代码。比如别人问为啥MPB和Meep计算的结果不一样，我就可以知道有两个方法计算波导模式：</p><ul><li><a href="https://github.com/NanoComp/meep/issues/893">issues893</a><br>另外具体的设置步骤还参考了这个讨论</li><li><a href="https://github.com/NanoComp/meep/issues/851">issues851</a><br>还有一个网站有非常多的例子，我觉得需要一级推荐的<br>[simpetuscloud]（<a href="http://www.simpetuscloud.com/projects.html#mpb_waveguide）">http://www.simpetuscloud.com/projects.html#mpb_waveguide）</a><br>如果要查询一斜函数的用法，可以查询这个页面<br>[Python_User_Interface](<a href="https://meep.readthedocs.io/en/latest/Python_User_Interface/）">https://meep.readthedocs.io/en/latest/Python_User_Interface/）</a></li></ul><p>总之就是多看别人的例子再去查询函数用法，我觉得是最快的。</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>我现在要计算的是，宽度为650nm，高度为250nm的SiN波导在波长为780nm处的波导模式。其结构如下<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/SimpleGuide.png" alt=""></p><h3 id="MPB实现"><a href="#MPB实现" class="headerlink" title="MPB实现"></a>MPB实现</h3><p>首先是插入一下包和设置基本的结构参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> meep <span class="keyword">as</span> mp</span><br><span class="line"><span class="keyword">from</span> meep <span class="keyword">import</span> mpb</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Then the wavelength</span></span><br><span class="line">omega = <span class="number">1</span>/<span class="number">0.78</span></span><br><span class="line">material_SiN=mp.Medium(index=<span class="number">2.02</span>)</span><br><span class="line">width_guide=<span class="number">0.65</span></span><br><span class="line">height_guide=<span class="number">0.25</span></span><br></pre></td></tr></table></figure><p>接下来就是要初始化处几何结构(geometry)，格点个数（resolution,每1um多少个）,我们先用MPB实现，这样我们还需要初始化三维原胞的结构，如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">resolution=<span class="number">200</span></span><br><span class="line">size_cal_y=<span class="number">2</span></span><br><span class="line">size_cal_z=<span class="number">2</span></span><br><span class="line"></span><br><span class="line">geometry = [mp.Block(material=material_SiN, </span><br><span class="line">                     size=mp.Vector3(mp.inf,width_guide, height_guide),</span><br><span class="line">                     center=mp.Vector3(<span class="number">0</span>, <span class="number">0</span>, height_guide/<span class="number">2</span>))]</span><br><span class="line">geometry_lattice = mp.Lattice(size=mp.Vector3(<span class="number">0</span>, size_cal_y, size_cal_z))</span><br></pre></td></tr></table></figure><br>我们的波导方向沿着X，只是为了计算模式，厚度设置为0，为一个二维问题。然后是设置我们要计算几个模式以及初始化计算对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">num_modes = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">ms = mpb.ModeSolver(</span><br><span class="line">    geometry_lattice = geometry_lattice,</span><br><span class="line">    geometry         = geometry,</span><br><span class="line">    resolution       = resolution,</span><br><span class="line">    num_bands        = num_modes</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>参数的详细设置可以参见源文档。接下来我们需要设置一个函数来讲每次计算的模式的场分布取出，这是通过上面的链接<a href="https://github.com/NanoComp/meep/issues/851">issues851</a>学到的，即需要设置<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E = []</span><br><span class="line">store_fields = <span class="keyword">lambda</span> ms_temp, mode: E.append(ms_temp.get_efield(which_band=mode,bloch_phase=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><br>然后就可以计算了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">k = ms.find_k(</span><br><span class="line">    mp.NO_PARITY,</span><br><span class="line">    omega, <span class="comment"># omega</span></span><br><span class="line">    <span class="number">1</span>, <span class="comment"># band_min</span></span><br><span class="line">    num_modes, <span class="comment"># band_max</span></span><br><span class="line">    mp.Vector3(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>), <span class="comment"># korig_and_kdir</span></span><br><span class="line">    <span class="number">1e-4</span>, <span class="comment"># tol</span></span><br><span class="line">    omega * <span class="number">2</span>, <span class="comment"># kmag_guess</span></span><br><span class="line">    omega * <span class="number">0.1</span>, <span class="comment"># kmag_min</span></span><br><span class="line">    omega * <span class="number">2</span>, <span class="comment"># kmag_max</span></span><br><span class="line">    store_fields, <span class="comment"># band_funcs</span></span><br><span class="line">)</span><br><span class="line">neff=k[<span class="number">0</span>]/omega <span class="comment"># 有效折射率</span></span><br><span class="line">eps = ms.get_epsilon() <span class="comment"># 折射率分布</span></span><br><span class="line">eps_arr=np.transpose(np.array(eps))</span><br></pre></td></tr></table></figure></p><p>绘制结果<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %%</span></span><br><span class="line">x_list=np.linspace(-size_cal_y/<span class="number">2</span>,size_cal_y/<span class="number">2</span>,resolution*<span class="number">2</span>)</span><br><span class="line">y_list=np.linspace(-size_cal_z/<span class="number">2</span>,size_cal_z/<span class="number">2</span>,resolution*<span class="number">2</span>)</span><br><span class="line">x_grid,y_grid=np.meshgrid(x_list,y_list)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</span><br><span class="line"><span class="comment"># Plot the E fields</span></span><br><span class="line"><span class="keyword">for</span> mode <span class="keyword">in</span> <span class="built_in">range</span>(num_modes):</span><br><span class="line">    Ex=np.squeeze(E[mode][:,:,<span class="number">0</span>,<span class="number">1</span>]).transpose()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Current band: {}'</span>.<span class="built_in">format</span>(mode+<span class="number">1</span>))</span><br><span class="line">    plt.subplot(<span class="number">1</span>,num_modes,<span class="number">1</span>+mode)</span><br><span class="line">    plt.pcolormesh(x_grid,y_grid,eps.transpose(), cmap=<span class="string">'binary'</span>)</span><br><span class="line">    plt.pcolormesh(x_grid,y_grid,np.<span class="built_in">abs</span>(Ex), cmap=<span class="string">'jet'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line">    st_title=<span class="string">'Ex of mode '</span>+<span class="built_in">str</span>(mode+<span class="number">1</span>)+<span class="string">' from MPB neff='</span> +<span class="built_in">str</span>(<span class="string">'%.2f'</span> %(k[mode]/omega))</span><br><span class="line">    plt.title(st_title)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.savefig(<span class="string">'SimulatedFieldMPB.png'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/knifelees3/MEEPStudy/master/SimulatedFieldMPB.png" alt=""><br>上面分别绘制出来了四个模式的Ex分量的实部。</p><h3 id="Meep实现"><a href="#Meep实现" class="headerlink" title="Meep实现"></a>Meep实现</h3><p>首先是插入一下包和设置基本的结构参数,和之前一样<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> meep <span class="keyword">as</span> mp</span><br><span class="line"><span class="keyword">from</span> meep <span class="keyword">import</span> mpb</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment">#Then the wavelength</span></span><br><span class="line">omega = <span class="number">1</span>/<span class="number">0.78</span></span><br><span class="line">material_SiN=mp.Medium(index=<span class="number">2.02</span>)</span><br><span class="line">width_guide=<span class="number">0.65</span></span><br><span class="line">height_guide=<span class="number">0.25</span></span><br><span class="line">resolution=<span class="number">200</span></span><br><span class="line">size_cal_y=<span class="number">2</span></span><br><span class="line">size_cal_z=<span class="number">2</span></span><br><span class="line"></span><br><span class="line">geometry = [mp.Block(material=material_SiN, </span><br><span class="line">                     size=mp.Vector3(mp.inf,width_guide, height_guide),</span><br><span class="line">                     center=mp.Vector3(<span class="number">0</span>, <span class="number">0</span>, height_guide/<span class="number">2</span>))]</span><br></pre></td></tr></table></figure><br>不同的是接下来我们需要设置PML边界条件,并同样的初始化对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">num_modes = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">dpml = <span class="number">0.5</span></span><br><span class="line">pml_layers = [mp.PML(dpml)]</span><br><span class="line">sim = mp.Simulation(cell_size=mp.Vector3(<span class="number">0</span>,size_cal_y+dpml*<span class="number">2</span>,size_cal_z+dpml*<span class="number">2</span>),</span><br><span class="line">                    resolution=resolution,</span><br><span class="line">                    geometry=geometry,</span><br><span class="line">                    boundary_layers=pml_layers,)</span><br><span class="line"></span><br><span class="line">sim.init_sim()</span><br><span class="line">where = mp.Volume(center=mp.Vector3(), size=mp.Vector3(<span class="number">0</span>,size_cal_y,size_cal_y))</span><br><span class="line">direction = mp.X <span class="comment">#波导方向</span></span><br><span class="line">kpoint = mp.Vector3(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><br>然后是计算，但是得提前准备好坐标，因为meep的函数<code>get_eigenmode</code>函数只能得到一个<code>amplitude</code>的方法，你可以通过该方法插值出场的数值，这个也是我仔细研究了一下函数的用法才发现的，所以算模式还是MPB吧<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">x_list=np.linspace(-size_cal_y/<span class="number">2</span>,size_cal_y/<span class="number">2</span>,resolution*<span class="number">2</span>)</span><br><span class="line">y_list=np.linspace(-size_cal_z/<span class="number">2</span>,size_cal_z/<span class="number">2</span>,resolution*<span class="number">2</span>)</span><br><span class="line">x_grid,y_grid=np.meshgrid(x_list,y_list)</span><br><span class="line">pos_extract=mp.Vector3(np.ravel(x_grid)*<span class="number">0</span>,np.ravel(x_grid),np.ravel(y_grid))</span><br><span class="line">Ex_mp=np.zeros((resolution*<span class="number">2</span>,resolution*<span class="number">2</span>,num_modes),dtype=<span class="built_in">complex</span>)</span><br><span class="line"><span class="comment"># Extract the field in a loop</span></span><br><span class="line">num_modes=<span class="number">4</span></span><br><span class="line">k_meep=np.zeros(num_modes)</span><br><span class="line"><span class="keyword">for</span> mode <span class="keyword">in</span> <span class="built_in">range</span>(num_modes):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Simultion Mode'</span>+<span class="built_in">str</span>(mode+<span class="number">1</span>))</span><br><span class="line">    ed = sim.get_eigenmode(omega, direction, where, mode+<span class="number">1</span>, kpoint, eig_vol=<span class="literal">None</span>, match_frequency=<span class="literal">True</span>, </span><br><span class="line">    parity=mp.NO_PARITY, resolution=resolution, eigensolver_tol=<span class="number">1e-12</span>)</span><br><span class="line">    k_meep[mode]=ed.k[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(resolution*<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(resolution*<span class="number">2</span>):</span><br><span class="line">            Ex_mp[l,m,mode]=ed.amplitude(mp.Vector3(<span class="number">0</span>,x_list[m],y_list[l]),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><br>然后绘制结果<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">14</span>,<span class="number">4</span>))</span><br><span class="line"><span class="keyword">for</span> mode <span class="keyword">in</span> <span class="built_in">range</span>(num_modes):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Current band: {}'</span>.<span class="built_in">format</span>(mode+<span class="number">1</span>))</span><br><span class="line">    plt.subplot(<span class="number">1</span>,num_modes,<span class="number">1</span>+mode)</span><br><span class="line">    plt.pcolormesh(x_grid,y_grid,np.<span class="built_in">abs</span>(Ex_mp[:,:,mode]), cmap=<span class="string">'jet'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line">    st_title=<span class="string">'Ex of mode '</span>+<span class="built_in">str</span>(mode+<span class="number">1</span>)+<span class="string">' from MEEP neff='</span> +<span class="built_in">str</span>(<span class="string">'%.2f'</span> %(k_meep[mode]/omega))</span><br><span class="line">    plt.title(st_title)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.savefig(<span class="string">'SimulatedFieldMeep.png'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/knifelees3/MEEPStudy/master/SimulatedFieldMeep.png" alt=""></p><h3 id="放在一起比较"><a href="#放在一起比较" class="headerlink" title="放在一起比较"></a>放在一起比较</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(12,8))</span><br><span class="line">for mode in range(num_modes):</span><br><span class="line">    print('Current band: {}'.format(mode+1))</span><br><span class="line">    plt.subplot(2,num_modes,1+mode)</span><br><span class="line">    plt.pcolormesh(x_grid,y_grid,np.abs(Ex_mp[:,:,mode]), cmap='jet', alpha=0.9)</span><br><span class="line">    plt.axis('off')</span><br><span class="line">    st_title='Ex of mode '+str(mode+1)+' from MEEP neff=' +str('%.2f' %(k_meep[mode]/omega))</span><br><span class="line">    plt.title(st_title)</span><br><span class="line">for mode in range(num_modes):</span><br><span class="line">    Ex=np.squeeze(E[mode][:,:,0,1]).transpose()</span><br><span class="line">    print('Current band: {}'.format(mode+1))</span><br><span class="line">    plt.subplot(2,num_modes,1+mode+num_modes)</span><br><span class="line">    plt.pcolormesh(x_grid,y_grid,np.abs(Ex), cmap='jet', alpha=0.9)</span><br><span class="line">    plt.axis('off')</span><br><span class="line">    st_title='Ex of mode '+str(mode+1)+' from MPB neff=' +str('%.2f' %(k[mode]/omega))</span><br><span class="line">    plt.title(st_title)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.savefig('SimulatedFieldCompare.png')</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/MEEPStudy/master/SimulatedFieldCompare.png" alt=""></p><p>可以看见二者结果一样，我也与COMSOL比对，结果是对的上的。因此通过Meep计算波导模式还是很简单的，这是一个最简答的波导模式，下一个笔记将会介绍如何计算更加复杂结果的波导模式以及需要注意的问题，以及计算偶极子耦合效率。</p><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>可以直接看我的github<br><a href="https://nbviewer.jupyter.org/github/knifelees3/MEEPStudy/blob/master/WaveguideModeSimulations.ipynb">WaveguideModeSimulations</a></p><p>觉得有帮助的话记得点赞加关注吧~</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FDTD </tag>
            
            <tag> Meep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 更新OpenSSH到8.6版本教程</title>
      <link href="/2021/06/30/C_%E6%95%99%E7%A8%8B_Centos8%E6%9B%B4%E6%96%B0Openssh%E7%89%88%E6%9C%AC%E8%87%B38dot6/"/>
      <url>/2021/06/30/C_%E6%95%99%E7%A8%8B_Centos8%E6%9B%B4%E6%96%B0Openssh%E7%89%88%E6%9C%AC%E8%87%B38dot6/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h1><p>最近被告知要对服务器的ssh进行更新，网上教程比较多，而且各不一样，最后找了一个看起来靠谱的教程</p><p><a href="https://blog.csdn.net/yiyihuazi/article/details/115965422">CSDN:CentOS 8 升级 OpenSSH 8.4</a></p><p>照着做几乎没出啥差错，只有一点小地方不一样，因此记录下来。</p><h2 id="OpenSSH-输入验证错误漏洞"><a href="#OpenSSH-输入验证错误漏洞" class="headerlink" title="OpenSSH 输入验证错误漏洞"></a>OpenSSH 输入验证错误漏洞</h2><blockquote><p>漏洞分类：通用漏洞检测</p><p>危险等级：高风险</p><p>影响主机：115.156.215.222 [ TCP / 22 ]</p><p>输出信息：</p><p>Installed version: 8.0<br>Fixed version: 8.1<br>Installation path / port: 22/tcp</p><p>详细描述：</p><p>[CVE-2019-16905]OpenSSH（OpenBSD Secure Shell）是OpenBSD计划组的一套用于安全访问远程计算机的连接工具。该工具是SSH协议的开源实现，支持对所有的传输进行加密，可有效阻止窃听、连接劫持以及其他网络级的攻击。OpenSSH 7.7版本至7.9版本和8.1之前的8.x版本中存在输入验证错误漏洞。该漏洞源于网络系统或产品未对输入的数据进行正确的验证。</p><p>CVE：CVE-2019-16905</p><p>CNNVD：CNNVD-201910-599</p></blockquote><h2 id="更新教程"><a href="#更新教程" class="headerlink" title="更新教程"></a>更新教程</h2><p>首先是一些编译依赖的安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install wget gcc -y</span><br><span class="line">yum install -y zlib-devel openssl-devel </span><br><span class="line">yum install pam-devel libselinux-devel zlib-devel openssl-devel -y</span><br></pre></td></tr></table></figure><p>然后下载最新版软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/src</span><br><span class="line">wget https://cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-8.6p1.tar.gz</span><br></pre></td></tr></table></figure><p>我下载没有成功，就手动下载了上传到服务器的<code>/usr/local/src</code>文件夹，然后我们需要做一个备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/ssh/sshd_config sshd_config.backup</span><br><span class="line"><span class="built_in">cp</span> /etc/pam.d/sshd sshd.backup</span><br></pre></td></tr></table></figure><p>此时可以删除低版本包，当然这个操作是有风险的，如果删除了但是安装不成功就远程连接不上去了，只有自己去远程服务器边上安装，保险办法是通过另外的手段远程连接，我自己没有遇到这个问题，所以就不赘述。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps `rpm -qa | grep openssh`</span><br></pre></td></tr></table></figure><p>解压安装新版本软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf openssh-8.6p1.tar.gz</span><br><span class="line"><span class="built_in">cd</span>  openssh-8.6p1</span><br></pre></td></tr></table></figure><p>设置编译配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure   --prefix=/usr   --sysconfdir=/etc/ssh    --with-md5-passwords   --with-pam --with-zlib   --with-tcp-wrappers    --with-ssl-dir=/usr/local/ssl   --without-hardening</span><br></pre></td></tr></table></figure><p> 编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>我安装时出现报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(<span class="built_in">cd</span> openbsd-compat &amp;&amp; make)</span><br><span class="line">make[1]: Entering directory <span class="string">'/usr/local/src/openssh-8.6p1/openbsd-comp         at'</span></span><br><span class="line">make[1]: Nothing to be <span class="keyword">done</span> <span class="keyword">for</span> <span class="string">'all'</span>.</span><br><span class="line">make[1]: Leaving directory <span class="string">'/usr/local/src/openssh-8.6p1/openbsd-compa         t'</span></span><br><span class="line">/bin/mkdir -p /usr/bin</span><br><span class="line">/bin/mkdir -p /usr/sbin</span><br><span class="line">/bin/mkdir -p /usr/share/man/man1</span><br><span class="line">/bin/mkdir -p /usr/share/man/man5</span><br><span class="line">/bin/mkdir -p /usr/share/man/man8</span><br><span class="line">/bin/mkdir -p /usr/libexec</span><br><span class="line">/bin/mkdir -p -m 0755 /var/empty</span><br><span class="line">/bin/install -c -m 0755 -s ssh /usr/bin/ssh</span><br><span class="line">/bin/install -c -m 0755 -s scp /usr/bin/scp</span><br><span class="line">/bin/install -c -m 0755 -s ssh-add /usr/bin/ssh-add</span><br><span class="line">/bin/install -c -m 0755 -s ssh-agent /usr/bin/ssh-agent</span><br><span class="line">/bin/install -c -m 0755 -s ssh-keygen /usr/bin/ssh-keygen</span><br><span class="line">/bin/install -c -m 0755 -s ssh-keyscan /usr/bin/ssh-keyscan</span><br><span class="line">/bin/install -c -m 0755 -s sshd /usr/sbin/sshd</span><br><span class="line">/bin/install -c -m 4711 -s ssh-keysign /usr/libexec/ssh-keysign</span><br><span class="line">/bin/install -c -m 0755 -s ssh-pkcs11-helper /usr/libexec/ssh-pkcs11-h         elper</span><br><span class="line">/bin/install -c -m 0755 -s ssh-sk-helper /usr/libexec/ssh-sk-helper</span><br><span class="line">/bin/install -c -m 0755 -s sftp /usr/bin/sftp</span><br><span class="line">/bin/install -c -m 0755 -s sftp-server /usr/libexec/sftp-server</span><br><span class="line">/bin/install -c -m 644 ssh.1.out /usr/share/man/man1/ssh.1</span><br><span class="line">/bin/install -c -m 644 scp.1.out /usr/share/man/man1/scp.1</span><br><span class="line">/bin/install -c -m 644 ssh-add.1.out /usr/share/man/man1/ssh-add.1</span><br><span class="line">/bin/install -c -m 644 ssh-agent.1.out /usr/share/man/man1/ssh-agent.1</span><br><span class="line">/bin/install -c -m 644 ssh-keygen.1.out /usr/share/man/man1/ssh-keygen         .1</span><br><span class="line">/bin/install -c -m 644 ssh-keyscan.1.out /usr/share/man/man1/ssh-keysc         an.1</span><br><span class="line">/bin/install -c -m 644 moduli.5.out /usr/share/man/man5/moduli.5</span><br><span class="line">/bin/install -c -m 644 sshd_config.5.out /usr/share/man/man5/sshd_conf         ig.5</span><br><span class="line">/bin/install -c -m 644 ssh_config.5.out /usr/share/man/man5/ssh_config         .5</span><br><span class="line">/bin/install -c -m 644 sshd.8.out /usr/share/man/man8/sshd.8</span><br><span class="line">/bin/install -c -m 644 sftp.1.out /usr/share/man/man1/sftp.1</span><br><span class="line">/bin/install -c -m 644 sftp-server.8.out /usr/share/man/man8/sftp-serv         er.8</span><br><span class="line">/bin/install -c -m 644 ssh-keysign.8.out /usr/share/man/man8/ssh-keysi         gn.8</span><br><span class="line">/bin/install -c -m 644 ssh-pkcs11-helper.8.out /usr/share/man/man8/ssh         -pkcs11-helper.8</span><br><span class="line">/bin/install -c -m 644 ssh-sk-helper.8.out /usr/share/man/man8/ssh-sk-         helper.8</span><br><span class="line">/bin/mkdir -p /etc/ssh</span><br><span class="line">ssh-keygen: generating new host keys: DSA</span><br><span class="line">/usr/sbin/sshd -t -f /etc/ssh/sshd_config</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">Permissions 0640 <span class="keyword">for</span> <span class="string">'/etc/ssh/ssh_host_rsa_key'</span> are too open.</span><br><span class="line">It is required that your private key files are NOT accessible by other         s.</span><br><span class="line">This private key will be ignored.</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">Permissions 0640 <span class="keyword">for</span> <span class="string">'/etc/ssh/ssh_host_ecdsa_key'</span> are too open.</span><br><span class="line">It is required that your private key files are NOT accessible by other         s.</span><br><span class="line">This private key will be ignored.</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">Permissions 0640 <span class="keyword">for</span> <span class="string">'/etc/ssh/ssh_host_ed25519_key'</span> are too open.</span><br><span class="line">It is required that your private key files are NOT accessible by other         s.</span><br><span class="line">This private key will be ignored.</span><br><span class="line">sshd: no hostkeys available -- exiting.</span><br><span class="line">make: [Makefile:383: check-config] Error 1 (ignored)</span><br></pre></td></tr></table></figure><p>发现应该是一些权限问题，再赋值一遍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /etc/ssh/ssh_host_rsa_key /etc/ssh/ssh_host_ecdsa_key /etc/ssh/ssh_host_ed25519_key</span><br></pre></td></tr></table></figure><p>再复制文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -a contrib/redhat/sshd.init  /etc/init.d/sshd</span><br><span class="line"><span class="built_in">chmod</span> u+x /etc/init.d/sshd</span><br></pre></td></tr></table></figure><p>设置允许root用户远程登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>此时需要注意：</p><ul><li><p>修改<code>#PermitRootLogin prohibit-password</code>项，去掉注释<code>#并把prohibit-password</code>改为<code>yes</code>，修改后即为<code>PermitRootLogin yes</code></p></li><li><p>去掉注释<code>#PasswordAuthentication yes</code>变为<code>`PasswordAuthentication yes</code> 如果使用证书登陆可以关闭这个</p></li><li><p>升级之后sftp如果不好用了，需要注意的是要查看一下相关设置，新的是<code>Subsystem sftp /usr/libexec/sftp-server</code>原始系统自带的是<code>Subsystem sftp /usr/libexec/openssh/sftp-server</code></p></li><li><p>一般系统是开启PAM模块的，但是编译安装升级后，这个是关闭状态，如果启用PAM，需要有一个控制文件，去掉注释#UsePAM no 变为<code>UsePAM yes</code>,如果打开这个模式，不要忘了把配置文件<code>/etc/pam.d/sshd.backup</code>改回来,否则登陆不了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/pam.d/sshd.backup /etc/pam.d/sshd</span><br></pre></td></tr></table></figure><p>如果没有<code>/etc/pam.d/sshd</code>文件，可以手动创建一个，使用默认的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#%PAM-1.0auth       required     pam_sepermit.soauth       substack     password-authauth       include      postlogin# Used with polkit to reauthorize users in remote sessions-auth      optional     pam_reauthorize.so prepareaccount    required     pam_nologin.soaccount    include      password-authpassword   include      password-auth# pam_selinux.so close should be the first session rulesession    required     pam_selinux.so closesession    required     pam_loginuid.so# pam_selinux.so open should only be followed by sessions to be executed in the user contextsession    required     pam_selinux.so open env_paramssession    required     pam_namespace.sosession    optional     pam_keyinit.so force revokesession    include      password-authsession    include      postlogin# Used with polkit to reauthorize users in remote sessions</span></span><br></pre></td></tr></table></figure></li></ul><p>最后添加开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add sshd</span><br><span class="line">chkconfig sshd on</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure><p>成功！</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/微信截图_20210630160216.png" alt=""></p><h2 id="图形界面不能使用"><a href="#图形界面不能使用" class="headerlink" title="图形界面不能使用"></a>图形界面不能使用</h2><p>安装完之后会发现图形界面不能使用，需要经过以下几步才行：</p><ol><li>重新安装<code>GNOME</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">"GNOME"</span></span><br></pre></td></tr></table></figure></li><li>修改配置文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>改成下面的样子<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># X11Forwarding no --&gt; X11Forwarding yes</span></span><br><span class="line"><span class="comment"># X11DisplayOffset 10 --&gt; X11DisplayOffset 10</span></span><br><span class="line"><span class="comment"># X11UseLocalhost no --&gt; X11UseLocalhost no</span></span><br></pre></td></tr></table></figure>然后重启相关服务以及设置默认图形化界面<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart gdm.service</span><br><span class="line">systemctl restart sshd</span><br><span class="line">systemctl set-default graphical.target</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量子计算与量子信息（二）量子隐形传态</title>
      <link href="/2021/06/16/E_%E7%89%A9%E7%90%86-%E9%87%8F%E5%AD%90%E9%9A%90%E5%BD%A2%E4%BC%A0%E6%80%81/"/>
      <url>/2021/06/16/E_%E7%89%A9%E7%90%86-%E9%87%8F%E5%AD%90%E9%9A%90%E5%BD%A2%E4%BC%A0%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Quantum-Optics"><a href="#Quantum-Optics" class="headerlink" title="Quantum #Optics"></a>Quantum #Optics</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>量子隐形传态是一个非常经典的利用纠缠来远距离传输量子态的方式，该方案需要我们首先具有一对纠缠的粒子（如光子），该方案在1993年被<a href="https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.70.1895">Bernet教授等人</a>提出，并很快得到了实验上的验证，这篇笔记主要是想讲清楚该方案的原理以及实验方案。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/2022/Snipaste_2022-08-08-23-02-08.png" alt="经典文章"></p><h2 id="EPR对"><a href="#EPR对" class="headerlink" title="EPR对"></a>EPR对</h2><p>EPR无论是对于量子力学的发展还是对于量子信息的发展都至关重要。1935年Einstein, Podolsky, 和Rosen 提出了一个假想实验认为纠缠的粒子似乎会发生超距作用从而来否定量子力学的一些观点。EPR对即两个纠缠的粒子，可以是不同的物理量之间发生纠缠，物理量也可以分为连续变量和离散变量两种，离散变量描述相对简单，可以先用该变量说明：</p><h3 id="非连续变量的表述"><a href="#非连续变量的表述" class="headerlink" title="非连续变量的表述"></a>非连续变量的表述</h3><p>我们假设有两个纠缠的粒子比如电子，其自旋的方向更好是相反的，且满足守恒律，即一个如果自旋向上，那么一个就是自旋向下，可以将该粒子态表示为</p><script type="math/tex; mode=display">|\psi\rangle=\frac{1}{\sqrt{2}}(|\uparrow\downarrow\rangle+|\downarrow\uparrow\rangle)</script><p>如果将两个粒子放的非常远，此时测量粒子1，有可能自旋向上，也有可能自旋向下。但是一旦粒子1测量完毕，那么粒子2的状态也就跟着确定了。此时发生了超距作用！对于该超距作用，波尔认为，我们在测量之前，不存在所谓的两个粒子，只有测量之后，才具有实实在在的粒子。不过对于该EPR实验，我曾经有两点疑惑：</p><ol><li>这不是发生了超光速作用吗？<br>其实不是的，因为粒子1测量了之后，只有通过经典手段将结果报告给粒子2的测量者，信息才算传递成功，所以信息并没有超光速。</li><li>这和我们闭着眼睛从一个盒子拿出一个红色、蓝色的球，然后如果一个是红色，那么另外一个就是蓝色，有何区别？<br>其实是有区别的，一个是叠加态，一个是个宏观混合的概率性事件。我们可以对两个纠缠的电子进行操作变成其他的方向纠缠的电子对，但是纠缠仍然存在。对于两个不同颜色的球来说，我将这边的球涂成淡蓝色不会让那边的球变成淡红色!</li></ol><h3 id="连续变量的表述"><a href="#连续变量的表述" class="headerlink" title="连续变量的表述"></a>连续变量的表述</h3><p>最开始在1935年，爱因斯坦他们表述的确实动量、坐标表象下的纠缠。</p><script type="math/tex; mode=display">\begin{aligned}|\psi\rangle&=\int\int dx_{1}dx_{2}\psi(x_{1},x_{2})|x_{1},x_{2}\rangle\\&=\int\int dx_{1}dx_{2}\delta(x_{1}+x_{2}-u)|x_{1},x_{2}\rangle\\&=\int dx |x,u-x\rangle\end{aligned}</script><p>即两个的坐标是完全纠缠的，不过这个表示是不可归一化的，也是不物理的，不过我们可以认为其是对于某修分布的一些极限情况，比如高斯函数非常窄，我们就可以认为是一个<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.005ex" height="1.645ex" role="img" focusable="false" viewBox="0 -717 444 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g></g></g></svg></mjx-container>函数。另外该态的动量表示也很容易获得，只需要作傅里叶变换</p><script type="math/tex; mode=display">\begin{aligned}|\psi\rangle&=\int\int dx_{1}dx_{2}\delta(x_{1}+x_{2}-u)|x_{1},x_{2}\rangle\\&=\int\int dx_{1}dx_{2}\delta(x_{1}+x_{2}-u)\iint dk_{1}dk_{2}|k_{1}k_{2}\rangle\langle k_{1}k_{2}||x_{1},x_{2}\rangle\\&=\frac{1}{2\pi}\iint \iint dx_{1}dx_{2} (e^{ik_{1}x_{1}+ik_{2}x_{2}}+e^{ik_{1}x_{2}+ik_{2}x_{1}})\delta(x_{1}+x_{2}-u)|k_{1}k_{2}\rangle\\&=\frac{1}{2\pi}\int \iint dx_{1}dk_{1}dk_{2}(e^{(ik_{1}-ik_{2})x_{1}+ik_{2}u})|k_{1}k_{2}\rangle+\frac{1}{2\pi}\int \iint dx_{2}dk_{1}dk_{2}(e^{(ik_{1}-ik_{2})x_{2}+ik_{2}u})|k_{1}k_{2}\rangle\\&=\iint dk_{1}dk_{2}\delta(k_{1}-k_{2})e^{ik_{2}u}|k_{1}k_{2}\rangle\\&=\int dk e^{ik u}|k,-k\rangle\end{aligned}</script><h2 id="非连续变量表述的隐形传态"><a href="#非连续变量表述的隐形传态" class="headerlink" title="非连续变量表述的隐形传态"></a>非连续变量表述的隐形传态</h2><p>接下来我来介绍大家非常熟悉的非连续变量的隐形传态。我们假设Alice和Bob相距比较远，而且手中都具有一个EPR对中的一个粒子。Bell态作为纠缠最大的态有四个</p><script type="math/tex; mode=display">|\Psi\rangle_{\pm}=\frac{1}{\sqrt{2}}(|0\rangle|1\rangle\pm|1\rangle|0\rangle)</script><script type="math/tex; mode=display">|\Phi\rangle_{\pm}=\frac{1}{\sqrt{2}}(|0\rangle|0\rangle\pm|1\rangle|1\rangle)</script><p>假设由粒子A、B组成的EPR对表示为（其中的一个）</p><script type="math/tex; mode=display">|\psi\rangle_{EPR}=\frac{1}{\sqrt{2}}(|0\rangle_{A}|1\rangle_{B}+|1\rangle_{A}|0\rangle_{B})</script><p>另外Alice手中还有一个态$|\psi<em>{0}\rangle<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="24.147ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 10673 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">需</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">要</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">交</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">给</text></g><g data-mml-node="mi" transform="translate(4000,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(4759,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5244,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(5673,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(6673,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(7673,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(8673,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">假</text></g><g data-mml-node="mi" transform="translate(9673,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">设</text></g></g></g></svg></mjx-container>|\psi</em>{C}\rangle=\alpha|0\rangle+\beta|1\rangle$，那么整个体系可以表示为</p><script type="math/tex; mode=display">\begin{aligned}|\psi\rangle_{0} &=|\psi\rangle_{EPR}\otimes|\psi_{C}\rangle\\& =\frac{1}{\sqrt{2}}(|0\rangle_{A}|1\rangle_{B}+|1\rangle_{A}|0\rangle_{B})\otimes(\alpha|0\rangle_{C}+\beta|1\rangle_{C})\\\end{aligned}</script><p>用“0”表示这是初始态，接下来将Alice手中的态展开为贝尔态来看，需要用以下关系替换</p><script type="math/tex; mode=display">|00\rangle=|\Phi\rangle_{+}+|\Phi\rangle_{-},|11\rangle=|\Phi\rangle_{+}-|\Phi\rangle_{-}</script><script type="math/tex; mode=display">|01\rangle=|\Psi\rangle_{+}+|\Psi\rangle_{-},|10\rangle=|\Psi\rangle_{+}-|\Psi\rangle_{-}</script><p>因此</p><script type="math/tex; mode=display">\begin{aligned}|\psi\rangle_{0} & =\frac{1}{\sqrt{2}}(|0\rangle_{A}|1\rangle_{B}+|1\rangle_{A}|0\rangle_{B})\otimes(\alpha|0\rangle_{C}+\beta|1\rangle_{C})\\&=\frac{1}{\sqrt{2}}(\alpha|0\rangle_{A}|0\rangle_{C}+\beta|0\rangle_{A}|1\rangle_{C})|1\rangle_{B}+\frac{1}{\sqrt{2}}(\alpha|1\rangle_{A}|0\rangle_{C}+\beta|1\rangle_{A}|1\rangle_{C})|0\rangle_{B}\\&=\frac{1}{\sqrt{2}}[\alpha(|\Phi\rangle_{+}+|\Phi\rangle_{-})+\beta(|\Psi\rangle_{+}+|\Psi\rangle_{-})]|1\rangle_{B}\\&+\frac{1}{\sqrt{2}}[\alpha(|\Psi\rangle_{+}-|\Psi\rangle_{-})+\beta(|\Phi\rangle_{+}-|\Phi\rangle_{-})]|0\rangle_{B}\\&=\frac{1}{\sqrt{2}}(\alpha|1\rangle_{B}+\beta|0\rangle_{B})|\Phi\rangle_{+}\\&+\frac{1}{\sqrt{2}}(\alpha|1\rangle_{B}-\beta|0\rangle_{B})|\Phi\rangle_{-}\\&+\frac{1}{\sqrt{2}}(\beta|1\rangle_{B}+\alpha|0\rangle_{B})|\Psi\rangle_{+}\\&+\frac{1}{\sqrt{2}}(\beta|1\rangle_{B}-\alpha|0\rangle_{B})|\Psi\rangle_{-}\\\end{aligned}</script><p>即如果我们此时在Bell基下测量，就会有四种结果，知道了结果之后，我们就知道Bob手中的态变成了什么，就可以相应的对手中的态做变换即可。例如我们测量到的是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.582ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2467.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="3A8" d="M340 622Q338 623 335 625T331 629T325 631T314 634T298 635T274 636T239 637H212V683H224Q248 680 389 680T554 683H566V637H539Q479 637 464 635T439 622L438 407Q438 192 439 192Q443 193 449 195T474 207T507 232T536 276T557 344Q560 365 562 417T573 493Q587 536 620 544Q627 546 671 546H715L722 540V515Q714 509 708 509Q680 505 671 476T658 392T644 307Q599 177 451 153L438 151V106L439 61Q446 54 451 52T476 48T539 46H566V0H554Q530 3 389 3T224 0H212V46H239Q259 46 273 46T298 47T314 48T325 51T331 54T335 57T340 61V151Q126 178 117 406Q115 503 69 509Q55 509 55 526Q55 541 59 543T86 546H107H120Q150 546 161 543T184 528Q198 514 204 493Q212 472 213 420T226 316T272 230Q287 216 303 207T330 194L339 192Q340 192 340 407V622Z"></path></g><g data-mml-node="msub" transform="translate(1056,0)"><g data-mml-node="mo"><path data-c="27E9" d="M55 732Q56 739 61 744T75 750Q85 750 92 740Q95 733 186 494T278 250T187 6T92 -240Q85 -250 75 -250Q67 -250 62 -245T55 -232Q55 -227 145 11Q236 248 236 250T145 489Q55 727 55 732Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2078.1,0)"><path data-c="27E9" d="M55 732Q56 739 61 744T75 750Q85 750 92 740Q95 733 186 494T278 250T187 6T92 -240Q85 -250 75 -250Q67 -250 62 -245T55 -232Q55 -227 145 11Q236 248 236 250T145 489Q55 727 55 732Z"></path></g></g></g></svg></mjx-container> ,那么就需要让Bob手动的态进行一个Swap操作即可。这样我们只是通过测量并给Alice报告了一个结果，态就从Alice手中传输到了Bob手中！</p><h2 id="连续变量表述的隐形传态"><a href="#连续变量表述的隐形传态" class="headerlink" title="连续变量表述的隐形传态"></a>连续变量表述的隐形传态</h2><p>待续…</p><h2 id="具体实验实现方案？"><a href="#具体实验实现方案？" class="headerlink" title="具体实验实现方案？"></a>具体实验实现方案？</h2><p>隐形传态实验有多种物理实现方案，最常见的应该是光子，因为光子不容易退相干，且具有比较多的自由度来编码量子信息，比如偏振、频率以及路径等。</p><h3 id="偏振作为变量"><a href="#偏振作为变量" class="headerlink" title="偏振作为变量"></a>偏振作为变量</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pastedimage20210618091950.png" alt=""><br>由光子作为理想的纠缠粒子对，假设纠缠的变量是偏振，例如一些非线性材料在光照射时，会产生一对偏振互相垂直的光子对，且传播方向相反，这样偏振的维度就纠缠了起来。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/IMG_0017.png" alt=""></p><p>如上图所示，由源产生了偏振互相垂直的两个光子，分别发送到Alice和Bob方向。Alice手中还有一个光子偏振未知，即我们要传输的态。通过一个1/2分束器将来自于源的光子和需要传输的光子混合，然后再作贝尔测量，通过测量结果，判定Bob手中的态应该作何种变换。</p><h3 id="hat-x-hat-p-表象下的拍频测量"><a href="#hat-x-hat-p-表象下的拍频测量" class="headerlink" title="$\hat{x},\hat{p}$表象下的拍频测量"></a><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="3.438ex" height="2.271ex" role="img" focusable="false" viewBox="0 -810 1519.7 1004"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(313.8,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1016.7,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(334.8,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container>表象下的拍频测量</h3><p>另外还有利用连续变量加密的量子态的隐形传态，我自己还没有完全理解细节，感兴趣的可以查阅<a href="https://scholar.google.com/citations?user=Hhf5zIQAAAAJ&amp;hl=en">Philippe Grangier</a>的文章。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pastedimage20210618092051.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QuantumInformation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AFM数据处理软件Gwyddion的安装以及Python包的安装使用</title>
      <link href="/2021/03/29/C_%E6%95%99%E7%A8%8B_Gwyddion%E7%9A%84%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8APython%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/03/29/C_%E6%95%99%E7%A8%8B_Gwyddion%E7%9A%84%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8APython%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-AFM-Gwyddion"><a href="#Python-AFM-Gwyddion" class="headerlink" title="Python #AFM #Gwyddion"></a>Python #AFM #Gwyddion</h1><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/stacked5.png" alt=""></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>用AFM逐行扫描的高度数据往往需要处理以获得正确的高度分布。JPK公司提供的 原始软件“ JPKSPM数据处理”可以执行一些校准，但是我们无法从pytho程序中使用它，如果您要处理的文件很多，并且需要测试这些文件的不同处理方法，效率就会很低，因此我们还是希望有机会用脚本进行大批量的数据处理。<br>安装此软件包并不容易，因此我在Windows和Linux系统中都列出了该软件包的安装方法。</p><h2 id="安装Gwyddion的步骤"><a href="#安装Gwyddion的步骤" class="headerlink" title="安装Gwyddion的步骤"></a>安装Gwyddion的步骤</h2><h3 id="在windows的ubuntu子系统安装"><a href="#在windows的ubuntu子系统安装" class="headerlink" title="在windows的ubuntu子系统安装"></a>在windows的ubuntu子系统安装</h3><p>我的笔记本电脑已经安装了ubuntu子系统，首先想到的是在子系统中安装gwyddion，因为gywddion只支持python2.7，子系统安装不会改变我的python3的使用。 在Windows子系统“ ubuntu-18.04”中，我直接键入了以下命令以成功安装该软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gwyddion </span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-gobject</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-gtk2 libcanberra-gtk-module libcanberra-gtk3-module</span><br></pre></td></tr></table></figure><p>另外子系统是没有图形界面的，为了可以使用图形界面，你需要一个支持xserver的软件，我用的是moba xterm,你只要打开即可，然后在子系统命令行输入如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DISPLAY=localhost:0</span><br></pre></td></tr></table></figure></p><p>再在子系统输入<code>gwyddion</code>就会弹出图形界面了。</p><h3 id="在Windows上直接使用python模块安装"><a href="#在Windows上直接使用python模块安装" class="headerlink" title="在Windows上直接使用python模块安装"></a>在Windows上直接使用python模块安装</h3><p>在Windows上，如果要使用python模块，则需要安装32位版本。 您还需要安装此列表中列出的其他额外软件包。<br>[web]（<a href="https://sourceforge.net/projects/gwyddion/files/pygtk-win32/）。">https://sourceforge.net/projects/gwyddion/files/pygtk-win32/）。</a><br>下载所有软件包并安装即可，安装完之后打开gwyddion软件，如果可以在gwyddion的Data process菜单中看到“ python console”，则表明python模块已成功安装。</p><p>这样安装只能在gwyddion的python端使用，很不方便，我们希望的是可以在VSCode以及Jupyter里面使用，但是直接在这些地方使用插入<code>gwy</code>包时又会出错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line 1, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ImportError: No module named gwy</span><br></pre></td></tr></table></figure><p>这是因为环境变量的关系，可以按照下面的方式来解决</p><ol><li>首先将python27里面的DLLs文件夹也加入系统的环境变量</li><li><p>然后有三种方法来使用</p><ol><li>你可以从gwyddion的bin目录打开python，这样插入包的时候就可以找到文件了</li><li><p>或者你在任意位置打开Python，然后cd到Gwyddion的bin目录，插入<code>gwy</code>之后再cd回去，这个方法比较蠢，但是可以用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">Path_now=os.get\_cwd()</span><br><span class="line">   os.chdir(<span class="string">'C:/Program Files (x86)/Gwyddion/bin'</span>) </span><br><span class="line">   <span class="keyword">import</span> gwy</span><br><span class="line">   os.chdir(Path\_now)</span><br></pre></td></tr></table></figure></li><li>或者最简单也是最推荐的，将<code>gwyddion</code>加入到环境变量即可<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys </span><br><span class="line">sys.path.append(<span class="string">'C:/Program Files (x86)/Gwyddion/bin'</span>)</span><br><span class="line"><span class="keyword">import</span> gwy</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>我们可以从这里学到基本的使用<br><a href="http://gwyddion.net/documentation/user-guide-zh/pygwy.html） 还可以在gwy模块中查看功能列表[功能列表](http://gwyddion.net/module-list.en.php">Python脚本</a><br>我们还可以通过阅读他人的讨论内容来向他人的程序学习<br>一个很好的例子</p><ul><li>例子1<br><a href="https://sourceforge.net/p/gwyddion/discussion/pygwy/thread/cb15ae99/">example of use I</a></li><li>例子2<br><a href="https://sourceforge.net/p/gwyddion/discussion/pygwy/thread/f634d66b/">example of use II</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> AFMDATA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python办公:自动化生成latex代码来整理大量的图片到PDF</title>
      <link href="/2021/02/04/C_%E6%95%99%E7%A8%8B_%E5%A6%82%E4%BD%95%E5%B7%A7%E7%94%A8Python%E7%94%9F%E6%88%90tex%E6%96%87%E4%BB%B6%E6%9D%A5%E6%95%B4%E7%90%86%E5%AD%A6%E6%9C%AF%E6%8A%A5%E5%91%8A%E7%9A%84%E6%88%AA%E5%9B%BE%E5%92%8C%E7%85%A7%E7%89%87/"/>
      <url>/2021/02/04/C_%E6%95%99%E7%A8%8B_%E5%A6%82%E4%BD%95%E5%B7%A7%E7%94%A8Python%E7%94%9F%E6%88%90tex%E6%96%87%E4%BB%B6%E6%9D%A5%E6%95%B4%E7%90%86%E5%AD%A6%E6%9C%AF%E6%8A%A5%E5%91%8A%E7%9A%84%E6%88%AA%E5%9B%BE%E5%92%8C%E7%85%A7%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Tools"><a href="#Python-Tools" class="headerlink" title="Python #Tools"></a>Python #Tools</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本篇笔记主要是记录我利用python生成LaTex文件来将很多图片整理并保存到PDF的过程。作为科研人员，或者学生，生活中常常会遇到这样的场景：</p><ul><li>在听取报告的时候，我们经常会将我们感兴趣的报告的PPT拍下来，后续再去查阅相关资料。理想很丰满，现实很骨感，实际上很多时候PPT拍完我们就不再会去整理了，因为太麻烦了。一系列照片，挨个分类保存还是很麻烦的。</li><li>在上课的时候，有的老师不会发PPT，遇到有疑问的也是手机保存一下。后续整理笔记也是会遇到照片太多不方便整理的情况。</li><li>做实验的时候，或者仿真的时候，也会产生很多图片，我们想将这些图片放到PPT里面展示，但是图片太多的时候，挨个选取图片、插入、排版都会浪费我们不少的时间。</li></ul><p>针对这个痛点，我决定用所学的编程知识让这一过程自动化，基本思路是：</p><ul><li>图片排版用Latex来完成，可以生成PDF的报告或者Beamer形式。</li><li>插入图片的Latex代码用Python来完成。</li></ul><p>下面是具体的实现</p><h2 id="准备一个模板latex文件"><a href="#准备一个模板latex文件" class="headerlink" title="准备一个模板latex文件"></a>准备一个模板latex文件</h2><p>我们需要先准备一个模板Latex文件，模板文件大致有所有的需要的基本代码，我的大致如下：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[mathserif]{beamer}</span><br><span class="line"><span class="keyword">\usetheme</span>{CambridgeUS}<span class="comment">%主题</span></span><br><span class="line"><span class="comment">%\usetheme{default}%主题</span></span><br><span class="line"><span class="comment">%\usecolortheme{rose}</span></span><br><span class="line"><span class="comment">%\useoutertheme{smoothbars}</span></span><br><span class="line"><span class="comment">%\useinnertheme{circles}</span></span><br><span class="line"><span class="keyword">\usepackage</span>{subfiles}</span><br><span class="line"><span class="keyword">\usepackage</span>{subfigure}</span><br><span class="line"><span class="comment">%\usepackage{tcolorbox}</span></span><br><span class="line"><span class="keyword">\usepackage</span>{graphics,float}</span><br><span class="line"><span class="keyword">\usepackage</span>{bm}</span><br><span class="line"><span class="keyword">\usepackage</span>{lipsum}</span><br><span class="line"><span class="keyword">\usepackage</span>{mathrsfs}<span class="comment">%花体插入的方法</span></span><br><span class="line"><span class="keyword">\usepackage</span>{listings}</span><br><span class="line"><span class="keyword">\usepackage</span>{float}</span><br><span class="line"><span class="keyword">\usepackage</span>{makecell}</span><br><span class="line"><span class="keyword">\usepackage</span>{bm}</span><br><span class="line"><span class="keyword">\usepackage</span>{indentfirst}</span><br><span class="line"><span class="keyword">\usepackage</span>{booktabs}</span><br><span class="line"><span class="comment">%\usepackage{ctex}</span></span><br><span class="line"><span class="keyword">\usepackage</span>{tikz}</span><br><span class="line"><span class="comment">%\usepackage[noend]{algpseudocode}</span></span><br><span class="line"><span class="keyword">\begin</span>{document}</span><br><span class="line"><span class="keyword">\title</span>{The title of report}</span><br><span class="line"><span class="keyword">\author</span>{Knifelees3}</span><br><span class="line"><span class="keyword">\institute</span>{HUST}</span><br><span class="line"><span class="keyword">\date</span>{<span class="keyword">\today</span>}</span><br><span class="line"><span class="keyword">\frame</span>{<span class="keyword">\titlepage</span>}</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>{frame}</span><br><span class="line">This note is a model for me to arrange files.</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>{frame}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>{document}</span><br></pre></td></tr></table></figure><p>我们要做的就是用Python读取这个模板文件的内容，然后将图片按照顺序贴出来。首先需要写一个函数可以列出我们所需要插入的图片文件的文件名列表<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">list_files</span>(<span class="params">dstdir</span>):</span><br><span class="line">    pnglist = []</span><br><span class="line">    <span class="keyword">for</span> filepath, dirnames, filenames <span class="keyword">in</span> os.walk(dstdir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"2"</span> <span class="keyword">in</span> filename <span class="keyword">and</span> filename.endswith(<span class="string">'.png'</span>):</span><br><span class="line">                pnglist.append(filename)</span><br><span class="line">    <span class="keyword">return</span> pnglist</span><br><span class="line"></span><br><span class="line"><span class="comment"># To obtain the str needed in latex file</span></span><br></pre></td></tr></table></figure><br>然后是读取我们的模板文件的内容<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">obtain_initial</span>(<span class="params">filename</span>):</span><br><span class="line">    lines = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="keyword">if</span> line != <span class="string">'\\end{document}'</span>:</span><br><span class="line">                lines.append(line)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> lines</span><br></pre></td></tr></table></figure><br>然后是有可能得写一个函数对图片名字进行纠正，比如如果我是用微信截图的，那么图片文件都会有”微信截图-“这样的开头，那么我就得写一个程序将前面的中文字符去掉，不然latex又得额外使用包来处理中文字符了。下面是我的代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To rename files by removing Chinese characters</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename_png</span>(<span class="params">filelist</span>):</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filelist:</span><br><span class="line">        filenamestr = <span class="built_in">str</span>(file)</span><br><span class="line">        filenew = filenamestr[<span class="number">5</span>:]</span><br><span class="line">        <span class="built_in">print</span>(filenew)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            os.rename(filenamestr, filenew)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'rename file fail\r\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'rename file success\r\n'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'END'</span>)</span><br></pre></td></tr></table></figure><br>然后最关键的一步就是将模板文件和插入图片的代码分别写到latex文件，其步骤如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To generate latex files</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gentex</span>(<span class="params">filename, filelist</span>):</span><br><span class="line">    num = <span class="built_in">len</span>(filelist)</span><br><span class="line">    modelfile = obtain_initial(<span class="string">'./model_beamer.tex'</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> modelfile:</span><br><span class="line">            f.write(<span class="string">'%s\n'</span> % line)</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">            f.write(<span class="string">'\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\begin{frame}\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\begin{figure}\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\centering\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\includegraphics[width=2.5in]{%s}\n'</span> % filelist[l])</span><br><span class="line">            f.write(<span class="string">'\\end{figure}\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\end{frame}\n'</span>)</span><br><span class="line">        f.write(<span class="string">'\\end{document}\n'</span>)</span><br><span class="line"></span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure></p><p>具体运行的全部代码我会附在末尾。最后整理出来的效果是啥样子的呢?下面是我的结果</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image-20210204102826026.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image-20210204102846467.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image-20210204102901708.png" alt=""></p><p>一共46页PPT如果是自己手动插入图品会浪费很多的时间，但是我们这个方法就是非常自动化的方法了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> shutil <span class="keyword">import</span> copy2</span><br><span class="line"><span class="comment"># To list the files in a specific folders</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_files</span>(<span class="params">dstdir</span>):</span><br><span class="line">    pnglist = []</span><br><span class="line">    <span class="keyword">for</span> filepath, dirnames, filenames <span class="keyword">in</span> os.walk(dstdir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"2"</span> <span class="keyword">in</span> filename <span class="keyword">and</span> filename.endswith(<span class="string">'.png'</span>):</span><br><span class="line">                pnglist.append(filename)</span><br><span class="line">    <span class="keyword">return</span> pnglist</span><br><span class="line"></span><br><span class="line"><span class="comment"># To obtain the str needed in latex file</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">obtain_initial</span>(<span class="params">filename</span>):</span><br><span class="line">    lines = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="keyword">if</span> line != <span class="string">'\\end{document}'</span>:</span><br><span class="line">                lines.append(line)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> lines</span><br><span class="line"></span><br><span class="line"><span class="comment"># To rename files by removing Chinese characters</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename_png</span>(<span class="params">filelist</span>):</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filelist:</span><br><span class="line">        filenamestr = <span class="built_in">str</span>(file)</span><br><span class="line">        filenew = filenamestr[<span class="number">5</span>:]</span><br><span class="line">        <span class="built_in">print</span>(filenew)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            os.rename(filenamestr, filenew)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'rename file fail\r\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">'rename file success\r\n'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'END'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># To generate latex files</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gentex</span>(<span class="params">filename, filelist</span>):</span><br><span class="line">    num = <span class="built_in">len</span>(filelist)</span><br><span class="line">    modelfile = obtain_initial(<span class="string">'./model_beamer.tex'</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> modelfile:</span><br><span class="line">            f.write(<span class="string">'%s\n'</span> % line)</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">            f.write(<span class="string">'\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\begin{frame}\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\begin{figure}\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\centering\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\includegraphics[width=2.5in]{%s}\n'</span> % filelist[l])</span><br><span class="line">            f.write(<span class="string">'\\end{figure}\n'</span>)</span><br><span class="line">            f.write(<span class="string">'\\end{frame}\n'</span>)</span><br><span class="line">        f.write(<span class="string">'\\end{document}\n'</span>)</span><br><span class="line"></span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ______________________________________________________________</span></span><br><span class="line">    <span class="comment"># On personal pc</span></span><br><span class="line">    rootdir = <span class="string">r'C:\Users\xiail\Documents\Dropbox\Note\VNote'</span></span><br><span class="line">    <span class="comment"># dstdir = r'C:</span></span><br><span class="line">    <span class="comment">#     Users\xiail\OneDrive\Blog\Blog_V1\source\_posts\'</span></span><br><span class="line">    <span class="comment"># test folder</span></span><br><span class="line">    dstdir = <span class="string">r'C:\Users\xiail\Desktop\量子计算'</span></span><br><span class="line"></span><br><span class="line">    pnglist = np.ravel(list_files(dstdir))</span><br><span class="line">    <span class="comment"># rename_png(pnglist)</span></span><br><span class="line">    gentex(<span class="string">"./test2.tex"</span>, pnglist)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        copy2(<span class="string">'./test2.tex'</span>, dstdir)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'copy file fail\r\n'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'copy file success\r\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'END'</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB如何自定义颜色曲线</title>
      <link href="/2021/01/30/C_%E6%95%99%E7%A8%8B_MATLAB%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A2%9C%E8%89%B2%E6%9B%B2%E7%BA%BF/"/>
      <url>/2021/01/30/C_%E6%95%99%E7%A8%8B_MATLAB%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A2%9C%E8%89%B2%E6%9B%B2%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-Colormap"><a href="#MATLAB-Colormap" class="headerlink" title="MATLAB #Colormap"></a>MATLAB #Colormap</h1><p>MATLAB有一套自己的颜色库，常用的都有，但是数量不算太多。我们有时候需要用到一些MATLAB没有的colormap，比如Python的<a href="https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html">Matplotlib</a>就有很多的colormap，我们也有可能需要自己来定义一些渐变的颜色。本片笔记主要是介绍colormap如何自己定义或者如何从网络上下载自己需要的颜色图并且使用。</p><h2 id="colormap的原理"><a href="#colormap的原理" class="headerlink" title="colormap的原理"></a>colormap的原理</h2><p>何为colormap？其实就是一个<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="5.906ex" height="1.595ex" role="img" focusable="false" viewBox="0 -683 2610.4 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(1110.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(2110.4,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container>的数值矩阵，数字是0到1的数据，分别对应的是RGB通道的强度，比如红色就是<code>[1,0,0]</code>。而颜色图是一个颜色变化的图，当你把这个数据给MATLAB之后，MATLAB会按照这个colormap在绘制数据的时候自动插值。所以我们可以任意自己定义一个colormap,下面是一个例子，<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">color_map_mine=[<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">100</span>)',<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">100</span>)',<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">0.5</span>,<span class="number">100</span>)'];</span><br><span class="line">x=<span class="built_in">linspace</span>(<span class="number">-3</span>,<span class="number">3</span>,<span class="number">200</span>);</span><br><span class="line">y=<span class="built_in">linspace</span>(<span class="number">-3</span>,<span class="number">3</span>,<span class="number">200</span>);</span><br><span class="line">[x_grid,y_grid]=<span class="built_in">meshgrid</span>(x,y);</span><br><span class="line">z=<span class="built_in">sin</span>(x_grid).*<span class="built_in">cos</span>(y_grid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pcolor(x_grid,y_grid,z);colormap(color_map_mine);shading interp;</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image16123519183490.png" alt=""></p><h2 id="获取Python的颜色图？"><a href="#获取Python的颜色图？" class="headerlink" title="获取Python的颜色图？"></a>获取Python的颜色图？</h2><p>Python有非常丰富的颜色图,比如下面的网站</p><p><a href="https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html">Choosing Colormaps in Matplotlib</a></p><p>就有比价多的颜色图种类，</p><p><img src="https://matplotlib.org/3.1.0/_images/sphx_glr_colormaps_002.png" alt=""></p><p>比如我们需要图里面的<code>purples</code>颜色图应该如何操作呢？我们首先需要在python中得到我们需要的颜色图的矩阵数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To export colormap</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> matplotlib.colors <span class="keyword">import</span> ListedColormap, LinearSegmentedColormap</span><br><span class="line"></span><br><span class="line">Purples = cm.get_cmap(<span class="string">'Purples'</span>, <span class="number">256</span>)</span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">purple_map=Purples(np.linspace(<span class="number">0</span>,<span class="number">1</span>,<span class="number">256</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">np.savetxt(<span class="string">'./purple_color_map.txt'</span>,purple_map)</span><br></pre></td></tr></table></figure><p>我们将得到的数据保存为一个<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="7.291ex" height="1.581ex" role="img" focusable="false" viewBox="0 -677 3222.4 699"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(1000,0)"></path></g><g data-mml-node="mo" transform="translate(1722.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(2722.4,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></svg></mjx-container>的矩阵，然后将数据保存为txt格式，再在MATLAB中导入并使用</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">clear data;</span><br><span class="line">data=importdata(<span class="string">'./purple_color_map.txt'</span>);</span><br><span class="line"><span class="comment">% 此处只取前3列即可。</span></span><br><span class="line">purple=data(:,<span class="number">1</span>:<span class="number">3</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>)</span><br><span class="line">pcolor(x_grid,y_grid,z);colormap(purple);shading interp;colorbar;</span><br></pre></td></tr></table></figure><p>得到的图如下，可以看见我们确实已经使用的是我们需要的颜色图了。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image16123670055660.png" alt=""></p><h2 id="自定义颜色图"><a href="#自定义颜色图" class="headerlink" title="自定义颜色图"></a>自定义颜色图</h2><p>更加高阶的操作就是自定义颜色图了，方法和之前一样。比如我们的目标是希望颜色图是某三个颜色的渐变，即颜色1到颜色2再到颜色3，我们首先的知道这些颜色的RGB值，这个可以通过PS或者CorelDraw的颜色吸管根据获得，然后再自己写一个竖直的渐变的矩阵，我一般直接是线形变化的。下面是具体的实际操作，比如我的要求是我希望颜色由红到蓝再到绿，那么三个颜色为</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">color_1=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">color_2=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">color_3=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>];</span><br></pre></td></tr></table></figure><p>假设绿色位于颜色图的中间，那么</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num12=<span class="number">100</span>;num23=<span class="number">100</span>;</span><br><span class="line">R_mat=[<span class="built_in">linspace</span>(color_1(<span class="number">1</span>),color_2(<span class="number">1</span>),num12),<span class="built_in">linspace</span>(color_2(<span class="number">1</span>),color_3(<span class="number">1</span>),num23)];</span><br><span class="line">G_mat=[<span class="built_in">linspace</span>(color_1(<span class="number">2</span>),color_2(<span class="number">2</span>),num12),<span class="built_in">linspace</span>(color_2(<span class="number">2</span>),color_3(<span class="number">2</span>),num23)];</span><br><span class="line">B_mat=[<span class="built_in">linspace</span>(color_1(<span class="number">3</span>),color_2(<span class="number">3</span>),num12),<span class="built_in">linspace</span>(color_2(<span class="number">3</span>),color_3(<span class="number">3</span>),num23)];</span><br><span class="line">color_map_RGB=[R_mat',G_mat',B_mat'];</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>)</span><br><span class="line">pcolor(x_grid,y_grid,z);colormap(color_map_RGB);shading interp;colorbar;</span><br></pre></td></tr></table></figure><p>绘制出来的结果如下</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image16123675502880.png" alt=""></p><p>你如果想改变颜色的位置只需要认为设置<code>num12,num23</code>的 比例即可。所以一旦搞懂了MATLAB使用颜色原理，我们就可以有非常大的自由度进行设计优化我们的颜色图了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本片笔记主要是总结了如何自定义MATLAB的颜色图或者从Python获取其颜色图在MATLAB使用，更加高阶的用法可以后续在尝试，但实际使用中目前的这些手段已经绝对是够了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> Colormap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB光滑数据的方法总结</title>
      <link href="/2020/12/24/C_%E6%95%99%E7%A8%8B_MATLAB_%E5%85%89%E6%BB%91%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2020/12/24/C_%E6%95%99%E7%A8%8B_MATLAB_%E5%85%89%E6%BB%91%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-Dataprocessing"><a href="#MATLAB-Dataprocessing" class="headerlink" title="MATLAB #Dataprocessing"></a>MATLAB #Dataprocessing</h1><h2 id="MATLAB光滑数据的方法总结"><a href="#MATLAB光滑数据的方法总结" class="headerlink" title="MATLAB光滑数据的方法总结"></a>MATLAB光滑数据的方法总结</h2><p>对于数据的光滑，我开始理解的不透彻，直接用了一些MATLAB、Python的内置函数，没有理解其内在本质，仔细看了一些技术文章，了解了其基本原理，总结出来，希望以后可以用到</p><p><a href="https://blog.csdn.net/weixin_42943114/article/details/107693068">几种常用信号平滑去噪的方法</a></p><h3 id="含普通噪声的数据的光滑"><a href="#含普通噪声的数据的光滑" class="headerlink" title="含普通噪声的数据的光滑"></a>含普通噪声的数据的光滑</h3><p>普通噪声即随机的噪声，是一些比较随机的波动。我们可以做的只是让这些波动变得<strong>平均</strong>。要去除背景还得用测量的结果减去背景才行。MATLAB内置了很多的函数，我们取其中的<code>smoothdata</code>,<code>filter</code>,<code>movmean</code>函数，另外还可以手动来做卷积，来比较结果的异同。<code>smoothdata</code>的处理含<code>movmean</code>的选项，所以我们直接用<code>smoothdata</code>函数即可。代码如下</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">10</span>,<span class="number">100</span>);</span><br><span class="line">y=<span class="built_in">exp</span>(-(x<span class="number">-5</span>).^<span class="number">2</span>)+ <span class="number">0.25</span>*<span class="built_in">rand</span>(<span class="built_in">size</span>(x));</span><br><span class="line">y_0=<span class="built_in">exp</span>(-(x<span class="number">-5</span>).^<span class="number">2</span>);</span><br><span class="line">window=<span class="number">5</span>;</span><br><span class="line">b = (<span class="number">1</span>/window)*<span class="built_in">ones</span>(<span class="number">1</span>,window);</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">y_smooth_gaussian=smoothdata(y,<span class="string">'gaussian'</span>,window);</span><br><span class="line">y_smooth_flitter=filter(b,a,y);</span><br><span class="line">y_smooth_cov=conv(y,b,<span class="string">'same'</span>);</span><br><span class="line">y_smooth_movemean=smoothdata(y,<span class="string">'movmean'</span>,window);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">'DisplayName'</span>,<span class="string">'noised data'</span>,<span class="string">'linewidth'</span>,<span class="number">1.5</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y_smooth_gaussian,<span class="string">'DisplayName'</span>,<span class="string">'smoothdata'</span>,<span class="string">'linewidth'</span>,<span class="number">1.5</span>)</span><br><span class="line">grid on</span><br><span class="line"><span class="built_in">plot</span>(x,y_smooth_flitter,<span class="string">'DisplayName'</span>,<span class="string">'filter'</span>,<span class="string">'linewidth'</span>,<span class="number">1.5</span>)</span><br><span class="line">grid on</span><br><span class="line"><span class="built_in">plot</span>(x,y_smooth_cov,<span class="string">'DisplayName'</span>,<span class="string">'conver'</span>,<span class="string">'linewidth'</span>,<span class="number">1.5</span>)</span><br><span class="line">grid on</span><br><span class="line"><span class="built_in">plot</span>(x,y_smooth_movemean,<span class="string">'DisplayName'</span>,<span class="string">'movemean'</span>,<span class="string">'linewidth'</span>,<span class="number">1.5</span>)</span><br><span class="line">grid on</span><br><span class="line"><span class="built_in">plot</span>(x,y_0,<span class="string">'DisplayName'</span>,<span class="string">'without noise'</span>,<span class="string">'linewidth'</span>,<span class="number">1.5</span>)</span><br><span class="line">grid on</span><br><span class="line"><span class="built_in">legend</span>()</span><br><span class="line">xlabel(<span class="string">'x'</span>);ylabel(<span class="string">'y'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/untitled-20201224.png" alt=""></p><p>我们是在原函数的基础上加了背景，所以数据即使被光滑以后，也还是与源数据对不上。<strong>降噪</strong>此时只是减去了波动，而不是真的可以减去噪声。如果我们减去同样比例波动的噪声呢？</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/untitled-1608775388747.png" alt=""></p><p>发现结果就可以在源数据附近波动了。</p><p>从上面的结果还可以看见，<strong><code>movmean</code>相当于对于一个均匀的<code>窗口函数</code>做卷积，不过边界点<code>movmean</code>会又专门做特殊处理。</strong></p><h3 id="处理离群值（粗大误差）的方法"><a href="#处理离群值（粗大误差）的方法" class="headerlink" title="处理离群值（粗大误差）的方法"></a>处理离群值（粗大误差）的方法</h3><p>离群值是指在测量值中，出现了一些反常的值，这个反常值与附近的其它正常值差别非常大。实验中经常有一些异常值，比如我们的荧光实验中会有一些突然的亮点，这些值可能来自宇宙射线等，怎么处理掉这些值呢？</p><p>我这里主要想介绍标准差法和MAD法。</p><ul><li><p><strong>标准差法</strong>又叫做 3 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.292ex" height="1ex" role="img" focusable="false" viewBox="0 -431 571 442"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g></g></g></svg></mjx-container>法。目的是规定一个数据波动阈值，当数据超过这个阈值的时候，便认为该数据离群。这个方法阈值的选取方法，采用窗口数据的3倍标准差。</p></li><li><p><strong>MAD法</strong>也是定义了一个阈值，这个阈值叫做中位数绝对偏差MAD。如果超过了3倍的MAD，则认为该数据离群。</p></li></ul><p>两者在Matlab里，可以用<code>filloutliers()</code>函数进行实现。下面代码对比了标准差法和MAD法在消除离群值的效果:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">t = <span class="number">0</span>:<span class="number">0.06</span>:<span class="number">10</span>;</span><br><span class="line">A = <span class="built_in">sin</span>(t)+<span class="number">0.1</span>*<span class="built_in">rand</span>(<span class="built_in">size</span>(t));</span><br><span class="line"></span><br><span class="line">Ri = randi(<span class="built_in">length</span>(t),<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line">A2 = A;</span><br><span class="line">A2(Ri) = A(Ri)*<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>)</span><br><span class="line">B2 = filloutliers(A2,<span class="string">'linear'</span>,<span class="string">'movmean'</span>,<span class="number">11</span>);<span class="comment">%标准差法</span></span><br><span class="line">B3 = filloutliers(A2,<span class="string">'linear'</span>,<span class="string">'movmedian'</span>,<span class="number">11</span>);<span class="comment">%MAD法</span></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot</span>(t,A2)</span><br><span class="line">YL = ylim;</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">plot</span>(t,B2)</span><br><span class="line">ylim(YL)</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">plot</span>(t,B3)</span><br><span class="line">ylim(YL)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/untitled-1608776923927.png" alt=""></p><p>可以看见离群值通过<code>MAD</code>方法可以被非常有效的去除掉。</p><h3 id="兼顾去噪和去除离群噪声？"><a href="#兼顾去噪和去除离群噪声？" class="headerlink" title="兼顾去噪和去除离群噪声？"></a>兼顾去噪和去除离群噪声？</h3><p>MATLAB自带的函数<code>smoothdata</code>还有几种基于回归的方法，</p><blockquote><ul><li><code>'lowess'</code> — Linear regression over each window of <code>A</code>. This method can be computationally expensive, but results in fewer discontinuities.</li><li><code>'loess'</code> — Quadratic regression over each window of <code>A</code>. This method is slightly more computationally expensive than <code>'lowess'</code>.</li><li><code>'rlowess'</code> — Robust linear regression over each window of <code>A</code>. This method is a more computationally expensive version of the method <code>'lowess'</code>, but it is more robust to outliers.</li><li><code>'rloess'</code> — Robust quadratic regression over each window of <code>A</code>. This method is a more computationally expensive version of the method <code>'loess'</code>, but it is more robust to outlier</li></ul></blockquote><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/untitled-1608777604011.png" alt=""></p><p>从上面图可以看见，<code>loess</code>,<code>rlowess</code>可以兼顾噪声和光滑数据。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运用Python的CV2库检测tiff图形中的圆形</title>
      <link href="/2020/12/22/C_%E6%95%99%E7%A8%8B_Python%E7%9A%84CV2%E5%BA%93%E6%A3%80%E6%B5%8Btiff%E5%9B%BE%E5%BD%A2%E4%B8%AD%E7%9A%84%E5%9C%86%E5%BD%A2/"/>
      <url>/2020/12/22/C_%E6%95%99%E7%A8%8B_Python%E7%9A%84CV2%E5%BA%93%E6%A3%80%E6%B5%8Btiff%E5%9B%BE%E5%BD%A2%E4%B8%AD%E7%9A%84%E5%9C%86%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Dataprocessing"><a href="#Python-Dataprocessing" class="headerlink" title="Python #Dataprocessing"></a>Python #Dataprocessing</h1><h2 id="如何确定实验数据的圆形？"><a href="#如何确定实验数据的圆形？" class="headerlink" title="如何确定实验数据的圆形？"></a>如何确定实验数据的圆形？</h2><p>实验数据保存为Tiff文件，其实就是一个强度分布的矩阵，与实际的图片是有区别的。</p><blockquote><p>标签图像文件格式（Tag Image File Format，TIFF）是一种灵活的<a href="https://baike.baidu.com/item/%E4%BD%8D%E5%9B%BE/1017781">位图</a>格式，主要用来存储包括照片和艺术图在内的图像，最初由Aldus公司与<a href="https://baike.baidu.com/item/%E5%BE%AE%E8%BD%AF%E5%85%AC%E5%8F%B8/732128">微软公司</a>一起为<a href="https://baike.baidu.com/item/PostScript">PostScript</a>打印开发。TIFF与<a href="https://baike.baidu.com/item/JPEG">JPEG</a>和<a href="https://baike.baidu.com/item/PNG">PNG</a>一起成为流行的高位彩色图像格式。TIFF格式在业界得到了广泛的支持，如<a href="https://baike.baidu.com/item/Adobe">Adobe</a>公司的<a href="https://baike.baidu.com/item/Photoshop">Photoshop</a>、The GIMP Team的<a href="https://baike.baidu.com/item/GIMP">GIMP</a>、Ulead PhotoImpact和<a href="https://baike.baidu.com/item/Paint%20Shop%20Pro">Paint Shop Pro</a>等图像处理应用、<a href="https://baike.baidu.com/item/QuarkXPress">QuarkXPress</a>和<a href="https://baike.baidu.com/item/Adobe%20InDesign">Adobe InDesign</a>这样的桌面印刷和页面排版应用，<a href="https://baike.baidu.com/item/%E6%89%AB%E6%8F%8F/4576310">扫描</a>、传真、文字处理、<a href="https://baike.baidu.com/item/%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/4162921">光学字符识别</a>和其它一些应用等都支持这种格式。从Aldus获得了<a href="https://baike.baidu.com/item/PageMaker">PageMaker</a>印刷应用程序的Adobe公司控制着TIFF规范。</p></blockquote><p>我们需要一个检测圆的算法来实现，我主要参考了这两个教程<br><a href="https://www.pyimagesearch.com/2014/07/21/detecting-circles-images-using-opencv-hough-circles/">Detecting Circles in Images using OpenCV and Hough Circles</a><br><a href="https://www.geeksforgeeks.org/circle-detection-using-opencv-python/">Circle Detection using OpenCV | Python</a></p><p>但是我需要再做更改的是：</p><ul><li><p>上面给的例子都是导入一个颜色图，具有RGB三个通道的数据，我们用<code>cv2</code>库可以轻松实现不同颜色通道的表示方法。</p></li><li><p>实验数据是tiff文件，其实是单通道的数据，我们需要先读取数据</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.array(plt.imread(Path+Filename))</span><br></pre></td></tr></table></figure><p>  再将数据保存为<code>uint8</code>格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = img.astype(np.uint8)</span><br></pre></td></tr></table></figure><p>再保存为灰度图像数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gray = np.array(Image.fromarray(img))</span><br></pre></td></tr></table></figure><p>再进行锐化处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gray_blurred = cv2.blur(gray, (<span class="number">3</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>最后运用函数<code>cv2.HoughCircles</code>来检测</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">detected_circles = cv2.HoughCircles(gray_blurred,</span><br><span class="line">                                    cv2.HOUGH_GRADIENT, dp=<span class="number">20</span>, minDist=<span class="number">400</span>, param1=<span class="number">50</span>,</span><br><span class="line">                                    param2=<span class="number">30</span>, minRadius=<span class="number">60</span>, maxRadius=<span class="number">90</span>)</span><br></pre></td></tr></table></figure><p>可以定义一个函数完成这些操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">find_center</span>(<span class="params">image_ori, num_approxi</span>):</span><br><span class="line">    num_size_ori = np.shape(image_ori)[<span class="number">0</span>]</span><br><span class="line">    num_size_ori_half = <span class="built_in">int</span>(num_size_ori/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># First approximated range of the picture</span></span><br><span class="line">    num_approxi = <span class="number">200</span></span><br><span class="line">    img = image_ori[num_size_ori_half-num_approxi:num_size_ori_half +</span><br><span class="line">                    num_approxi, num_size_ori_half-num_approxi:num_size_ori_half+num_approxi]</span><br><span class="line"></span><br><span class="line">    img = img.astype(np.uint8)</span><br><span class="line">    gray = np.array(Image.fromarray(img))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Blur using 3 * 3 kernel.</span></span><br><span class="line">    gray_blurred = cv2.blur(gray, (<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">    <span class="comment">#gray_blurred =gray</span></span><br><span class="line">    <span class="comment"># Apply Hough transform on the blurred image.</span></span><br><span class="line">    detected_circles = cv2.HoughCircles(gray_blurred,</span><br><span class="line">                                        cv2.HOUGH_GRADIENT, dp=<span class="number">20</span>, minDist=<span class="number">400</span>, param1=<span class="number">50</span>,</span><br><span class="line">                                        param2=<span class="number">30</span>, minRadius=<span class="number">60</span>, maxRadius=<span class="number">90</span>)</span><br><span class="line">    <span class="comment"># if detected_circles is not None:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#     # Convert the circle parameters a, b and r to integers.</span></span><br><span class="line">    <span class="comment">#     detected_circles = np.uint16(np.around(detected_circles))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#     for pt in detected_circles[0, :]:</span></span><br><span class="line">    <span class="comment">#         a, b, r = pt[0], pt[1], pt[2]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#         # Draw the circumference of the circle.</span></span><br><span class="line">    <span class="comment">#         cv2.circle(img, (a, b), r, (0, 255, 0), 2)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#         # Draw a small circle (of radius 1) to show the center.</span></span><br><span class="line">    <span class="comment">#         cv2.circle(img, (a, b), 1, (0, 0, 255), 3)</span></span><br><span class="line">    <span class="comment">#         cv2.imshow("Detected Circle", img)</span></span><br><span class="line">    <span class="comment">#         cv2.waitKey(0)</span></span><br><span class="line">    <span class="keyword">return</span> detected_circles</span><br></pre></td></tr></table></figure><p>效果图为</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image-20201224173107821.png" alt="image-20201224173107821"></p><p>发现效果还是可以的，自己还是得微调才行。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 图形识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cent OS 远程安装软件root无法打开图形界面的解决</title>
      <link href="/2020/10/31/C_%E6%95%99%E7%A8%8B_CentOS%E8%BF%9C%E7%A8%8B%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6root%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/"/>
      <url>/2020/10/31/C_%E6%95%99%E7%A8%8B_CentOS%E8%BF%9C%E7%A8%8B%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6root%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h1><p>最近才开始接触Cent OS系统，以前是Ubuntu的深度用户。在打算在CentOS安装COMSOL, MATLAB以及Lumerical FDTD Solutions遇到了问题：<strong>安装时需要有图形化的安装引导界面，并且安装一般是需要root权限的，当我们用普通用户权限时，通过例如<code>Moba Xterm</code>是可以打开大部分软件的图形界面的，但是当我们切换为<code>Root</code>用户之后就会报错，</strong>  如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X11 connection rejected because of wrong authentication</span><br></pre></td></tr></table></figure><p>网络上开始找到的方案都不可取，后来知道这是由于默认只给了登录的用户使用图形界面的权限，而没有给<code>Root</code>这个权限，感觉可以通过<code>Root</code>直接远程登录解决，前提是系统有<code>Root</code>登录这个选项，比较直接的解决方案是写我们切换为<code>Root</code>之后，输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xauth merge /home/huyle/.Xauthority</span><br></pre></td></tr></table></figure><p>此时便可以愉快的在<code>Root</code>账户通过图形界面安装了。问题的解决主要参考了下面的博客：</p><p><a href="https://www.slothparadise.com/sudo-root-x11-connection-rejected-wrong-authentication/#">sudo as root X11 connection rejected because of wrong authentication</a></p><p>为了防止有天忘记或者链接丢失，自己索性记录一下。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Cent OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos 安装 Lumerical FDTD Solutions</title>
      <link href="/2020/10/31/C_%E6%95%99%E7%A8%8B_Centos%E5%AE%89%E8%A3%85LumericalFDTDSolutions/"/>
      <url>/2020/10/31/C_%E6%95%99%E7%A8%8B_Centos%E5%AE%89%E8%A3%85LumericalFDTDSolutions/</url>
      
        <content type="html"><![CDATA[<h1 id="软件安装-Lumerical-Centos"><a href="#软件安装-Lumerical-Centos" class="headerlink" title="软件安装 #Lumerical #Centos"></a>软件安装 #Lumerical #Centos</h1><p>关于在Ubuntu的安装，可以参见我之前的笔记</p><ul><li><a href="https://knifelees3.github.io/2020/05/30/C_%E6%95%99%E7%A8%8B_Ubuntu%E5%AE%89%E8%A3%85LumericalFDTDSolutions/">Ubuntu安装Lumerical FDTD Solutions</a></li><li><a href="https://knifelees3.github.io/2020/05/30/C_%E6%95%99%E7%A8%8B_Ubuntu_%E5%AE%89%E8%A3%85COMSOL_MATLAB_FDTD%20Solutions/#A-%E8%BD%AC%E6%8D%A2%E5%8C%85rpm%E5%8C%85%E4%B8%BAdeb%E6%A0%BC%E5%BC%8F">Ubuntu安装COMSOL,MATLAB以及FDTD Solutions</a></li></ul><p>服务器最近换了Centos 8，安装LumericalFDTDSolutions相较于Ubuntu安装更加方便，缺少库的问题可以自动解决掉。</p><p>关于CentOS切换root之后图形界面打不开的问题，可查阅该博客：</p><p><a href="https://www.slothparadise.com/sudo-root-x11-connection-rejected-wrong-authentication/#">sudo as root X11 connection rejected because of wrong authentication</a></p><h2 id="逐个安装软件"><a href="#逐个安装软件" class="headerlink" title="逐个安装软件"></a>逐个安装软件</h2><p>默认的Lumerical FDTD Solutions为<code>rpm</code>文件, 可以直接通过<code>rpm install &lt;packagename.rpm&gt;</code> 安装，之前Ubuntu还需要自己手动转为<code>deb</code>包，这一点方便了许多。不过安装时一般都会有库缺少问题，CentOS的<code>yum</code>支持自动安装依赖，所以只需要<code>cd</code>到对应的文件夹，依次安装即可, 比如安装FDTD模块，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install FDTD-8.15.736-1.el5.x86_64.rpm</span><br></pre></td></tr></table></figure><p>利用上面的安装命令逐个安装对应的软件：<code>Device, FDTD-Solutions</code>, <code>INTERCONNECT</code>, <code>MODE_Solutions</code>共四个 (顺序无所谓)，最后安装<code>Lumerical_FlexLM</code>，    </p><h2 id="尝试启动lumerical-flex-license-manager"><a href="#尝试启动lumerical-flex-license-manager" class="headerlink" title="尝试启动lumerical flex license manager,"></a>尝试启动lumerical flex license manager,</h2><p>安装好之后需要测试一下能否启动Licesence Mannager<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin start</span><br></pre></td></tr></table></figure></p><p>并尝试关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin stop</span><br></pre></td></tr></table></figure><p>如果关闭后出现<code>Shutting down License Manager Daemon:-e [OK]</code>, 说明该软件已经成功。</p><h2 id="尝试启动fdtd-solutions"><a href="#尝试启动fdtd-solutions" class="headerlink" title="尝试启动fdtd-solutions"></a>尝试启动fdtd-solutions</h2><p>方法：进入<code>/opt/lumerical/fdtd/bin/</code>文件夹，输入<code>./fdtd-solutions</code></p><p>若启动时提示需要激活，则说明能成功启动. </p><h2 id="激活软件"><a href="#激活软件" class="headerlink" title="激活软件"></a>激活软件</h2><p>关闭lumerical flex license manager，然后将文件夹里面的破解文件复制到对应的目录覆盖即可。即将Crack中的lumerical文件夹复制到/opt/lumerical中，方法为进入Crack中的opt文件夹内，利用如下命令复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> -r ./lumerical  /opt</span><br></pre></td></tr></table></figure><h2 id="启动fdtd-solutions"><a href="#启动fdtd-solutions" class="headerlink" title="启动fdtd-solutions"></a>启动fdtd-solutions</h2><p>现在启动lumerical flex license manager，然后再启动fdtd-solutions，应该能成功打开fdtd-solutions界面</p><h2 id="添加到环境变量"><a href="#添加到环境变量" class="headerlink" title="添加到环境变量"></a>添加到环境变量</h2><p>在用户文件夹内的隐藏文件.bashrc的末尾在写入一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/opt/lumerical/fdtd/bin</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> FDTD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装Lumerical FDTD Solutions</title>
      <link href="/2020/10/31/C_%E6%95%99%E7%A8%8B_Ubuntu%E5%AE%89%E8%A3%85LumericalFDTDSolutions/"/>
      <url>/2020/10/31/C_%E6%95%99%E7%A8%8B_Ubuntu%E5%AE%89%E8%A3%85LumericalFDTDSolutions/</url>
      
        <content type="html"><![CDATA[<h1 id="软件安装-Lumerical-Ubuntu"><a href="#软件安装-Lumerical-Ubuntu" class="headerlink" title="软件安装 #Lumerical #Ubuntu"></a>软件安装 #Lumerical #Ubuntu</h1><p>教程查阅了该网址：<br><a href="https://kx.lumerical.com/t/how-to-install-on-ubuntu-systems/2471">https://kx.lumerical.com/t/how-to-install-on-ubuntu-systems/2471</a><br><a href="https://docs.nomagic.com/display/NMDOC/FlexNet+license+server+installation">https://docs.nomagic.com/display/NMDOC/FlexNet+license+server+installation</a></p><h2 id="转换包rpm包为deb格式"><a href="#转换包rpm包为deb格式" class="headerlink" title="转换包rpm包为deb格式"></a>转换包rpm包为deb格式</h2><p>Lumerical官网对于linux的包只有rpm文件，即是为redhat等系统准备的，对于Debian/Ubuntu系统，需要将rpm转为deb包，工具为alien，安装方式为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install alien</span><br></pre></td></tr></table></figure><p>转换方式为，cd到对应的rpm包所在目录后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo alien ./*/rpm</span><br></pre></td></tr></table></figure><p>就会生成对应的deb包，这种方法一般不推荐，因为在装换的时候可能会遇到各种各样的小问题（有时候会报错），但是没有其他更好的办法了。</p><h2 id="逐个安装软件"><a href="#逐个安装软件" class="headerlink" title="逐个安装软件"></a>逐个安装软件</h2><p>现安装文件.rpm文件已转换为.deb文件，位于install子文件夹内。利用安装命令逐个安装对应的软件：Device, FDTD-Solutions, INTERCONNECT, MODE_Solutions共四个 (顺序无所谓)，最后安装Lumerical_FlexLM，都只需要进入相应.deb文件所在文件夹内，利用如下命令进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure><p>如果安装由于依赖问题失败，常见于因某软件包版本过底或未安装，可用如下方法解决。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt --fix-broken install</span><br></pre></td></tr></table></figure><p>有时候该方式仍不起作用，或者由于网络限制原因，可以利用synaptic安装，仍存在问题则可到<a href="https://packages.ubuntu.com/">该网站</a>下载相应软件包利用dpkg命令进行安装，注意在下载的软件包版本应尽可能匹配Ubuntu版本以及硬件架构，否则可能安装失败。对于有些软件包，如<code>libpng12-0</code>，没有Ubuntu 18.10对应的版本，此时可尝试其它Ubuntu版本下的<code>libpng12-0</code>包</p><h2 id="尝试启动lumerical-flex-license-manager"><a href="#尝试启动lumerical-flex-license-manager" class="headerlink" title="尝试启动lumerical flex license manager,"></a>尝试启动lumerical flex license manager,</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin start</span><br></pre></td></tr></table></figure><p>并尝试关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin stop</span><br></pre></td></tr></table></figure><ul><li>如果关闭后出现<code>Shutting down License Manager Daemon:-e [OK]</code>, 说明该软件已经成功。</li><li>若出现 [failed] 字样说明失败，此时做以下尝试<br>  参见：<a href="https://docs.nomagic.com/display/NMDOC/FlexNet+license+server+installation">https://docs.nomagic.com/display/NMDOC/FlexNet+license+server+installation</a><br>  安装<code>libc6-i386</code>，<code>lsb-core</code>，<code>lsb</code>三个软件包，可利用之前的方法，也可利用如下方式进行安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libc6-i386</span><br><span class="line">sudo apt-get install lsb-core</span><br><span class="line">sudo apt-get install lsb</span><br></pre></td></tr></table></figure><h2 id="尝试启动fdtd-solutions"><a href="#尝试启动fdtd-solutions" class="headerlink" title="尝试启动fdtd-solutions"></a>尝试启动fdtd-solutions</h2><p>方法：进入<code>/opt/lumerical/fdtd/bin/</code>文件夹，输入<code>./fdtd-solutions</code></p><ul><li>若此时报错缺少库文件：<code>libxmlsec1.io.1</code>，到<a href="https://packages.ubuntu.com/">该网站</a>下载软件包<code>libxmlsec1-openssl</code>（同理，注意此处下载的deb文件的版本应与所安装Ubuntu的版本一致）</li><li>若启动时提示需要激活，则说明能成功启动</li></ul><h2 id="激活软件"><a href="#激活软件" class="headerlink" title="激活软件"></a>激活软件</h2><p>关闭lumerical flex license manager，然后将文件夹里面的破解文件复制到对应的目录覆盖即可。即将Crack中的lumerical文件夹复制到/opt/lumerical中，方法为进入Crack中的opt文件夹内，利用如下命令复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> -r ./lumerical  /opt</span><br></pre></td></tr></table></figure><h2 id="启动fdtd-solutions"><a href="#启动fdtd-solutions" class="headerlink" title="启动fdtd-solutions"></a>启动fdtd-solutions</h2><p>现在启动lumerical flex license manager，然后再启动fdtd-solutions，应该能成功打开fdtd-solutions界面</p><h2 id="添加到环境变量"><a href="#添加到环境变量" class="headerlink" title="添加到环境变量"></a>添加到环境变量</h2><p>在用户文件夹内的隐藏文件.bashrc的末尾在写入一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/opt/lumerical/fdtd/bin</span><br></pre></td></tr></table></figure><h2 id="开机启动设置"><a href="#开机启动设置" class="headerlink" title="开机启动设置"></a>开机启动设置</h2><p>还有一个问题是这个Manager不会自动开机启动，所以需要用的时候需要手动开启，怎么设置开机启动可以看另外一篇 <a href="https://knifelees3.github.io/2019/03/02/Linux%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/#more">笔记</a></p><h2 id="命令行运行"><a href="#命令行运行" class="headerlink" title="命令行运行"></a>命令行运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpiexec -n 6 fdtd-engine-mpich2nem -t 4 example.fsp</span><br></pre></td></tr></table></figure><p>表示FDTD会用6个processor以及4个thread进行计算</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> FDTD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COMSOL livelink with MATLAB 参数化扫描中避免内存不断增加</title>
      <link href="/2020/10/30/C_%E6%95%99%E7%A8%8B_COMSOL-Livelink-with-MATLAB-Release-Model-from-Server/"/>
      <url>/2020/10/30/C_%E6%95%99%E7%A8%8B_COMSOL-Livelink-with-MATLAB-Release-Model-from-Server/</url>
      
        <content type="html"><![CDATA[<h1 id="COMSOL"><a href="#COMSOL" class="headerlink" title="COMSOL"></a>COMSOL</h1><p>COMSOL与MATLAB是可以无缝连接的，有些图形化界面难以实施的操作可以通过MATLAB代码来实现。当我们通过MATLAB对COMSOL进行参数化扫描的时候，会发现随着时间的推移，内存会占用的越来越多，几乎是指数增加，如下图</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200221-simulation-time-memory.png" alt=""></p><p>具体如何绘制出这样一幅图可以见我的另外一片博客</p><ul><li>个人博客地址<br><a href="https://knifelees3.github.io/2020/02/21/C_%E6%95%99%E7%A8%8B-%E4%BB%8ECOMSOL%E7%9A%84log%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E8%BF%90%E7%AE%97%E6%97%B6%E9%97%B4%E5%92%8C%E5%86%85%E5%AD%98/#%E5%85%B7%E4%BD%93%E6%93%8D%E4%BD%9C">从COMSOL的log文件读取运算时间和内存并绘图</a></li><li>知乎地址<br><a href="https://zhuanlan.zhihu.com/p/146562720">从COMSOL的log文件读取运算时间和内存并绘图</a></li></ul><p>我们只需要在每一次循环扫描的时候，都将模型释放掉再重新Load一遍，内存增长的速度就会慢很多，如下图所示</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/RAMandTimeTestII.png" alt=""></p><p>具体的代码大致如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">clear;clc;</span><br><span class="line">import com.comsol.model.*</span><br><span class="line">import com.comsol.model.util.*</span><br><span class="line">ModelUtil.showProgress(<span class="string">'comsol_progress_inten_1.txt'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% do some sweep  here</span></span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:num</span><br><span class="line"></span><br><span class="line"><span class="comment">% load the model</span></span><br><span class="line"><span class="comment">% We will load the model for each loop to realese the RAM</span></span><br><span class="line">model=mphopen(<span class="string">'./FineMesh_IntenEnhan_bETheo_Px_Direct.mph'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% .................</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">% clear solutions</span></span><br><span class="line">    <span class="comment">% this step is to avoid too manumy caches in ram</span></span><br><span class="line">    model.sol(<span class="string">'sol1'</span>).clearSolution;</span><br><span class="line">    ModelUtil.remove(<span class="string">'Model'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>我们有时候在本地使用的时候，也会出现当你将模型加载进来之后即使删除变量还是不能删除本来的COMSOL文件的问题，这是因为COMSOL文件被Livelink占用造成的，我们只需要通过如下命令即刻释放，<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import com.comsol.model.*</span><br><span class="line">import com.comsol.model.util.*</span><br><span class="line">ModelUtil.remove(<span class="string">'Model'</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica如何用来写Python并且二者之间进行数据转换</title>
      <link href="/2020/10/15/C_%E6%95%99%E7%A8%8B_Mathematica%E5%A6%82%E4%BD%95%E7%94%A8%E6%9D%A5%E5%86%99Python/"/>
      <url>/2020/10/15/C_%E6%95%99%E7%A8%8B_Mathematica%E5%A6%82%E4%BD%95%E7%94%A8%E6%9D%A5%E5%86%99Python/</url>
      
        <content type="html"><![CDATA[<h1 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    现如今Python很火，因为其入门简单，功能强大。在科学计算领域中也占有一席之地。本人作为量子光学领域的理论研究生，平时仿真软件(COMSOL,Lumerical)用的很多，MATLAB,Python以及Mathematica也用得勤。</p><p>​    个人体验来说，MATLAB,Python功能有重叠的地方，也有互相不可替代的地方。比如MATLAB与 COMSOL,Lumerical的Livelink就是我所需要的不可替代的功能，非常方便处理仿真数据。而对于一般的数据处理，MATLAB, Python我觉得不相伯仲。Python有一些开源的包，比如<a href="http://qutip.org/">Qutip</a>,在MATLAB里面已经停止维护了，所以想用Qutip还得用Python。</p><p>​    最后来说Mathematica，以前一直以为是个计算器，忽视了其作用，疫情期间花时间了解之后，知晓其功能之强大，也对Mathematica的创始人顶礼膜拜。Mathematica设计的初衷就是想做一个全能型选手，其在各个领域都有涉及，特别是符号计算，其编程的思路以及写程序的模式一旦适应，写起来真的很顺手。</p><h2 id="为什么不直接用Mathematica而用Python？"><a href="#为什么不直接用Mathematica而用Python？" class="headerlink" title="为什么不直接用Mathematica而用Python？"></a>为什么不直接用Mathematica而用Python？</h2><p>​     Mathematica的符号计算让很多计算就像写公式一样简单，也许也正因为如此，Mathematica没有对应完善的量子信息包来处理数据。近日也有人和Wolfram介绍量子计算的Package,感兴趣的可以看这个讨论</p><p><a href="https://www.youtube.com/watch?v=HaKSDO50nRY&amp;t=3180s">Quantum Computing in Wolfram Language</a></p><p>还有一些非官方的包，目前还不是很完善, 且没有持续维护</p><p><a href="http://homepage.cem.itesm.mx/lgomez/quantum/">Quantum Mathematica</a></p><p>总而言之，Mathematica还没有官方完善的包来量子计算。所以目前<a href="http://qutip.org/">Qutip</a>还是上上之选。</p><p>另外，大数据处理方面，Mathematica真的还不够优秀。</p><h2 id="为什么不用JupyterNotebook"><a href="#为什么不用JupyterNotebook" class="headerlink" title="为什么不用JupyterNotebook?"></a>为什么不用JupyterNotebook?</h2><p>Jupyter Notebook确实很好用，但是Mathematica对我而言更好用, 就喜欢边写公式边计算个积分，算出个结果马上绘制个曲线，想看哪个pdF、图片、代码、仿真文件，直接通过Mathematica调用系统默认软件打开，Mathematica一个笔记本可以把一切都给你满足。而且其输入公式的逻辑比Latex好，所写即所见，我觉得用Mathematica推导比我用纸笔高效。Jupyter Notebook用Latex输入再公式很长的时候，修改起来贼麻烦。</p><p>Mathematica支持折叠，支持不同笔记本的互相引用，用过就知道有多好！</p><h2 id="如何在Mathematica简单使用Python"><a href="#如何在Mathematica简单使用Python" class="headerlink" title="如何在Mathematica简单使用Python?"></a>如何在Mathematica简单使用Python?</h2><h3 id="在Python安装库：pyzmq"><a href="#在Python安装库：pyzmq" class="headerlink" title="在Python安装库：pyzmq"></a>在Python安装库：<code>pyzmq</code></h3><p>其实怎么使用，直接在Mathematica帮助页面搜索“Python”即可。当然，前提是你已经安装了python环境。如下图所示</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2020-10-15_16-40-58.png" alt=""></p><p>通过pip安装即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install zmq</span><br></pre></td></tr></table></figure><p>后续的安装成功与否的检测，以及遇到的问题的解决办法，Mathematica都有详细的说明。我这里就不在赘述了。</p><h3 id="直接从Mathematica的“外部运行框”里面运行Python代码"><a href="#直接从Mathematica的“外部运行框”里面运行Python代码" class="headerlink" title="直接从Mathematica的“外部运行框”里面运行Python代码"></a>直接从Mathematica的“外部运行框”里面运行Python代码</h3><p>在Mathematica的命令块中，输入<code>shift+&gt;</code>,就会弹出一个Python的对话框，如下图所示，你就可以愉快得输入pyton命令了。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_20201015165118.png" alt=""></p><p>这样的一个窗口就和Jupyter Notebook一样了。你输入公式还是可以自己输入。即还是可以用Mathematica进行排版！或者做符号运算。</p><h3 id="通过Mathematica的“ExternalEvaluate”函数"><a href="#通过Mathematica的“ExternalEvaluate”函数" class="headerlink" title="通过Mathematica的“ExternalEvaluate”函数"></a>通过Mathematica的“ExternalEvaluate”函数</h3><p>另外就是通过<code>ExternalEvaluate</code>函数来运行，Mathematica有教程，我就不再赘述了，个人感觉不是很方便。下面是一段示例<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">session</span> <span class="operator">=</span> <span class="built_in">StartExternalSession</span><span class="punctuation">[</span><span class="string">"Python"</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">ExternalEvaluate</span><span class="punctuation">[</span><span class="variable">session</span><span class="operator">,</span><span class="built_in">File</span><span class="punctuation">[</span><span class="string">"filepath"</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><h2 id="如何在Mathematica使用Python的函数、数据、图片"><a href="#如何在Mathematica使用Python的函数、数据、图片" class="headerlink" title="如何在Mathematica使用Python的函数、数据、图片?"></a>如何在Mathematica使用Python的函数、数据、图片?</h2><p>接下来就是更加高阶一点的操作，我们有的函数可能是Python写的，但是我们想通过Mathematica的代码运行，或者我们希望通过python导入数据，Mathematica绘图，或者像jupyter notebook一样内置matplotlib的图片等…</p><h3 id="如何让Python绘制的图片内置于Mathematica的Notebook界面内"><a href="#如何让Python绘制的图片内置于Mathematica的Notebook界面内" class="headerlink" title="如何让Python绘制的图片内置于Mathematica的Notebook界面内"></a>如何让Python绘制的图片内置于Mathematica的Notebook界面内</h3><p>直接在Mathematica中运行绘图代码，绘图窗口会弹出来，并不会内置在Notebook里面，而且目前有没有官方的支持，解决方案来自：<br><a href="https://mathematica.stackexchange.com/questions/211170/how-to-display-images-inside-mathematica-with-matplotlib/211254#211254">How to display images inside Mathematica with matplotlib</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_plt</span>(<span class="params">plot</span>):</span><br><span class="line">    buf = io.BytesIO()</span><br><span class="line">    plot.savefig(buf, transparent=<span class="literal">True</span>, <span class="built_in">format</span>=<span class="string">'png'</span>)</span><br><span class="line">    buf.seek(<span class="number">0</span>)</span><br><span class="line">    im = Image.<span class="built_in">open</span>(buf).convert(<span class="string">"RGBA"</span>)</span><br><span class="line">    buf.close()</span><br><span class="line">    <span class="keyword">return</span> im</span><br></pre></td></tr></table></figure><h3 id="如何在Mathematica中使用Python的数组"><a href="#如何在Mathematica中使用Python的数组" class="headerlink" title="如何在Mathematica中使用Python的数组"></a>如何在Mathematica中使用Python的数组</h3><p>在Python里面输入<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wolframclient.serializers <span class="keyword">import</span> export</span><br></pre></td></tr></table></figure><br>比如我们有一个数组为”A”,我们想要在Mathematica使用，直接输入<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export(A)</span><br></pre></td></tr></table></figure><br>然后在Mathematica语言中输入<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">AMat</span><span class="operator">=</span><span class="built_in">Normal</span><span class="punctuation">[</span><span class="built_in">ToExpression</span><span class="punctuation">[</span><span class="built_in">ByteArrayToString</span><span class="punctuation">[</span><span class="operator">%</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><br>下面是我运行的一个例子。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_20201015171238.png" alt=""></p><p>还有一些小技巧可以参见我的另外一篇笔记<br><a href="https://knifelees3.github.io/2020/05/30/C_%E6%95%99%E7%A8%8B_Mathematica%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/">Mathematica小技巧</a></p><p>特别是我们想输入比较多的代码时，我们按Enter，不希望新建一个Cell，而实换行，此时我们需要输入以下代码：<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SetOptions</span><span class="punctuation">[</span><span class="built_in">EvaluationNotebook</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">FrontEnd</span><span class="operator">`</span><span class="variable">ReturnCreatesNewCell</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><h3 id="如何在Python中使用Mathematica的数组"><a href="#如何在Python中使用Mathematica的数组" class="headerlink" title="如何在Python中使用Mathematica的数组"></a>如何在Python中使用Mathematica的数组</h3><p>（更新于2021年12月17日）<br>这里需要借助<code>ExternalEvaluate</code>函数，主要参照了该讨论</p><p><a href="https://community.wolfram.com/groups/-/m/t/2343086">https://community.wolfram.com/groups/-/m/t/2343086</a></p><p>假设我们已经打开了一个笔记本下的Python交互界面，此时我们需要获取对应的<code>session</code></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">session</span> <span class="operator">=</span> <span class="built_in">ExternalSessions</span><span class="punctuation">[</span><span class="string">"Python"</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>然后假设我们有一个数据<code>test</code>是需要在Python里面用的，比如要将其转化为<code>numpy</code>矩阵，那么我们可以输入<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ExternalEvaluate</span><span class="punctuation">[</span><span class="variable">session</span><span class="operator">,</span> <span class="operator">&lt;|</span><span class="string">"Command"</span> <span class="operator">-&gt;</span> <span class="string">"test=np.array(&lt;*test*&gt;)"</span><span class="operator">|&gt;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><p>注意我们用<code>&lt;*test*&gt;</code>将要转化的Mathematica变量名写了出来。</p><p>![[Z_Attachment/MMA模板.nb]]</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB与Python,Mathematica由高维转化一维矩阵的方式的不同点</title>
      <link href="/2020/10/09/C_%E6%95%99%E7%A8%8B_Python-MATLAB-Mathematica%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%8D%E5%90%8C/"/>
      <url>/2020/10/09/C_%E6%95%99%E7%A8%8B_Python-MATLAB-Mathematica%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%8D%E5%90%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-Python-Dataprocessing"><a href="#MATLAB-Python-Dataprocessing" class="headerlink" title="MATLAB #Python #Dataprocessing"></a>MATLAB #Python #Dataprocessing</h1><p>在进行数据处理的时候，我比较喜欢的数据存储方式是所有的数据都保存成MATLAB的“.mat”文件，这种格式Python,Mathematica,MATLAB都会支持。不过在转化的时候得注意，特别是涉及到1维矩阵转化为多维矩阵的操作时，MATLAB与Pythonh,Mathematica有本质的不同，MATLAB是按照先“列”后“行”的顺序存数据的，而Mathematica和Python是按照先“行”后“列”的顺序存数据，具体的，我们可以用一个例子来说明：<br>我们定义矩阵<code>A</code>，将A转化为1维矩阵<code>A1D</code>再转化回来为<code>B</code>.</p><h2 id="MATLAB"><a href="#MATLAB" class="headerlink" title="MATLAB"></a>MATLAB</h2><p>首先是MATLAB<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]];</span><br><span class="line">A1D=A(:);</span><br><span class="line">B=<span class="built_in">reshape</span>(A,[<span class="number">3</span>,<span class="number">3</span>]);</span><br></pre></td></tr></table></figure></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A1D'</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">7</span>     <span class="number">2</span>     <span class="number">5</span>     <span class="number">8</span>     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure><p>可以看见<code>A</code>变成<code>A1D</code>时是把每一列拼接起来形成一维矩阵。<code>A1D</code>变成<code>B</code>时也是按照列来折叠形成<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="5.028ex" height="1.554ex" role="img" focusable="false" viewBox="0 -665 2222.4 687"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container>的矩阵的。</p><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pastedimage9Python.png" alt=""><br>可以看见<code>A</code>变成<code>A1D</code>时是把每一行拼接起来形成一维矩阵。<code>A1D</code>变成<code>B</code>时也是按照行来折叠形成<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="5.028ex" height="1.554ex" role="img" focusable="false" viewBox="0 -665 2222.4 687"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container>的矩阵的。</p><h2 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h2><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pastedimage9MMA.png" alt=""><br>可以看见<code>A</code>变成<code>A1D</code>时是把每一行拼接起来形成一维矩阵。<code>A1D</code>变成<code>B</code>时也是按照行来折叠形成<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="5.028ex" height="1.554ex" role="img" focusable="false" viewBox="0 -665 2222.4 687"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(1722.4,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container>的矩阵的。</p><p>总结，MATLAB是很特殊的一种存储方式。转化时得特别注意。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MATLAB </tag>
            
            <tag> Mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Direction in port-Plane wave input via port in COMSOL</title>
      <link href="/2020/08/20/A_En_PlaneWaveInputDirectionsViaPort/"/>
      <url>/2020/08/20/A_En_PlaneWaveInputDirectionsViaPort/</url>
      
        <content type="html"><![CDATA[<h1 id="Direction-of-input-wave-via-port-in-COMSOL"><a href="#Direction-of-input-wave-via-port-in-COMSOL" class="headerlink" title="Direction of input wave via port in COMSOL"></a>Direction of input wave via port in COMSOL</h1><p>[TOC]</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>In COMSOL5.1, when we need input the plane wave from port, we need set the field expressions and the phase factors manually. In COMSOL 5.4, the evaluation angel $\alpha<em>{1}$ and azimuthal angle $\alpha</em>{2}$ are introduced  to help us define the input angle. However, the definition of the angle combined with the field is not so easy. I spend a lot of time to learn and test the angle and then finally obtain the proper way to define the plane wave input directions via port.</p><h2 id="The-simulation-problem"><a href="#The-simulation-problem" class="headerlink" title="The simulation problem"></a>The simulation problem</h2><p>I follow the example from COMSOL’s library:</p><p> <code>Wave Optics Model &gt;Optical Scattering&gt;Scatterer on Substrate</code></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219233353919_15347.png" alt=""><br>This example analyze the scattering of light by a gold objects on a substrate. A TE polarized light input from z to -z. The most important part is the background field simulations. The background field $E_{b}$ in this example is defined as the field when the gold object is absent. This can be done via two port and four periodic conditions. One port is used to excite the plane wave and the other one is to match the output of the plane waves. Periodic conditions can let the simulation perpendicular to the z infinite. We can also use PML instead but the periodic conditions are better.</p><p>The setting in COMSOL5.1 is as follows</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234633713_10470.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234653754_10657.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234714704_25960.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234744588_8538.png" alt=""></p><p>we can see that we need specify the wavevector $k<em>{x},k</em>{y},k<em>{z}$ and the field expressions $E=(E</em>{x},E<em>{y},E</em>{z})e^{-i\vec{k}\cdot \vec{r}}$ .  </p><p>In COMSOL 5.4, we introduce the new evaluation angle $\alpha<em>{1}$ and azimuthal angle $\alpha</em>{2}$  to define the input directions.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image-20200820110553736.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/image-20200820111132558.png" alt=""></p><p>Then we only need specify the field amplitude in ports and the propagation directions can be obtained from $\alpha<em>{1},\alpha</em>{2}$.  The problem lies in the settings of field amplitude to match the input directions especially when we want to input a p polarized light or s polarized light or circular polarized light. This is the main point of this note!</p><h2 id="Explanation-of-the-incident-angle"><a href="#Explanation-of-the-incident-angle" class="headerlink" title="Explanation of the incident angle"></a>Explanation of the incident angle</h2><p>I searched on the internet to find useful information about the input direction settings, for example</p><p><a href="https://www.comsol.com/blogs/modeling-electromagnetic-waves-periodic-structures/">https://www.comsol.com/blogs/modeling-electromagnetic-waves-periodic-structures/</a></p><p>But there is still little useful information. I finally found that we can plot the input wavevector $k<em>{\text{incident}}$ and mode vector $k</em>{\text{mode}}$ which can help us understand the input directions in port.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/COMSOLScreenShot.png" alt=""></p><p>As is shown in above figure. The light input from z to -z and $\alpha<em>{1}=0,\alpha</em>{2}=50^{o}$. The blue arrows show the input wavevector $k<em>{\text{incident}}$ which points into the interior of the simulation domain. However, the mode wavevector $k</em>{\text{mode}}$ which indicates the field’s default wavevector directions on the port points to negative z direction. This is because the normal vector of the port points out the simulation domain and the default wavevector will also point out.</p><p>How we define the angle? What is the definition of $\alpha<em>{1},\alpha</em>{2}$? To let it more clear I will show you if you want to define a p polarized light input, how you set the field amplitudes.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/InputDirections.png" alt=""></p><p>In the port definitions. We introduce a coordinate formed by $(a<em>{1},a</em>{2},n)$ as is shown in Figure (a) above. They satisfy</p><script type="math/tex; mode=display">n=a_{1}\times a_{2}</script><ul><li>$\alpha<em>{1}$ is the angle between incident $k</em>{\text{incident}}$ and the minus normal vector $-n$. And $0&lt;\alpha_{1}&lt;=\pi/2$.</li><li>$\alpha<em>{2}$ is the angle between incident $k</em>{\text{incident}}\sin(\alpha<em>{1})$ (its projection in x-y plane) and the minus normal vector $a</em>{1}$. And $0&lt;\alpha<em>{2}&lt;=2\pi$. The positive direction of $\alpha</em>{2}$ is the angle points to $a_{2}$.</li><li>The mode wavevector $k<em>{\text{mode}}$ is the wavevector has a angle $\alpha</em>{1}$ with $n$ and a angle $\alpha<em>{2}$ with $k</em>{\text{incident}}sin(\alpha_{1})$ too.</li><li>If the light input from  $z$ to $-z$, $a<em>{1}$ points positive x and $a</em>{2}$ points positive $y$. $n$ points negative $z$.</li><li>If the light input from $-z$ to $z$, $a<em>{2}$ points positive x and $a</em>{1}$ points positive $y$. $n$ points negative $z$.</li><li>The field should be defined according to the mode wavevector on the port.</li></ul><h3 id="Input-from-z-to-z"><a href="#Input-from-z-to-z" class="headerlink" title="Input from z to -z"></a>Input from z to -z</h3><p>Then if we want to define a p polarized light input from z to -z. The incident wavevector is</p><script type="math/tex; mode=display">k_{\text{incident}}=k(\sin(\alpha_{1})\cos(\alpha_{2}),\sin(\alpha_{1})\sin(\alpha_{2}),-\cos(\alpha_{1}))</script><p>the corresponding mode vector is</p><script type="math/tex; mode=display">k_{\text{mode}}=k(\sin(\alpha_{1})\cos(\alpha_{2}),\sin(\alpha_{1})\sin(\alpha_{2}),\cos(\alpha_{1}))</script><p>and the field amplitude should be defined according to $k_{\text{incident}}$. Then</p><script type="math/tex; mode=display">E=E_{0}(-\cos(\alpha_{1})\cos(\alpha_{2}),-\cos(\alpha_{1})\sin(\alpha_{2}),\sin(\alpha_{1}))</script><h3 id="Input-from-z-to-z-1"><a href="#Input-from-z-to-z-1" class="headerlink" title="Input from -z to z"></a>Input from -z to z</h3><p>And if we want to define a p polarized light input from -z to z. The incident wavevector is</p><script type="math/tex; mode=display">k_{\text{incident}}=k(\sin(\alpha_{1})\sin(\alpha_{2}),\sin(\alpha_{1})\cos(\alpha_{2}),\cos(\alpha_{1}))</script><p>the corresponding mode vector is</p><script type="math/tex; mode=display">k_{\text{mode}}=k(\sin(\alpha_{1})\sin(\alpha_{2}),\sin(\alpha_{1})\cos(\alpha_{2}),-\cos(\alpha_{1}))</script><p>and the field amplitude should be defined according to $k_{\text{incident}}$. Then</p><script type="math/tex; mode=display">E=E_{0}(\cos(\alpha_{1})\sin(\alpha_{2}),\cos(\alpha_{1})\cos(\alpha_{2}),\sin(\alpha_{1}))</script><p>These definitions let our electric field be p polarized light. If we make some small errors on the sign, the results will be different.</p><p>I verify this settings according to the theoretical background settings. </p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
            <tag> Physics </tag>
            
            <tag> Simulation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Plane wave&#39;s transmission in a substate structure and its theoretical realization in COMSOL</title>
      <link href="/2020/08/20/A_En__Plane-Wave-Transmission-and-Its-Relization-in-COMSOL/"/>
      <url>/2020/08/20/A_En__Plane-Wave-Transmission-and-Its-Relization-in-COMSOL/</url>
      
        <content type="html"><![CDATA[<h1 id="Plane-wave’s-transmission-in-a-substate-structure-and-its-theoretical-realization-in-COMSOL"><a href="#Plane-wave’s-transmission-in-a-substate-structure-and-its-theoretical-realization-in-COMSOL" class="headerlink" title="Plane wave’s transmission in a substate structure and its theoretical realization in COMSOL"></a>Plane wave’s transmission in a substate structure and its theoretical realization in COMSOL</h1><p>Date:<br>Create at: 2020 02 20<br>Update at: 2020 08 20</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>In quantum nano optics, we often encounter this kind of problem:</p><p><strong>Simulating the scattering of light by a nano objects on substrate.</strong></p><p>The best way to simulate this kind of problem is the background field method since the enhancement of the light can be easily obtained. I use COMSOL to simulate this kind of problem and the simulation would be much faster if the background field is set via theoretical expression. The numerical implementation can be found in another notes</p><p><a href="https://knifelees3.github.io/2020/08/20/A_En_PlaneWaveInputDirectionsViaPort/#Explanation-of-the-incident-angle">A_En_PlaneWaveInputDirectionsViaPort/#Explanation-of-the-incident-angle.md</a></p><p>This note will firstly derive the theoretical expressions of the transmission properties and then introduce its implementation in COMSOL.</p><h2 id="Theoretical-derivations"><a href="#Theoretical-derivations" class="headerlink" title="Theoretical derivations"></a>Theoretical derivations</h2><p>The Chinese version of this derivations  can be found in</p><p><a href="https://knifelees3.github.io/2020/02/26/E_%E7%89%A9%E7%90%86-%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%9C%A8%E5%8F%8C%E5%B1%82%E4%BB%8B%E8%B4%A8%E7%9A%84%E4%BC%A0%E6%92%AD%E5%AD%A6%E6%80%A7%E8%B4%A8/">E_物理-平面波在双层介质的传播学性质.md</a></p><p> I will derive the transmission and reflection of plane waves in a two medium interface.</p><h3 id="Boundary-conditions-and-properties-of-plane-wave"><a href="#Boundary-conditions-and-properties-of-plane-wave" class="headerlink" title="Boundary conditions and properties of plane wave"></a>Boundary conditions and properties of plane wave</h3><p>For any plane wave, when it is transmitted and reflected on the surface of the medium, due to the difference between its polarization direction and the direction of the incident surface, it can be discussed in two cases</p><ul><li>S polarization, the electric field is perpendicular to the incident plane, as shown in the left picture below</li><li>P polarization, the electric field is parallel to the incident surface, as shown in the right picture below</li></ul><p>Pay attention to the positive direction of the figure below. Because of different definitions, the final expression will have a difference in sign. All my next derivations are based on the following figure.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200220133639360_19041.png" alt="不同偏振平面波入射示意图"></p><p>That is to say, any plane wave $\boldsymbol{E}$ can be written as a combination of S polarization and P polarization</p><script type="math/tex; mode=display">\boldsymbol{E}=\boldsymbol{E}^{s}+\boldsymbol{E}^{p}</script><p>We assume that a plane wave is incident from medium 1 to medium 2. We stipulate that the direction of $\boldsymbol{n}$ is from medium 2 to medium 1. The electric and magnetic fields need to meet the corresponding boundary conditions</p><script type="math/tex; mode=display">\boldsymbol{n}\times (\boldsymbol{E}_{1}-\boldsymbol{E}_{2})=0</script><script type="math/tex; mode=display">\boldsymbol{n}\cdot (\boldsymbol{D}_{1}-\boldsymbol{D}_{2})=\sigma</script><script type="math/tex; mode=display">\boldsymbol{n}\times (\boldsymbol{H}_{1}-\boldsymbol{H}_{2})=\boldsymbol{K}</script><script type="math/tex; mode=display">\boldsymbol{n}\cdot (\boldsymbol{B}_{1}-\boldsymbol{B}_{2})=0</script><p>According to the definition shown in the figure above, we can decompose the field and wave vector separately. Whether it is P polarization or S polarization, the wave vector can be written as</p><script type="math/tex; mode=display">\boldsymbol{k}_{1}=(k_x,k_y,k_{z1})</script><script type="math/tex; mode=display">\boldsymbol{k}_{2}=(k_x,k_y,k_{z2})</script><p>The horizontal wave vector $(k_x,k_y)$ is continuous, and a horizontal wave number can be defined</p><script type="math/tex; mode=display">k_{t}=\sqrt{k_{x}^2+k_{y}^2}=k_{1}\sin{\theta_{1}}</script><p>In order to obtain the reflection and transmission properties of the geomagnetic field, we need to analyze it according to the boundary conditions. We define the incident electric field in medium 1 as</p><script type="math/tex; mode=display">\boldsymbol{E}_{1}=\boldsymbol{E}_{1}^{\prime}e^{i\boldsymbol{k}\boldsymbol{r}-i\omega t}</script><p>In addition, what needs to be emphasized is the definition of refractive index and the definition of speed. The propagation speed of a plane wave in a medium is</p><script type="math/tex; mode=display">\nu=\sqrt{\frac{1}{\varepsilon\mu}}=c/n</script><p>That is, the refractive index can be expressed as</p><script type="math/tex; mode=display">n=\sqrt{\varepsilon\mu}\cdot c</script><p>For a plane wave, the relationship between its electric field and magnetic field is</p><script type="math/tex; mode=display">E=B\nu=B\sqrt{\frac{1}{\varepsilon\mu}}</script><p>The power density of a plane wave can be expressed as</p><script type="math/tex; mode=display">S=E\times H=E\cdot B/\mu=E^2\sqrt{\frac{\varepsilon}{\mu}}</script><p>The average power density can be expressed as</p><script type="math/tex; mode=display">\langle S \rangle=\frac{1}{2}\text{Re}\{E\times H^{*}\}=\frac{1}{2}\sqrt{\frac{\varepsilon}{\mu}}|E|^2</script><h3 id="S-Polarization"><a href="#S-Polarization" class="headerlink" title="S Polarization"></a>S Polarization</h3><p>For S polarization, first, the tangential component of the electric field $\boldsymbol{E}$ is continuous</p><script type="math/tex; mode=display">E_{1}+E_{1r}=E_{2}=E_{1t}</script><p>Then the tangential component of the magnetic field $H$ is continuous</p><script type="math/tex; mode=display">-\frac{B_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{B_{1r}}{\mu_{1}}\cos(\theta_{1})=-\frac{B_{2}}{\mu_{2}}\cos(\theta_{2})=-\frac{B_{1t}}{\mu_{2}}\cos(\theta_{2})</script><p>According to the relationship between electric field and magnetic field $E=B\nu=Bc/n$, (note that $n=c/\sqrt{\varepsilon\mu}$) we can convert the relationship between the magnetic field into the relationship between the electric field</p><script type="math/tex; mode=display">-\frac{E_{1}}{\mu_{1}\nu_{1}}\cos(\theta_{1})+\frac{E_{1r}}{\mu_{1}\nu_{1}}\cos(\theta_{1})=-\frac{E_{2}}{\mu_{2}\nu_{2}}\cos(\theta_{2})=-\frac{E_{1t}}{\mu_{1}\nu_{2}}\cos(\theta_{2})</script><script type="math/tex; mode=display">-\frac{E_{1}n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{E_{1r}n_{1}}{\mu_{1}}\cos(\theta_{1})=-\frac{E_{2}n_{2}}{\mu_{2}}\cos(\theta_{2})=-\frac{E_{1t}n_{2}}{\mu_{1}}\cos(\theta_{2})</script><p>Comprehensively available, the last relationship between $E<em>{1},E</em>{1r},E_{1t}$</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})-\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}</script><p>The above expression can be further transformed into the form of wave vector representation, because $k<em>{z1}=k</em>{1}\sin(\theta<em>{1}),k</em>{z2}=k<em>{2}\sin(\ theta</em>{2})$, therefore</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\mu_{2}k_{z1}-\mu_{1}k_{z2}}{\mu_{2}k_{z1}+\mu_{1}k_{z2}}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\mu_{2}k_{z1}}{\mu_{2}k_{z1}+\mu_{1}k_{z2}}</script><h3 id="P-Polarization"><a href="#P-Polarization" class="headerlink" title="P Polarization"></a>P Polarization</h3><p>For P polarization, the tangential electric field is continuous, that is</p><script type="math/tex; mode=display">-E_{1}\cos(\theta_{1})+E_{1r}\cos(\theta_{1})=-E_{2}\cos(\theta_{2})=-E_{1t}\cos(\theta_{2})</script><p>Then the magnetic field is tangentially continuous</p><script type="math/tex; mode=display">-H_{1}-H_{1r}=-H_{2}=-H_{1t}</script><p>Further conversion</p><script type="math/tex; mode=display">\frac{E_{1}}{\nu_{1}\mu_{1}}+\frac{E_{1r}}{\nu_{1}\mu_{1}}=\frac{E_{2}}{\nu_{2}\mu_{2}}=\frac{E_{1t}}{\nu_{2}\mu_{2}}</script><script type="math/tex; mode=display">n_{1}E_{1}/\mu_{1}+n_{1}E_{1r}/\mu_{1}=n_{2}E_{2}/\mu_{2}=n_{2}E_{1t}/\mu_{2}</script><p>Comprehensively available, the last relationship between $E<em>{1},E</em>{1r},E_{1t}$</p><script type="math/tex; mode=display">\frac{E_{r}^{p}}{E_{1}^{p}}=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}=</script><script type="math/tex; mode=display">\frac{E_{t}^{p}}{E_{1}^{p}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}</script><p>The above expression can be further transformed into the form of wave vector representation, because $k<em>{z1}=k</em>{1}\sin(\theta<em>{1}),k</em>{z2}=k<em>{2}\sin(\theta</em> {2})$, and $k<em>{1}=k</em>{0}n<em>{1},k</em>{2}=k<em>{0}n</em>{2}$, so</p><script type="math/tex; mode=display">\begin{aligned}\frac{E_{r}^{p}}{E_{1}^{p}}&=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{\frac{n_{2}}{\mu_{2}n_{1}}k_{z1}-\frac{n_{1}}{\mu_{1}n_{2}}k_{z2}}{\frac{n_{2}}{\mu_{2}n_{1}}k_{z1}+\frac{n_{1}}{\mu_{1}n_{2}}k_{z2}}\\&=\frac{n_{2}^2\mu_{1}k_{z1}-n_{1}^2\mu_{2}k_{z2}}{n_{2}^2\mu_{1}k_{z1}+n_{1}^2\mu_{2}k_{z2}}\\&=\frac{\varepsilon_{2} k_{z1}-\varepsilon_{1}k_{z2}}{\varepsilon_{2} k_{z1}+\varepsilon_{1}k_{z2}}\\\end{aligned}</script><p>Following the same transformation, we can get</p><script type="math/tex; mode=display">\begin{aligned}\frac{E_{t}^{p}}{E_{1}^{p}}&=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{2\varepsilon_{2} k_{z1}}{\varepsilon_{2} k_{z1}+\varepsilon_{1}k_{z2}}\frac{n_{1}\mu_{2}}{n_{2}\mu_{1}}\\&=\frac{2\varepsilon_{2} k_{z1}}{\varepsilon_{2} k_{z1}+\varepsilon_{1}k_{z2}}\sqrt{\frac{\mu_{2}\varepsilon_{1}}{\mu_{1}\varepsilon_{2}}}\end{aligned}</script><p>This result is consistent with the book <em>Principle of Nano Optics</em>. As a result, this derivation made me more familiar with the so-called Ferrell formula. It should be noted that our derivations are based on specific graphs, and different graphs will have different symbols.</p><blockquote><p>Nonetheless, be aware that the literature is not standardized, and all possible sign variations have been labeled the Fresnel Equations. To avoid confusion they must be related to the specific field directions from which they were derived.</p></blockquote><h3 id="Special-case-non-Magnetic-material"><a href="#Special-case-non-Magnetic-material" class="headerlink" title="Special case: non-Magnetic material"></a>Special case: non-Magnetic material</h3><p>In reality, the magnetism of most materials can be ignored. We think that $\mu<em>{1}=\mu</em>{2}$, so</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})-\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{n_{1}\cos(\theta_{1})-n_{2}\cos(\theta_{2})}{n_{1}\cos(\theta_{1})+n_{2}\cos(\theta_{2})}=-\frac{\sin(\theta_{1}-\theta_{2})}{\sin (\theta_{1}+\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{2n_{1}\cos(\theta_{1})}{n_{1}\cos(\theta_{1})+n_{2}\cos(\theta_{2})}=+\frac{2\sin(\theta_{2})\cos(\theta_{1})}{\sin (\theta_{1}+\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{r}^{p}}{E_{1}^{p}}=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}=\frac{n_{2}\cos(\theta_{1})-n_{1}\cos(\theta_{2})}{n_{2}\cos(\theta_{1})+n_{1}\cos(\theta_{2})}=+\frac{\tan(\theta_{1}-\theta_{2})}{\tan (\theta_{1}+\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{t}^{p}}{E_{1}^{p}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}=\frac{2n_{1}\cos(\theta_{1})}{n_{2}\cos(\theta_{1})+n_{1}\cos(\theta_{2})}=+\frac{2\sin(\theta_{2})\cos(\theta_{1})}{\sin (\theta_{1}+\theta_{2})\sin (\theta_{1}-\theta_{2})}</script><h3 id="Special-case-normal-incidence"><a href="#Special-case-normal-incidence" class="headerlink" title="Special case-normal incidence"></a>Special case-normal incidence</h3><p>S and P polarization will be the same at normal incidence. For the sake of simplicity, we think that $\mu<em>{1}=\mu</em>{2}$, we can verify that the normal incidence is $\theta<em>{1}=\theta</em>{2 }=0$, at this time</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})-\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{n_{1}-n_{2}}{n_{1}+n_{2}}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{2n_{1}}{n_{1}+n_{2}}</script><script type="math/tex; mode=display">\begin{aligned}\frac{E_{r}^{p}}{E_{1}^{p}}&=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{n_{2}-n_{1}}{n_{2}+n_{1}}\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}\frac{E_{t}^{p}}{E_{1}^{p}}&=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{2n_{1}}{n_{2}+n_{1}}\end{aligned}</script><p>We find that the reflection of s-polarization and p-polarization happens to have a negative sign, which is different from the definition of the positive direction of the electric field with s- and p-polarization.</p><ul><li>For s polarization, it should be $E+E_{r}^{s}$</li><li>For p polarization should be $E-E_{r}^{s}$</li></ul><h3 id="Special-case-total-reflection"><a href="#Special-case-total-reflection" class="headerlink" title="Special case: total reflection"></a>Special case: total reflection</h3><p>According to the Fresnel formula,</p><script type="math/tex; mode=display">\sin(\theta_{2})n_{2}=\sin(\theta_{1})n_{1}\implies \sin(\theta_{2})=\frac{\sin(\theta_{1})n_{1}}{n_{2}}</script><p>Considering $n<em>{1}&gt;n</em>{2}$, at this time $\theta<em>{1}&lt;\theta</em>{2}$, increasing the incident angle continuously, there will be an angle that makes the transmission angle equal to 90 degrees, which is generally It is called the critical angle, $\theta<em>{c}=\arcsin(\frac{n</em>{1}}{n_{2}})$. If you continue to increase the angle, the wave passing through the interface will decay exponentially along the z direction.</p><blockquote><p>although there must be a transmitted wave, it cannot, on the average, carry energy across the boundary.</p></blockquote><p>Let’s analyze the specific physical process of light and then total reflection. The previous transmission and reflection coefficients are further expressed as</p><script type="math/tex; mode=display">r^{s}=\frac{\cos\theta_{1}-\sqrt{(\frac{n_{2}^2}{n_{1}^2}-\sin^2\theta_{1})}}{\cos\theta_{1}+\sqrt{(\frac{n_{2}^2}{n_{1}^2}-\sin^2\theta_{1})}}</script><script type="math/tex; mode=display">r^{s}=\frac{\frac{n_{2}^2}{n_{1}^2}\cos\theta_{1}-\sqrt{(\frac{n_{2}}{n_{1}}-\sin^2\theta_{1})}}{\frac{n_{2}^2}{n_{1}^2}\cos\theta_{1}+\sqrt{(\frac{n_{2}}{n_{1}}-\sin^2\theta_{1})}}</script><p>In $\theta<em>{1}\ge\theta</em>{c}$, there is an imaginary number in the radical. In this case, the numerator and denominator of the reflection coefficient is just a complex conjugate difference, but the square of the modulus is equal to 1. That is, all the energy is actually reflected at this time. Of course, this does not mean that there is no energy passing through the interface, but it is attenuated in a short distance after passing through. We can write the transmitted wave as</p><script type="math/tex; mode=display">\boldsymbol{\vec{E}_{2}}=\boldsymbol{\vec{E}_{02}}e^{i\boldsymbol{k}_{2}\cdot \boldsymbol{r}-i\omega t}</script><p>Among them, $\boldsymbol{k}<em>{2}\cdot \boldsymbol{r}=k</em>{2x}x+k<em>{2z}z=k</em>{2}\sin\theta<em>{2}+k</em>{2}\cos \theta_{2}$, according to Fresnel’s law</p><script type="math/tex; mode=display">k_{2}\cos\theta_{2}=\pm k_{2}\sqrt{1-\frac{\sin^2\theta_{1}}{n_{2}^2/n_{1}^2}}=\pm ik_{2}\sqrt{\frac{\sin^2\theta_{1}}{n_{2}^2/n_{1}^2}-1}=\pm i\beta_{z}</script><p>而</p><script type="math/tex; mode=display">k_{2x}=\frac{k_{2}}{n_{2}/n_{1}}\sin\theta_{1}</script><p>That is, the final field can be expressed as</p><script type="math/tex; mode=display">\boldsymbol{\vec{E}_{2}}=\boldsymbol{\vec{E}_{02}}e^{\pm \beta_{z}z}e^{ik_{x}x\sin\theta_{1}n_{1}/n_{2}-i\omega t}</script><p>Among them, for the sign of $\pm$, the final field must be attenuated, that is, $-$.</p><h2 id="COMSOL-implementation"><a href="#COMSOL-implementation" class="headerlink" title="COMSOL implementation"></a>COMSOL implementation</h2><p>The previous is the basic derivation, the analytical expression of the theory, this section will derive how to set it in COMSOL. When setting up COMSOL, you need to pay attention to the following points</p><ul><li>The field in COMSOL is expressed as $e^{i\omega t-i\boldsymbol{k}\boldsymbol{r}}$, so when setting the field expression in space, the wave vector related to the exponential term must be taken as the complex conjugate . For example, we normally have an imaginary number $a=\sqrt{-1}=i$, but it should be taken as $a=\sqrt{-1}=-i$ when setting COMSOL expressions.</li><li>In COMSOL, Ex, Ey, and Ez are set separately. Pay attention to the positive direction of the coordinate axis, and pay attention to the conversion from the previous schematic diagram to the specific COMSOL coordinates.</li></ul><h3 id="Scatter-on-Substrate-Example-analysis"><a href="#Scatter-on-Substrate-Example-analysis" class="headerlink" title="Scatter on Substrate Example analysis"></a>Scatter on Substrate Example analysis</h3><p>I think this example can be analyzed in more detail in the follow-up. Here I will briefly describe the information that this example can give us. This example was originally intended to allow us to save  of theoretical setting and directly calculate the background field numerically. In the old version of COMSOL5.1, there is no evaluation angle and Azimuthal angle to define the incident angle. We can see the definition process from the example <strong>Scatter on Substrate</strong>, as shown in the following figure</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219233353919_15347.png" alt=""></p><p>A beam of horizontally polarized light strikes from above, so the incident wave is not necessarily a plane wave. The expression for its electric field is written as</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234633713_10470.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234653754_10657.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234714704_25960.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219234744588_8538.png" alt=""></p><p>We can see from the above expression how to turn the analytical expression into an example in COMSOL. Because it is incident from top to bottom, that is, incident along the -z direction, so <code>kz</code> are all negative numbers. This example only sets a field in the port plane. In practice, what we need to set is the background field in the three-dimensional space, which will also participate in the z coordinate.</p><h3 id="Plane-wave-vertical-incidence-setting"><a href="#Plane-wave-vertical-incidence-setting" class="headerlink" title="Plane wave vertical incidence setting"></a>Plane wave vertical incidence setting</h3><p>The second thing to talk about is the incidence of plane waves from bottom to top, with glass below and air above. This model is used to calculate that in Wang Zhiyuan’s experiment, light is incident vertically on the glass, and there are gold nanoparticles on the glass. The model has multiple calculation methods</p><ul><li>Calculate the background field numerically, and then use the numerical background field to solve the scattered field</li><li>Write out the background field theoretically, and then numerically solve the scattered field</li><li>Do not use background field and scattered field, direct plane wave incidence to solve the total field, but need to calculate whether there are two cases of gold nanoparticles.</li></ul><p>I finally chose the second one. The advantage is that the background field is analytically accurate. The disadvantage is that the background field needs to be calculated manually, various parameters need to be calculated, and a thorough understanding of the properties of reflection and transmission is required. The following are some settings when calculating.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200219235930384_25635.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200220000004704_10913.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200220000056937_4747.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200220000116136_12496.png" alt=""></p><p>As you can see, I set it according to the s-polarized incident mode. Therefore, the incident and reflected fields of the Ex field are directly added. This is very important, because what I want to calculate next is the setting method of p-polarization.</p><h3 id="P-polarized-plane-waves-are-incident-obliquely-along-the-positive-x-axis"><a href="#P-polarized-plane-waves-are-incident-obliquely-along-the-positive-x-axis" class="headerlink" title="P-polarized plane waves are incident obliquely along the positive x-axis"></a>P-polarized plane waves are incident obliquely along the positive x-axis</h3><h4 id="Analytical-expression"><a href="#Analytical-expression" class="headerlink" title="Analytical expression"></a>Analytical expression</h4><p>This is to calculate the oblique incidence. When we set it specifically, SiO2 is on the bottom, and the plane wave is incident from the bottom to the top, from the negative X direction to the positive direction, that is, the polarization is in the X-Z plane. Then correspondingly, the incident wave in this coordinate system should be written as,</p><script type="math/tex; mode=display">\boldsymbol{E}_{1}=E_{01}(-\cos\theta_{1},0,\sin\theta_{1})\cdot e^{ik_{1x}x+ik_{1y}y+ik_{1z}z}</script><script type="math/tex; mode=display">\boldsymbol{E}_{1r}=E_{01r}(\cos\theta_{1},0,\sin\theta_{1})\cdot e^{ik_{1x}x+ik_{1y}y-ik_{1z}z}</script><script type="math/tex; mode=display">\boldsymbol{E}_{2}=E_{02}(-\cos\theta_{2},0,\sin\theta_{2})\cdot e^{ik_{2x}x+ik_{2y}y+ik_{2z}z}</script><p>Note that the $k_{z}$ of the reflected light should become a negative sign, and the relationship between the projected field and the reflected field is</p><script type="math/tex; mode=display">E_{01r}=E_{01}r^{p},E_{02}=E_{01}t^{p}</script><p>In the glass layer, the total field is the superposition of the incident field and the reflected field, and the sign of different components needs to be considered when superposing.</p><script type="math/tex; mode=display">\begin{aligned}&\boldsymbol{E}_{sub}=\boldsymbol{E}_{1}+\boldsymbol{E}_{1r}\\&=E_{01}\left[-\cos\theta_{1}e^{ik_{1x}x+ik_{1y}y+ik_{1z}z}+\cos\theta_{1}r^{p}e^{ik_{1x}x+ik_{1y}y-ik_{1z}z},\right.\\&0,\\&\left.\sin(\theta_{1})e^{ik_{1x}x+ik_{1y}y+ik_{1z}z}+\sin(\theta_{1})r^{p}e^{ik_{1x}x+ik_{1y}y-ik_{1z}z}\right]\end{aligned}</script><p>In the air layer, the total field is the transmitted field</p><script type="math/tex; mode=display">\boldsymbol{E}_{air}=\boldsymbol{E}_{01}\cdot t(-\cos\theta_{2},0,\sin\theta_{2})\cdot e^{ik_{2x}x+ik_{2y}y+ik_{2z}z}</script><h4 id="COMSOL-Settings-Summary"><a href="#COMSOL-Settings-Summary" class="headerlink" title="COMSOL Settings Summary"></a>COMSOL Settings Summary</h4><p>I have encountered a lot of pitfalls in COMSOL settings. Here are the things to pay attention to.</p><ol><li>The phase expression used by COMSOL is $e^{i\omega t-ikx}$, so the first is a change in the expression.</li><li>In addition to setting this item to a negative sign, special attention should be paid to the presence of imaginary numbers. For example, if the wave vector on the exponent has an imaginary part, add a negative sign to the imaginary number, such as $kz=1+i$. The imaginary part usually means loss, but it is an exponential increase in COMSOL. We need to take the corresponding complex conjugate.</li><li>Since the transmission and reflection coefficients also contain $\cos\theta=k_z/k$, the complex conjugate must also be taken! ! !</li><li>Because it is total reflection, the transmission angle is a complex number. Generally, for complex numbers, we have a method, $\sqrt{-1}=i$. When the sphere transmission angle is determined by the refractive index formula, <code>theta_2=asin(n_sub* sin(theta_1)/n_air))</code>, also need to go to an angle. If we take a complex conjugate for the default angle, that is, <code>theta_2=conjugate(asin(n_sub*sin(theta_1)/n_air)))</code>. The angle can be calculated in COMSOL, so the 2 above, 3 steps can be avoided. See the settings below for details.</li></ol><p>With the above derivation, let’s now set up COMSOL. The first is related variables</p><div class="table-container"><table><thead><tr><th style="text-align:center">parameters</th><th style="text-align:center">Value</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:center">WL0</td><td style="text-align:center">532e-9[nm]</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">k0</td><td style="text-align:center">2*pi/WL0</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">n_sub</td><td style="text-align:center">1.4607</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">n_air</td><td style="text-align:center">1</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">k1</td><td style="text-align:center">k0*n_sub</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">k2</td><td style="text-align:center">k0*n_air</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">theta_1</td><td style="text-align:center">50/180*pi</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">theta_2</td><td style="text-align:center">conjugate(asin(n_sub*sin(theta_1)/n_air))</td><td style="text-align:left">The complex conjugate here comes from the exponential -ikr</td></tr><tr><td style="text-align:center">r</td><td style="text-align:center">(n_air*cos(theta_1)-n_sub*cos(theta_2))/(n_air*cos(theta_1)+n_sub*cos(theta_2))</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">t</td><td style="text-align:center">2*n_sub<em>cos(theta_1)/(n_air\</em>cos(theta_1)+n_sub*cos(theta_2))</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">k1x</td><td style="text-align:center">k1* sin(\theta_1)</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">k1z</td><td style="text-align:center">k1* cos(\theta_1)</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">k2x</td><td style="text-align:center">k2* sin(\theta_2)</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">k2z</td><td style="text-align:center">k2* cos(\theta_2)</td><td style="text-align:left">For pure imaginary numbers, add a minus sign to indicate attenuation</td></tr></tbody></table></div><p>Then there is the background field setting, in the glass layer</p><div class="table-container"><table><thead><tr><th style="text-align:center">Expression</th><th style="text-align:left">Value</th></tr></thead><tbody><tr><td style="text-align:center">E0x</td><td style="text-align:left">-cos(theta_1)*exp(-1j*(k1x*x+k1z*z))+r*cos(theta_1)*exp(-1j*(k1x*x-k1z*z))</td></tr><tr><td style="text-align:center">E0y</td><td style="text-align:left">0</td></tr><tr><td style="text-align:center">E0z</td><td style="text-align:left">sin(theta_1)*exp(-1j*(k1x*x+k1z*z))   + r*sin(theta_1)*exp(-1j*(k1x*x-k1z*z))</td></tr></tbody></table></div><p>In air layer</p><div class="table-container"><table><thead><tr><th style="text-align:center">Expression</th><th style="text-align:center">Value</th></tr></thead><tbody><tr><td style="text-align:center">E0x</td><td style="text-align:center">-cos(theta_2)*t*exp(-1j*(k2x*x+k2z*z))</td></tr><tr><td style="text-align:center">E0y</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">E0z</td><td style="text-align:center">sin(theta_2)*t<em>exp(-1j\</em>(k2x*x+k2z*z))</td></tr></tbody></table></div><h3 id="P-polarized-plane-waves-are-incident-obliquely-with-arbitray-horizontal-angle"><a href="#P-polarized-plane-waves-are-incident-obliquely-with-arbitray-horizontal-angle" class="headerlink" title="P-polarized plane waves are incident obliquely with arbitray horizontal angle"></a>P-polarized plane waves are incident obliquely with arbitray horizontal angle</h3><h4 id="Analytical-expression-1"><a href="#Analytical-expression-1" class="headerlink" title="Analytical expression"></a>Analytical expression</h4><p>This is to calculate the oblique incidence. When we set it specifically, SiO2 is on the bottom, and the plane wave is incident from the bottom to the top, from the negative X direction to the positive direction with a azimuthal angle $\phi$, Then correspondingly, the incident wave in this coordinate system should be written as,</p><script type="math/tex; mode=display">\boldsymbol{E}_{1}=E_{01}(-\cos\theta_{1}\cos\phi,-cos\theta_{1}\sin\phi,\sin\theta_{1})\cdot e^{ik_{1x}x+ik_{1y}y+ik_{1z}z}</script><script type="math/tex; mode=display">\boldsymbol{E}_{1r}=E_{01r}(\cos\theta_{1}\cos\phi,\cos\theta_{1}\sin_{\phi},\sin\theta_{1})\cdot e^{ik_{1x}x+ik_{1y}y-ik_{1z}z}</script><script type="math/tex; mode=display">\boldsymbol{E}_{2}=E_{02}(-\cos\theta_{2}\cos\phi,-\cos\theta_{2}\sin\phi,\sin\theta_{2})\cdot e^{ik_{2x}x+ik_{2y}y+ik_{2z}z}</script><p>Note that the $k_{z}$ of the reflected light should become a negative sign, and the relationship between the projected field and the reflected field is</p><script type="math/tex; mode=display">E_{01r}=E_{01}r^{p},E_{02}=E_{01}t^{p}</script><p>In the glass layer, the total field is the superposition of the incident field and the reflected field, and the sign of different components needs to be considered when superposing.</p><script type="math/tex; mode=display">\begin{aligned}&\boldsymbol{E}_{sub}=\boldsymbol{E}_{1}+\boldsymbol{E}_{1r}\\&=E_{01}\left[-\cos\theta_{1}\cos\phi  e^{ik_{1x}x+ik_{1y}y+ik_{1z}z}+r^{p}\cos\theta_{1}\cos\phi e^{ik_{1x}x+ik_{1y}y-ik_{1z}z},\right.\\&-\cos\theta_{1}\sin\phi  e^{ik_{1x}x+ik_{1y}y+ik_{1z}z}+r^{p}\cos\theta_{1}\sin\phi e^{ik_{1x}x+ik_{1y}y-ik_{1z}z},\\&\left.\sin(\theta_{1})e^{ik_{1x}x+ik_{1y}y+ik_{1z}z}+r^{p}\sin(\theta_{1})e^{ik_{1x}x+ik_{1y}y-ik_{1z}z}\right]\end{aligned}</script><p>In the air layer, the total field is the transmitted field</p><script type="math/tex; mode=display">\boldsymbol{E}_{air}=\boldsymbol{E}_{01}\cdot t(-\cos\theta_{2}\cos\phi,-\cos\theta_{2}\sin\phi,\sin\theta_{2})\cdot e^{ik_{2x}x+ik_{2y}y+ik_{2z}z}</script><h4 id="COMSOL-Settings-Summary-1"><a href="#COMSOL-Settings-Summary-1" class="headerlink" title="COMSOL Settings Summary"></a>COMSOL Settings Summary</h4><p>Now I will COMSOL implementations here.</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
            <tag> Physics </tag>
            
            <tag> Simulation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>领域内大佬相关信息总结</title>
      <link href="/2020/07/15/E_%E7%89%A9%E7%90%86_PeopleandGroupCollection/"/>
      <url>/2020/07/15/E_%E7%89%A9%E7%90%86_PeopleandGroupCollection/</url>
      
        <content type="html"><![CDATA[<p>这是为了收集自己研究相关的大佬或者相关组的一些信息以及代表作。</p><p>我会为这些人创建一个简单介绍以及代表作，代表工作。后续会更新他们的文章的一些介绍以及贡献。</p><p>也需要在google学术以及research gate上将他们动态实时掌握出来。</p><h2 id="Franco-Nori"><a href="#Franco-Nori" class="headerlink" title="Franco Nori"></a>Franco Nori</h2><p>Chief Scientist at RIKEN. Also, at the <a href="https://scholar.google.com/citations?view_op=view_org&amp;hl=en&amp;org=4770128543809686866">University of Michigan</a>.</p><p><img src="https://scholar.googleusercontent.com/citations?view_op=medium_photo&amp;user=SRUYLREAAAAJ&amp;citpid=4" alt="Franco Nori"></p><p><a href="https://scholar.google.com/citations?hl=en&amp;user=SRUYLREAAAAJ&amp;view_op=list_works&amp;citft=1&amp;email_for_op=knifelees3%40gmail.com&amp;sortby=pubdate">Google学术主页</a></p><h2 id="Peter-Lodahl"><a href="#Peter-Lodahl" class="headerlink" title="Peter Lodahl"></a>Peter Lodahl</h2><p>Professor of Physics, Niels Bohr Institute, <a href="https://scholar.google.com/citations?view_op=view_org&amp;hl=en&amp;org=1233801322599084419">University of Copenhagen</a></p><p><img src="https://scholar.googleusercontent.com/citations?view_op=medium_photo&amp;user=JfKjRdUAAAAJ&amp;citpid=3" alt=""></p><p><a href="https://scholar.google.com/citations?user=JfKjRdUAAAAJ&amp;hl=en&amp;oi=ao">Google学术主页</a></p><p><a href="https://www.nbi.ku.dk/english/research/quantum-optics-and-photonics/quantum-photonics/">Niels Bohr Institute</a></p><h2 id="Shanhui-Fan"><a href="#Shanhui-Fan" class="headerlink" title="Shanhui Fan"></a>Shanhui Fan</h2><p>Professor of Electrical Engineering, <a href="https://scholar.google.com/citations?view_op=view_org&amp;hl=en&amp;org=8539678734835078480">Stanford University</a></p><p><img src="https://scholar.googleusercontent.com/citations?view_op=medium_photo&amp;user=BECu7wYAAAAJ&amp;citpid=2" alt=""></p><p><a href="https://scholar.google.com/citations?hl=en&amp;user=BECu7wYAAAAJ">Google学术主页</a></p><h2 id="Florian-Marquardt"><a href="#Florian-Marquardt" class="headerlink" title="Florian Marquardt"></a>Florian Marquardt</h2><p><a href="https://scholar.google.com/citations?view_op=view_org&amp;hl=en&amp;org=7984715157677218133">Max Planck Institute for the Science of Light</a> and University of Erlangen-Nuremberg</p><p><img src="https://www.mpg.de/11655760/original-1509699689.jpg?t=eyJ3aWR0aCI6NjAwLCJoZWlnaHQiOjQ1MCwiZml0IjoiY3JvcCIsIm9ial9pZCI6MTE2NTU3NjB9--49bc06134d80d967bce163eed3a32c4cc9c1eb11" width="300" alt="图片名称" align="center"></p><p><a href="https://scholar.google.com/citations?hl=en&amp;user=jx_c7SgAAAAJ">Google学术主页</a></p><h2 id="Vahid-Sandoghdar"><a href="#Vahid-Sandoghdar" class="headerlink" title="Vahid Sandoghdar"></a>Vahid Sandoghdar</h2><p><a href="https://scholar.google.com/citations?view_op=view_org&amp;hl=en&amp;org=7984715157677218133">Max Planck Institute for the Science of Light</a><br><a href="https://www.mpg.de/364485/physik_des_lichts_wissM4">Google学术主页</a></p><p><img src="https://www.mpg.de/11652357/original-1508397454.jpg?t=eyJ3aWR0aCI6NjAwLCJoZWlnaHQiOjQ1MCwiZml0IjoiY3JvcCIsIm9ial9pZCI6MTE2NTIzNTd9--c18eca07bdbc3d20de742c0a814435ea4aeeb0b4" width="300" alt="图片名称" align="center"></p><h2 id="Lan-Yang"><a href="#Lan-Yang" class="headerlink" title="Lan Yang"></a>Lan Yang</h2><p>Professor of Electrical and Systems Engineering, <a href="https://scholar.google.com/citations?view_op=view_org&amp;hl=en&amp;org=9821410025618751990">Washington University in St. Louis</a></p><p><img src="https://scholar.googleusercontent.com/citations?view_op=medium_photo&amp;user=WwadVmIAAAAJ&amp;citpid=6" alt=""></p><p><a href="https://physics.wustl.edu/people/lan-yang">个人网站</a></p><p><a href="https://scholar.google.com/citations?user=WwadVmIAAAAJ&amp;hl=en&amp;oi=ao">Google学术页</a></p><h2 id="Alexia-Auffeves"><a href="#Alexia-Auffeves" class="headerlink" title="Alexia Auffeves"></a>Alexia Auffeves</h2><p><a href="http://neel.cnrs.fr/spip.php?rubrique1188">Group</a></p><p><img src="https://scholar.googleusercontent.com/citations?view_op=medium_photo&amp;user=7-5zUEsAAAAJ&amp;citpid=2" alt=""></p><p><a href="https://scholar.google.com/citations?hl=zh-CN&amp;user=7-5zUEsAAAAJ&amp;sortby=pubdate&amp;view_op=list_works&amp;citft=1&amp;citft=3&amp;email_for_op=knifelees3%40gmail.com&amp;gmla=AJsN-F6dV8JXDZDp2N4rv6hISigG48LM1hIk5dJXHeSFObV_Drg4niWfAAysAkZyf61V7ln3727hxxPgfZ3m2Vh4fGdOE7HD2rnMV7_o2PkRu8mekZnHbSQQchoJZ-Ih7zS98k9SHx0BT1Rj-5iGv1dE0vRaWTGkJiPx4eyW82-7BLdZMBN6ERk5JM3Mf-zWd7xh-PsbGMqoSiQcnUob6zqqznhCVz1sgWS0Ivox6V0Te6bvQl28vjkmXMWAXR0c296A9n9A2JsQ">Google学术页</a></p><h2 id="Gerhard-Rempe"><a href="#Gerhard-Rempe" class="headerlink" title="Gerhard Rempe"></a>Gerhard Rempe</h2><p><a href="https://www.mpq.mpg.de/quantumdynamics">Group</a><br><img src="https://www.mpq.mpg.de/employee_images/34830-1472635619?t=eyJ3aWR0aCI6MjE0LCJoZWlnaHQiOjI3NSwiZml0IjoiY3JvcCJ9--f15c99bf163f21b8b62edcf2723ce08e56342d4f" width="300" alt="图片名称" align="center"></p><h2 id="Rainer-Blatt"><a href="#Rainer-Blatt" class="headerlink" title="Rainer Blatt"></a>Rainer Blatt</h2><p><a href="https://www.quantumoptics.at/en/people-list.html">Group</a></p><p><img src="https://quantumoptics.at/images/people/rainer.blatt/rainer.jpg" width="300" alt="图片名称" align="center"></p><h2 id="Peter-Zoller"><a href="#Peter-Zoller" class="headerlink" title="Peter Zoller"></a>Peter Zoller</h2><p><a href="https://iqoqi.at/en/zoller-gruppe">Group</a></p><p><a href="https://scholar.google.com/citations?user=iKB_xp0AAAAJ&amp;hl=en">Google学术页</a></p><p><img src="https://d21fcq7e6ryzry.cloudfront.net/images/multithumb_thumbs/b_135_180_16777215_0_0_https___resource.iqoqi.at_staff_db_Zoller-04_540x720_Zuschnitt-c-1600342253.jpg" width="300" alt="图片名称" align="center"></p><h2 id="Alain-Aspect"><a href="#Alain-Aspect" class="headerlink" title="Alain Aspect"></a>Alain Aspect</h2><p><a href="https://www.ias.cityu.edu.hk/en/profile/alain-aspect">Group I</a></p><p><img src="https://cse.umn.edu/sites/cse.umn.edu/files/styles/full/public/alain_aspect.jpg?itok=DFYasqGl" width="300" alt="图片名称" align="center"></p><p><a href="https://en.wikipedia.org/wiki/Alain_Aspect">Alain Aspect-WIki</a></p><p><a href="https://scholar.google.be/citations?user=-6d6dV4AAAAJ&amp;hl=fr">Google学术页</a></p><h2 id="Chaohong-Lee"><a href="#Chaohong-Lee" class="headerlink" title="Chaohong Lee"></a>Chaohong Lee</h2><p><a href="https://scholar.google.com/citations?user=8CdWwboAAAAJ&amp;hl=en">Google学术也</a></p><p>深圳大学</p><p>最近有关于Waveguide-QED和拓扑的工作<br><img src="https://scholar.googleusercontent.com/citations?view_op=view_photo&user=8CdWwboAAAAJ&citpid=7" width="300" alt="图片名称" align="center"></p><h2 id="Alexander-Poddubny"><a href="#Alexander-Poddubny" class="headerlink" title="Alexander Poddubny"></a>Alexander Poddubny</h2><p>魏茨曼科学研究所</p><p><img src="https://www.weizmann.ac.il/complex/poddubny/sites/complex.poddubny/files/styles/pi_photo/public/15583F007_resize%20copy.jpg?itok=L9QUWKqJ" width="300" alt="图片名称" align="center"></p><p><a href="https://www.weizmann.ac.il/complex/poddubny/">大学主页</a></p><blockquote><p>In recent years, the quantum physics landscape has been reshaped by the emergence of diverse artificial quantum optical systems. In these systems, photons interact with multiple emitters—be it atoms, superconducting qubits, solid-state defects, or quantum dots. An intriguing aspect of these interactions is the reabsorption of emitted photons by remote emitters, initiating a photon-mediated coupling across significant distances. This long-range, collective coupling introduces unique properties to atom-photon systems, a fascinating field that continues to intrigue researchers.</p><p>We study theoretically various phenomena found within arrays of photon emitters, including both natural and artificial atoms, lasers, and particularly within topologically complex lattices. Our mission is two-fold: to advance the fundamental understanding of intricate quantum systems from the perspectives of quantum optics, nonlinear and many-body physics, and to provide a solid theoretical foundation for the development of emerging quantum technologies. We actively collaborate with experimental groups both at Weizmann and across the globe.</p></blockquote><h2 id="Darrick-Chang"><a href="#Darrick-Chang" class="headerlink" title="Darrick Chang"></a>Darrick Chang</h2><p>ICFO  西班牙 巴塞罗那<br><a href="https://www.icfo.eu/research-group/22/tqnp/home/">大学主页</a></p><p><img src="https://anircenglish.files.wordpress.com/2015/02/darrick-chang.jpg?w=175&amp;h=217" alt=""></p><h2 id="Anders-Sondberg-Sorensen"><a href="#Anders-Sondberg-Sorensen" class="headerlink" title="Anders Søndberg Sørensen"></a>Anders Søndberg Sørensen</h2><p>哥本哈根大学</p><p><a href="https://scholar.google.com/citations?user=YJjun7sAAAAJ&amp;hl=en&amp;oi=sra">Google学术</a></p><p><img src="https://nbi.ku.dk/english/namely_names/2019/anders-soendberg-soerensen-awarded-optical-society-of-america-fellowship/anders1000.jpg" width="300" alt="图片名称" align="center"></p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Collection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Installation of COMSOL</title>
      <link href="/2020/07/06/A_En-COMSOL-Installation/"/>
      <url>/2020/07/06/A_En-COMSOL-Installation/</url>
      
        <content type="html"><![CDATA[<h1 id="COMSOL"><a href="#COMSOL" class="headerlink" title="COMSOL"></a>COMSOL</h1><h2 id="On-Ubuntu"><a href="#On-Ubuntu" class="headerlink" title="On Ubuntu"></a>On Ubuntu</h2><p>The COMSOL installation package is a ISO file and we need mount it first. We create a empty folder first</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /mnt/temp</span><br></pre></td></tr></table></figure><p>Then we mount the ISO file and run the <code>setup</code> file</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o loop ./*.iso /mnt/temp</span><br><span class="line">sudo /mnt/temp/setup</span><br></pre></td></tr></table></figure><p>During installation, we should </p><ul><li><p>Choose the correct <code>lic</code> file </p></li><li><p>Cancel the update choice.</p></li><li><p>Cancel the un-needed modules.</p></li></ul><p>For us the most import step is the installation of the <strong>COMSOL Livelink with MATLAB</strong>. We should choose the correct  folder of the MATLAB. For example</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/MATLAB/matlab2018a/</span><br></pre></td></tr></table></figure><p>If the MATLAB haven’t been installed yet. We can ignore this and after we install MATLAB, we could then reinstall COMSOL by choosing the correct folder. To verify whether the livelink has been successfully installed. We can type</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comsol mphserver matlab</span><br></pre></td></tr></table></figure><p>If MATLAB could be launched, our installation completed. For the first use, you need type the account and password.</p><h2 id="On-Windows"><a href="#On-Windows" class="headerlink" title="On Windows"></a>On Windows</h2><p>On windows, the installation is easier. Open the ISO file with file explorer and double click the <code>setup.exe</code>, then all the installation is nearly the same with previous Ubuntu’s step. When installation, we should </p><ul><li><p>Choose the correct <code>lic</code> file </p></li><li><p>Cancel the update choice.</p></li><li><p>Cancel the un-needed modules.</p></li></ul><p>For us the most import step is the installation of the <strong>COMSOL Livelink with MATLAB</strong>. We should choose the correct  folder of the MATLAB. For example</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MATLAB\R2018b</span><br></pre></td></tr></table></figure><p>If the MATLAB haven’t been installed yet. We can ignore this and after we install MATLAB, we could then reinstall COMSOL by choosing the correct folder. </p><p>After installation, To launch the Live link, you can double click the  <em>COMSOL Multiphysics 5.4 with MATLAB</em>, In the command interface type the username and password for the first use and then you can use the Livelink.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2020-03-01_10-23-12.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use COMSOL on server</title>
      <link href="/2020/07/06/A_En-COMSOL-Use-on-Server/"/>
      <url>/2020/07/06/A_En-COMSOL-Use-on-Server/</url>
      
        <content type="html"><![CDATA[<h1 id="COMSOL"><a href="#COMSOL" class="headerlink" title="COMSOL"></a>COMSOL</h1><p>This note is to show the way of using COMSOL on our server   (ubuntu). We hope that we can run them with bash code in background and after we logout or exit the server the simulations will continue. We also need to know the simulation progress from a log file. These needs can all be satisfied only if you write proper bash code.</p><h2 id="Run-COMSOL-on-server"><a href="#Run-COMSOL-on-server" class="headerlink" title="Run COMSOL on server"></a>Run COMSOL on server</h2><p>If you want to run COMSOL on server, you can use the command of the following form</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile &lt;inputfilename&gt; -outputfile &lt;outputfilename&gt; -batchlog &lt;logfilename&gt; -np &lt;number of cores&gt; -study &lt;study tag&gt; l&amp;</span><br></pre></td></tr></table></figure><p>above command shows the smallest example and  the “&lt; &gt;” isn’t included in the actual terminal command. The form <code>nohup &lt;command&gt; &amp;</code> is used to execute the command in the background even if we logout from the server. To avoid confusion, I give a more specific example, If we want to simulate the file “test.mph”, then the command should be as follows</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test.mph -outputfile test_out.mph -batchlog test.log -np 30 &amp;</span><br></pre></td></tr></table></figure><p>In above example we  use 30 cores (set with “-np 30”)to simulate our mph file. If we have many mph files to simulate, we can write a bash code to arrange our simulation works. We create a file with the name “comsolscript.sh” with the following content</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test1.mph -outputfile test1_out.mph -batchlog test1.log -np 30 &amp;&amp;</span><br><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test2.mph -outputfile test2_out.mph -batchlog test2.log -np 30 &amp;&amp;</span><br><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test3.mph -outputfile test3_out.mph -batchlog test3.log -np 30 &amp;</span><br></pre></td></tr></table></figure><p>Above code will simulate the file “test1.mph”, “test2.mph”, “test3.mph” respectively. The “&amp;&amp;” at the end of the line will let the server to execute the next command only when this command complete. if you use “&amp;” then all the mission will simultaneously execute. You need upload the “comsolscript.sh” file to the correct folder and make it executable</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x ./comsolscript.sh</span><br></pre></td></tr></table></figure><p>then in the corresponding folder type</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./comsolscript.sh</span><br></pre></td></tr></table></figure><p>The simulation will begin and you can see the progress from the log file by typing <code>vi test.log</code>.</p><p>If you write the bash code on windows then upload the file to the server, when you try to run the bash file there may be error: “<code>/bin/bash^M:bad interpreter:No such file or directory</code>“, this is because of the difference of coding in Unix and Windows. You can use the following command in the corresponding folder to fix it</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e <span class="string">'s/\r$//'</span> ./comsolscrpt.sh</span><br></pre></td></tr></table></figure><p>if you use vi on the server to create the bash file, this error can also be avoided.</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COMSOL Problem List and Solutions</title>
      <link href="/2020/07/06/A_En_Local-COMSOL-ProblemList&amp;Solutions/"/>
      <url>/2020/07/06/A_En_Local-COMSOL-ProblemList&amp;Solutions/</url>
      
        <content type="html"><![CDATA[<h1 id="COMSOL"><a href="#COMSOL" class="headerlink" title="COMSOL"></a>COMSOL</h1><p>[TOC]</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>To summarize the problems we often encountered in using COMSOL. I will update it later.</p><h2 id="Problem-1-No-accumulated-tables"><a href="#Problem-1-No-accumulated-tables" class="headerlink" title="Problem 1 : No accumulated tables"></a>Problem 1 : No accumulated tables</h2><ul><li><p>Problem description:</p><blockquote><p>We need define some global variables (such as the total power and radiative power) and when we do parameter sweep in COMSOL, an accumulated table should be generated to store the global variable. However, in a certain case when we have many tables in COMSOL and even if we have chosen the “Accumulated Table” to be ”New”, the table is empty.</p></blockquote></li><li><p>Cause of problem: </p><blockquote><p>This is due to the conflict of “table” and “plot window” for different global variable probe. Different probe may use the same “probe table” or “plot window” and will replace the content for each other.</p></blockquote></li><li><p>Solution to the problem:</p><blockquote><ol><li>Delete all tables, datasets, plot groups in COMSOL file.</li><li>Set the “output table” and “plot window” to be new and update (by typing the “⟳”) the global variable probe, respectively. Then all probe will have its own “probe table” and “plot window” and will not conflict with each other. </li><li>In the table menu, create new table and let the output table of the accumulated probe table to be the new created table.</li></ol></blockquote></li></ul><p>A complete and correct settings for two probes should be as follows:<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200106160602083_23459.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200106160622845_27084.png" alt=""></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200106160645869_13828.png" alt=""></p><h2 id="Problem-2-Can’t-evaluate-the-electric-field-in-the-dipole’s-position"><a href="#Problem-2-Can’t-evaluate-the-electric-field-in-the-dipole’s-position" class="headerlink" title="Problem 2:  Can’t evaluate the electric field in the dipole’s position"></a>Problem 2:  Can’t evaluate the electric field in the dipole’s position</h2><ul><li><p>Problem description: </p><blockquote><p>I want to update the electric field in the dipole’s position. There is no “point probe” to evaluate a certain point’s data. If we use the “domain point probe” or “boundary point probe”, the total power simulated from Poynting vector integral and electric field evaluation will be different.  Actually, the result from “domain/boundary point probe” is wrong.</p></blockquote></li><li><p>Cause of the problem: </p><blockquote><p>COMSOL will do interpolation in a domain or a boundary if we use “domain/boundary point probe” to evaluate a point’s data. In our case, the electric field near the dipole is very strong and the interpolation will let the electric field much smaller than the actual field. </p></blockquote></li><li><p>Solution to the problem:</p><blockquote><p>The best way of evaluating a point’s data is by using COMSOL live link with MATLB. We use MATLAB to run and sweep COMSOL file and extract the data after each sweep process. To do this, we need learn:</p></blockquote><ol><li>How to run COMSOL file and do parameter sweep through MATLAB.</li><li>How to do point evaluation from MATLAB.</li><li>How to run COMSOL live link with MATLAB on server especially in the background.</li></ol></li></ul><p>We can learn above skills from the file “LiveLinkForMATLABUsersGuide.pdf” in COMSOL’s installation folder. I have written a note for 3 in the <a href="https://knifelees3.github.io/2019/07/06/A_En_How_To_Use_COMSOL_LiveLink_With_MATLAB/">website</a> </p><h2 id="Problem-3-Please-avoid-the-using-of-variable-name-“Lambda”"><a href="#Problem-3-Please-avoid-the-using-of-variable-name-“Lambda”" class="headerlink" title="Problem 3 : Please avoid the using of variable name “Lambda”"></a>Problem 3 : Please avoid the using of variable name “Lambda”</h2><p>lambda has special meaning in COMSOL so you can’t use this name as your own variable.</p><h2 id="Problem-4-How-to-release-COMSOL-model-from-livelink-server"><a href="#Problem-4-How-to-release-COMSOL-model-from-livelink-server" class="headerlink" title="Problem 4 : How to release COMSOL model from livelink server?"></a>Problem 4 : How to release COMSOL model from livelink server?</h2><ul><li>Problme description:<blockquote><p>We may need use COMSOL livelink with MATLAB and the COMSOL file will be loaded into MATLAB through this livelink.  Then we can’t modify this COMSOLfiel anymore only if we close the livelink server and restart it. </p></blockquote></li><li>Cause of the problem<blockquote><p> This is becsause the mph file has been loaded into MATLAB through this sever and then is locked by this server. If we don’t close this file through this livelink we can’t use it any more.</p></blockquote></li><li>Solution to the problem<blockquote><p>To solve this problem, we only need run the following command in MATLAB:</p></blockquote></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import com.comsol.model.*</span><br><span class="line">import com.comsol.model.util.*</span><br><span class="line"><span class="comment">% To remove thde model for each run</span></span><br><span class="line">ModelUtil.remove(<span class="string">'Model'</span>)</span><br></pre></td></tr></table></figure><h2 id="Problem-4"><a href="#Problem-4" class="headerlink" title="Problem 4:"></a>Problem 4:</h2>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meep教程(1):在Ubuntu或者Windows的Ubuntu子系统的安装</title>
      <link href="/2020/06/26/C_%E6%95%99%E7%A8%8B_Windows%E4%B8%AD%E7%9A%84ubuntu%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85Meep/"/>
      <url>/2020/06/26/C_%E6%95%99%E7%A8%8B_Windows%E4%B8%AD%E7%9A%84ubuntu%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85Meep/</url>
      
        <content type="html"><![CDATA[<h1 id="Meep"><a href="#Meep" class="headerlink" title="Meep"></a>Meep</h1><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><p>(2021 03 18)<br>最近才知道自己以前安装的是非并行版本的Meep，为了不给大家造成困扰，我这里将以前的错误描述更正了。</p><p>（2023 04 22）<br>最近发现官网的安装代码又有变化，按照老版本安装会有各种问题，所以我把安装代码也更新一下</p><p>（2023 09 23）<br>近期安装发现，jupyter的安装有变化，依然使用以前的代码会导致安装不成功，这次将jupyter-notebook的安装更新完整了<br><strong>之前的安装命令是</strong>：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install jupyter</span><br></pre></td></tr></table></figure></p><p><strong>但最近安装有变化</strong>，根据jupyter最新的<a href="https://link.zhihu.com/?target=https%3A//jupyter.org/install">安装教程</a> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推荐使用conda forge源</span></span><br><span class="line">conda config --add channels conda-forge</span><br><span class="line">conda config --<span class="built_in">set</span> channel_priority strict</span><br><span class="line"><span class="comment"># 如果安装jupyter notebook</span></span><br><span class="line">conda install notebook</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">jupyter notebook</span><br><span class="line"><span class="comment"># 如果是安装jupyterlab</span></span><br><span class="line">conda install jupyterlab</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">jupyter lab</span><br></pre></td></tr></table></figure><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>目前的时域有限差分软件很多，<a href="https://meep.readthedocs.io/en/latest/">Meep</a>应该是最知名的开源软件<br><img src="https://meep.readthedocs.io/en/latest/images/Meep-banner.png" alt=""></p><p>Meep有独立的使用方法，也可以集成在Python中通过Python调用。我的目的是基于Python来使用Meep。Meep是只支持Linux系统的，所以我们安装有两种方案，一种是通过真正的Linux系统来安装，另外就是通过Windows子系统来使用。</p><p>当我打开<a href="https://meep.readthedocs.io/en/latest/">Meep</a>的官方文档开始安装的时候，限于英语水平和编程知识的欠缺，一直无从下手，对于Ubuntu</p><blockquote><p>The latest version of Meep preinstalled on Ubuntu can be accessed on Amazon Web Services (AWS) Elastic Compute Cloud (EC2) as a free <a href="https://aws.amazon.com/marketplace/pp/B01KHWH0AS">Amazon Machine Image (AMI)</a>. To access this AMI, follow these <a href="http://www.simpetus.com/launchsims.html">instructions</a>.</p></blockquote><p>以前看到这句话以为Ubuntu安装会很简单，结果弄了一下也半途而废了。</p><p>最近重新读了一遍官方的安装指南，才知道这么容易。我自己是在我的Windows子系统安装的，比纯粹的Ubuntu系统更加复杂一点，我下面详细介绍。</p><h2 id="在windows子系统安装"><a href="#在windows子系统安装" class="headerlink" title="在windows子系统安装"></a>在windows子系统安装</h2><h3 id="下载Miniconda3"><a href="#下载Miniconda3" class="headerlink" title="下载Miniconda3"></a>下载Miniconda3</h3><p>在这之前我们需要说明我们为什么用miniconda而不是anaconda?主要是:</p><ul><li>我之前安装Ananconda再安装报错了，可能是不同版本库之前有些冲突？我通过miniconda安装就没有这些问题。</li><li>我们只需要使用Meep，所以轻量化的miniconda最符合要求，特别是我们本身就是创建虚拟环境使用的。</li></ul><p>然后是按照步骤，首先是官方文档的素质三连，安装”<code>Miniconda3",下载</code>Miniconda3-latest-Linux-x86_64.sh<code>到本地并且存为</code>miniconda.sh`</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh</span><br></pre></td></tr></table></figure><p>执行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash miniconda.sh</span><br></pre></td></tr></table></figure><p>安装的时候有选择安装位置，选择默认的即可，此时应该默认加入了环境变量，可以尝试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> python</span><br></pre></td></tr></table></figure><p>如果有如下输出，说明成功了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/&lt;username&gt;/miniconda3/bin/python</span><br></pre></td></tr></table></figure><p>如果没有，手动加入环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/home/&lt;username&gt;/miniconda3/bin/:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="安装Meep"><a href="#安装Meep" class="headerlink" title="安装Meep"></a>安装Meep</h3><p>然后安装Meep, 为了不影响其他的功能，我们安装在虚拟环境”mp”中，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n mp -c conda-forge pymeep</span><br></pre></td></tr></table></figure><p>激活虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate mp</span><br></pre></td></tr></table></figure><p>测试是否安装成功，可以接着打开python,然后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> meep <span class="keyword">as</span> mp</span><br></pre></td></tr></table></figure><p>没有报错就说明成功了！</p><h3 id="安装Parallel-Meep"><a href="#安装Parallel-Meep" class="headerlink" title="安装Parallel Meep"></a>安装Parallel Meep</h3><p>如果你有服务器需要并行计算提高效率，可以安装并行版本的Meep, 其命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n pmp -c conda-forge pymeep=\*=mpi\_mpich\_\*</span><br></pre></td></tr></table></figure><p>即我们将并行版本的Meep安装在了虚拟环境pmp上，我们激活虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate pmp</span><br></pre></td></tr></table></figure><p>测试是否安装成功，可以接着打开python,然后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> meep <span class="keyword">as</span> mp</span><br></pre></td></tr></table></figure><p>没有报错就说明成功了！另外需要注意的是，如果想并行运行Meep，只能通过命令行方式运行而不能通过jupyter-notebook的方式运行。</p><h3 id="通过Jupyter-notebook使用子系统Meep"><a href="#通过Jupyter-notebook使用子系统Meep" class="headerlink" title="通过Jupyter-notebook使用子系统Meep"></a>通过Jupyter-notebook使用子系统Meep</h3><p>因为我的是子系统，没有图形界面，为了方便使用，最好是通过jupyter notebook来使用， 通过在子系统启动jupyter，然后再windows系统中访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install jupyter</span><br></pre></td></tr></table></figure><p>首先在子系统启动jupyter notebook，不打开浏览器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-notebook --no-browser</span><br></pre></td></tr></table></figure><p>这时候在自己的电脑上应该是可以启动打开熟悉的jupyter界面了，如果不行，需要修改配置文件，手动生成配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure><p>然后用vi编辑该配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><p>更改下面的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为了不打开浏览器</span></span><br><span class="line">c.NotebookApp.use_redirect_file = False</span><br><span class="line"><span class="comment"># 为了可以在自己windows端打开连接到子系统的jupyter</span></span><br><span class="line">c.NotebookApp.allow_origin = <span class="string">'*'</span></span><br><span class="line">c.NotebookApp.ip = <span class="string">'0.0.0.0'</span></span><br></pre></td></tr></table></figure><p>这样我们就可以通过JupyterNotebook来使用了。</p><h3 id="通过VSCode使用子系统Meep"><a href="#通过VSCode使用子系统Meep" class="headerlink" title="通过VSCode使用子系统Meep"></a>通过VSCode使用子系统Meep</h3><p>另外VSCode也可以完美支持我们连接子系统进行计算，只需要安装’Remote Explorer’插件即可，在通过打开如下图所示的WLS Targets就可以打开我们的子系统了。具体使用方法很多VScode教程会讲的比较详细，我这里就不在赘述。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Pastedimage20210318084244.png" alt=""></p><h3 id="一个简单的例子补充"><a href="#一个简单的例子补充" class="headerlink" title="一个简单的例子补充"></a>一个简单的例子补充</h3><p>可以从[<a href="https://github.com/NanoComp">NanoComp</a>找到例子，我以这个<a href="https://github.com/NanoComp/meep/blob/master/python/examples/straight-waveguide.ipynb">例子</a>为例, 我运行一切完美，就是这一句报错了，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename = <span class="string">"media/straight_waveguide.mp4"</span></span><br><span class="line">Animate.to_mp4(10,filename)</span><br></pre></td></tr></table></figure><p>这句错误是因为我的文件夹没有“media”这个子文件夹，需要自己创建一个···</p><h2 id="在Ubuntu系统安装"><a href="#在Ubuntu系统安装" class="headerlink" title="在Ubuntu系统安装"></a>在Ubuntu系统安装</h2><p>这个就更加简单，只需要将前面的关于jupyter的额外配置去掉就可以了。注意通过多个核心运行的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpirun -np 4 python foo.py &gt; foo.out</span><br></pre></td></tr></table></figure><p>而普通运行的命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python foo.py &gt; foo.out</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Meep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dipole&#39;s Emission In Multi-Layered  Structure</title>
      <link href="/2020/06/22/A_En_DipoleInMultiLayerCartesian/"/>
      <url>/2020/06/22/A_En_DipoleInMultiLayerCartesian/</url>
      
        <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>This is the note of dipole radiation pattern calculations in a multilayer structure. </p><p>The numerical realizations can be found in my <a href="https://github.com/knifelees3/DipoleEmissionInSymmetricStructure">Github</a>.</p><p>The derivations mainly follow the work of Olivier J. F et .al <sup><a href="#fn_ref1" id="reffn_ref1">ref1</a></sup></p><h2 id="Extra-words"><a href="#Extra-words" class="headerlink" title="Extra words"></a>Extra words</h2><p>My previous calculations are not helpful since we can not get the emission pattern. In previous cylindrical expressions, the integral in <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="3.578ex" height="2.237ex" role="img" focusable="false" viewBox="0 -694 1581.4 989"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z"></path></g></g><g data-mml-node="msub" transform="translate(556,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="TeXAtom" transform="translate(554,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g></g></g></g></g></svg></mjx-container> has been transformed into Bessel functions via</p><script type="math/tex; mode=display">J_{n}(k_{\rho}\rho)=\frac{j^{-n}}{2\pi}\int_{0}^{2\pi}\mathrm{d}k_{\phi}\exp (jk_{\rho}\rho\cos k_\phi)cos(nk_\phi)</script><p>If we extract the information of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="3.578ex" height="2.237ex" role="img" focusable="false" viewBox="0 -694 1581.4 989"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z"></path></g></g><g data-mml-node="msub" transform="translate(556,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="TeXAtom" transform="translate(554,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g></g></g></g></g></svg></mjx-container>, our previous expressions can also be used to get the emission pattern. However, to make this easier to understand, we use plane waves to expand Green’s tensor.</p><h1 id="Green-tensor-expression"><a href="#Green-tensor-expression" class="headerlink" title="Green tensor expression"></a>Green tensor expression</h1><p>We will use Green tensor to get the dipole’s emission!</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200223215829792_1734.jpg" alt=""></p><p>I will follow the derivations of Paulus et. al . The derivations will begin from the expression of the Green’s tensor. We still consider only the nonmagnetic material so <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="5.513ex" height="1.995ex" role="img" focusable="false" viewBox="0 -666 2436.6 882"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mo" transform="translate(880.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1936.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> and we use <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="6.733ex" height="1.808ex" role="img" focusable="false" viewBox="0 -583 2976.1 799"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mo" transform="translate(880.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(1936.6,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mn" transform="translate(636,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container> to express the permeability in the vacuum. The equation of the Green’s tensor is as follows</p><script type="math/tex; mode=display">\boldsymbol{\nabla}\times\boldsymbol{\nabla}\times \boldsymbol{\overset\leftrightarrow{G}}(\boldsymbol{r},\boldsymbol{r}_0)-k_0^2\varepsilon\mu\boldsymbol{\nabla}\times \boldsymbol{\overset\leftrightarrow{G}}(\boldsymbol{r},\boldsymbol{r}_0)=\boldsymbol{I}\delta(\boldsymbol{r}-\boldsymbol{r}_0)</script><p>and for a homogeneous media the Green’s tensor can be expressed as</p><script type="math/tex; mode=display">\boldsymbol{\overset\leftrightarrow{G}}(\boldsymbol{r},\boldsymbol{r}_0)=\left(1+\frac{\boldsymbol{\nabla}\boldsymbol{\nabla}}{k_B^2}\right)\frac{\exp (jk_BR)}{4\pi R}</script><p>where $R=|\boldsymbol{R}|=|\boldsymbol{r-r<em>0}|<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="24.864ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 10990 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(814,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1175,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1751,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2217,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2668,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3134,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(3432,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3961,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4322,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4667,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(5152,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(5618,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(6138,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6483,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(6952,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(7313,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(7842,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8442,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(8875,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(9341,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(9870,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10470,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>k</em>{B}^2=\omega^2\varepsilon \mu$ corresponds to the wave number in the background medium. We can do Fourier transform of Green’s tensor as</p><script type="math/tex; mode=display">\begin{aligned}    \boldsymbol{\overset\leftrightarrow{G}}(k)&=\iiint_{-\infty}^{\infty}\boldsymbol{\overset\leftrightarrow{G}}(\boldsymbol{r},\boldsymbol{r}_0)\exp(-j\boldsymbol{k}\cdot\boldsymbol{R})\mathrm{d}\boldsymbol{R}\\    &=\iiint_{-\infty}^{\infty}\left(1+\frac{\boldsymbol{\nabla}\boldsymbol{\nabla}}{k_B^2}\right)\frac{\exp (jk_BR)}{4\pi R} \exp(-j\boldsymbol{k}\cdot\boldsymbol{R})\mathrm{d}\boldsymbol{R}\\ \end{aligned}</script><p>and we can express the Green’s tensor as a Fourier transform of each wavevector,</p><script type="math/tex; mode=display">\boldsymbol{\overset\leftrightarrow{G}}(\boldsymbol{r},\boldsymbol{r}_0)=\frac{1}{8\pi^3k_B^2}\iiint \mathrm{d} \mathbf{k}\left(\frac{\boldsymbol{1}k_B^2-\boldsymbol{\mathrm{k}}\boldsymbol{\mathrm{k}}}{k^2-k_B^2}\right)\exp (j\boldsymbol{\mathrm{k}} \boldsymbol{\cdot R})</script><p>Since we assume that the layers, which will be added later, are perpendicular to the z axis, we first perform the integration over <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.11ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 932.8 851.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(554,-150) scale(0.707)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g></g></svg></mjx-container> using calculus of residues. Hence, we muse ensure that the integrand vanishes for <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="7.892ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 3488.4 851.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(554,-150) scale(0.707)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><g data-mml-node="mo" transform="translate(1210.6,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2488.4,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g></svg></mjx-container> and rewrite as</p><script type="math/tex; mode=display">\begin{aligned}\mathbf{G}\left(\mathbf{r}, \mathbf{r}_0\right)=& \frac{1}{8 \pi^{3} k_{B}^{2}} \iiint \mathrm{d} \mathbf{k}\left(\frac{\mathbf{1} k_{B}^{2}-\mathbf{k} \mathbf{k}}{k^{2}-k_{B}^{2}}+\hat{\mathbf{z}} \hat{\mathbf{z}}\right) \exp (j \mathbf{k} \cdot \mathbf{R}) \\&-\frac{\hat{\mathbf{z}} \hat{\mathbf{z}}}{8 \pi^{3} k_{B}^{2}} \iint \mathrm{d} \mathbf{k} \exp (i \mathbf{k} \cdot \mathbf{R}) \\=& \frac{j}{8 \pi^{2} k_{B}^{2}} \iint \mathrm{d} k_{x} \mathrm{d} k_{y}\left(\frac{\mathbf{1} k_{B}^{2}-\mathbf{k}_{B}\mathbf{k}_{B}}{k_{B z}}\right) \\ & \times \exp \left(j \mathbf{k}_{B} \cdot \mathbf{R}\right)-\frac{\hat{\mathbf{z}} \hat{\mathbf{z}}}{k_{B}^{2}} \delta(\mathbf{R})  \end{aligned}</script><p>where <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.394ex;" xmlns="http://www.w3.org/2000/svg" width="21.21ex" height="4.208ex" role="img" focusable="false" viewBox="0 -1243.8 9374.7 1860"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="TeXAtom" transform="translate(554,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1747.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msqrt" transform="translate(2803.1,0)"><g transform="translate(1020,0)"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mn" transform="translate(554,353.6) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(554,-309.4) scale(0.707)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g></g><g data-mml-node="mo" transform="translate(1362.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(2363.1,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mn" transform="translate(554,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(554,-247) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(3593.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(4594,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mn" transform="translate(554,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(554,-247) scale(0.707)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(0,33.8)"><path data-c="221A" d="M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z"></path></g><rect width="5551.6" height="60" x="1020" y="1123.8"></rect></g></g></g></svg></mjx-container> is the z component of the wave vector and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.018ex;" xmlns="http://www.w3.org/2000/svg" width="1.256ex" height="1.041ex" role="img" focusable="false" viewBox="0 -452 555 460"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D49B" d="M66 -8H60Q34 -8 34 5Q34 9 42 22T70 59T115 110Q162 156 255 229T381 332L389 339H381Q348 332 298 329T212 325T172 321Q168 318 151 318H146Q116 318 116 332Q116 334 118 342Q128 374 154 402Q205 452 265 452Q304 452 352 422T426 392Q441 392 462 421T485 451T508 452H518Q539 452 539 438Q539 431 516 401T458 334Q412 289 312 210Q229 146 191 111L183 103H195Q203 103 213 104T240 107T268 110Q301 114 337 116T391 119T428 123T455 134T469 157Q473 166 495 166Q521 166 525 161Q532 156 528 141Q510 81 456 37T337 -7Q297 -7 251 22T177 52Q154 52 134 38T100 8L88 -7Q86 -8 66 -8Z"></path></g></g></g></svg></mjx-container></p><script type="math/tex; mode=display">\boldsymbol{\mathrm{k}}_B(k_{Bz})=\left\{ \begin{aligned}k_x\boldsymbol{\hat{x}}+k_y\boldsymbol{\hat{y}}+k_z\boldsymbol{\hat{z}} \quad \text{for} \quad z > z_0,\\k_x\boldsymbol{\hat{x}}+k_y\boldsymbol{\hat{y}}-k_z\boldsymbol{\hat{z}} \quad \text{for} \quad z < z_0,\end{aligned}\right.</script><p>Now that we have the plane-wave expansion of the Green’s tensor for an infinite homogeneous background. It is a simple matter to include additional layers. Indeed, the effect of these layers will be to add two plane waves, one propagating upward and one downward, to each Fourier component, The amplitudes of these additional components are determined by the boundary conditions at the different interfaces. Since the Green’s tensor represents the electric field radiated at <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> by three orthogonal point sources at <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.648ex" height="1.742ex" role="img" focusable="false" viewBox="0 -759 728.5 770"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(484,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g></g></svg></mjx-container>, the boundary conditions depend on the polarization of the corresponding Fourier component. It is therefore advantageous to introduce a new orthonormal system<br>$\boldsymbol{\mathrm{\hat{k}}}(k<em>{Bz}),\boldsymbol{\mathrm{\hat{I}}}(k</em>{Bz}),\boldsymbol{\mathrm{\hat{m}}}(k_{Bz})$</p><script type="math/tex; mode=display">\boldsymbol{\mathrm{\hat{k}}}(k_{Bz})=\frac{\boldsymbol{\mathrm{k}}(k_{Bz})}{k_B}=(\hat{k}_x(k_{Bz}),\hat{k}_y(k_{Bz}),\hat{k}_z(k_{Bz}))</script><script type="math/tex; mode=display">\boldsymbol{\mathrm{\hat{I}}}(k_{Bz})=\frac{\boldsymbol{\mathrm{\hat{k}}}(k_{Bz})\times \boldsymbol{\hat{z}}}{|\boldsymbol{\mathrm{\hat{k}}}(k_{Bz})\times \boldsymbol{\hat{z}}|}=(\hat{k}_y(k_{Bz}),-\hat{k}_x(k_{Bz}),0)</script><script type="math/tex; mode=display">\boldsymbol{\mathrm{\hat{m}}}(k_{Bz})=\boldsymbol{\mathrm{\hat{k}}}(k_{Bz})\times\boldsymbol{\mathrm{\hat{I}}}(k_{Bz})=\left(\hat{k}_x(k_{Bz})\hat{k}_z(k_{Bz}),\hat{k}_y(k_{Bz})\hat{k}_z(k_{Bz}),-\left[\hat{k}_x^2(k_{Bz})+\hat{k}_y^2(k_{Bz})\right]\right)</script><p>Equivalently, another orthogonal system is formed by $\boldsymbol{\mathrm{\hat{k}}}(-k<em>{Bz}),\boldsymbol{\mathrm{\hat{I}}}(-k</em>{Bz}),\boldsymbol{\mathrm{\hat{m}}}(-k_{Bz})<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.048ex;" xmlns="http://www.w3.org/2000/svg" width="13.293ex" height="1.618ex" role="img" focusable="false" viewBox="0 -694 5875.7 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(1203.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1669.7,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2547.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3076.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3527.7,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(4048.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4409.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(4985.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5514.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container>\boldsymbol{\mathrm{\hat{I}}}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="36.158ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 15982 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(814,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(1317,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1783,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2234,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(2737,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3203,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3803,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4323,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4668,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(5101,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5673,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(5971,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(6500,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6951,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(7312,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(7797,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(8158,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(8734,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(9200,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(9703,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(10001,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(10530,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(11130,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(11596,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(12116,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(12582,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(13132,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13477,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(14077,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(14543,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(15063,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(15492,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>\boldsymbol{\mathrm{\hat{k}}}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.731ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 1649 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1129,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>\boldsymbol{\mathrm{\hat{z}}}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="9.316ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 4117.7 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(1160.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1736.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2202.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2653.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3119.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3648.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container>\boldsymbol{\mathrm{\hat{m}}}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="30.995ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 13699.7 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(643,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1109,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(1578,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(2294,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2639,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3000,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(3576,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3921,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4521,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4882,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(5458,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5803,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(6272,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(6775,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(7073,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(7602,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8202,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(8668,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(9112.7,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(9861.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10346.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10797.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(11326.7,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(11803.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(12148.7,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(12633.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(13099.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>k_B<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="36.897ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 16308.7 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(805.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1381.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1847.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2313.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2611.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3077.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3510.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3871.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4322.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4667.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(5100.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(5650.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5995.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(6461.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(6759.7,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(7279.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(7712.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(8197.7,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9075.7,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(9578.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10063.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10663.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(11129.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(11729.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(12090.7,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(12593.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(13122.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13573.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(14102.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(14400.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(14698.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(15164.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(15462.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(15823.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g></g></g></svg></mjx-container>\boldsymbol{\mathrm{\hat{I}}}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="44.654ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 19737 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1369,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1820,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2286,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(2755,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(3258,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3743,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4343,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4863,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(5332,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5693,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(6178,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(6647,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(7150,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(7635,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(7933,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(8462,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8913,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9258,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(9723,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(10252,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(10613,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10958,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(11443,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(12043,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(12572,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13172,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(13692,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(14053,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(14629,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(15158,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(15519,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(16022,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(16551,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(17002,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(17531,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(17829,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18127,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(18593,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(18891,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(19252,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g></g></g></svg></mjx-container>\boldsymbol{\mathrm{\hat{m}}}$ corresponds to p polarization, using the fact that</p><script type="math/tex; mode=display">\boldsymbol{\mathrm{\hat{k}}}\boldsymbol{\mathrm{\hat{k}}}+\boldsymbol{\mathrm{\hat{I}}}\boldsymbol{\mathrm{\hat{I}}}+\boldsymbol{\mathrm{\hat{m}}}\boldsymbol{\mathrm{\hat{m}}}=\boldsymbol{\mathrm{1}}</script><p>we can rewrite the Green’s tensor as</p><script type="math/tex; mode=display">\mathbf{G}\left(\mathbf{r}, \mathbf{r}^{\prime}\right)=-\frac{\hat{\mathbf{z}} \hat{\mathbf{z}}}{k_{B}^{2}} \delta(\mathbf{R})+\frac{j}{8\pi^2}\iint \mathrm{d} k_{x} \mathrm{d} k_{y}\left(\frac{\boldsymbol{\mathrm{\hat{I}}}\boldsymbol{\mathrm{\hat{I}}}+\boldsymbol{\mathrm{\hat{m}}}\boldsymbol{\mathrm{\hat{m}}}}{k_{Bz}}\right)\times \exp (j\boldsymbol{\mathrm{k}} \boldsymbol{\cdot R})</script><p>To obtain the Green’s tensor <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.961ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 3518.8 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D406" d="M465 -10Q281 -10 173 88T64 343Q64 413 85 471T143 568T217 631T298 670Q371 697 449 697Q452 697 459 697T470 696Q502 696 531 690T582 675T618 658T644 641T656 632L732 695Q734 697 745 697Q758 697 761 692T765 668V627V489V449Q765 428 761 424T741 419H731H724Q705 419 702 422T695 444Q683 520 631 577T495 635Q364 635 295 563Q261 528 247 477T232 343Q232 296 236 260T256 185T296 120T366 76T472 52Q481 51 498 51Q544 51 573 67T607 108Q608 111 608 164V214H464V276H479Q506 273 680 273Q816 273 834 276H845V214H765V113V51Q765 16 763 8T750 0Q742 2 709 16T658 40L648 46Q592 -10 465 -10Z"></path></g></g><g data-mml-node="mrow" transform="translate(1070.7,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D42B" d="M405 293T374 293T324 312T305 361Q305 378 312 394Q315 397 315 399Q305 399 294 394T266 375T238 329T222 249Q221 241 221 149V62H308V0H298Q280 3 161 3Q47 3 38 0H29V62H98V210V303Q98 353 96 363T83 376Q69 380 42 380H29V442H32L118 446Q204 450 205 450H210V414L211 378Q247 449 315 449H321Q384 449 413 422T442 360Q442 332 424 313Z"></path></g></g><g data-mml-node="mo" transform="translate(863,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1307.7,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D42B" d="M405 293T374 293T324 312T305 361Q305 378 312 394Q315 397 315 399Q305 399 294 394T266 375T238 329T222 249Q221 241 221 149V62H308V0H298Q280 3 161 3Q47 3 38 0H29V62H98V210V303Q98 353 96 363T83 376Q69 380 42 380H29V442H32L118 446Q204 450 205 450H210V414L211 378Q247 449 315 449H321Q384 449 413 422T442 360Q442 332 424 313Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(507,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2059.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></svg></mjx-container> for a stratified medium, we can now superpose to the free-space Green’s tensor of a homogeneous medium <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="1.719ex" height="1.38ex" role="img" focusable="false" viewBox="0 -452 759.7 609.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D700" d="M190 -22Q124 -22 76 11T27 107Q27 174 97 232L107 239L99 248Q76 273 76 304Q76 364 144 408T290 452H302Q360 452 405 421Q428 405 428 392Q428 381 417 369T391 356Q382 356 371 365T338 383T283 392Q217 392 167 368T116 308Q116 289 133 272Q142 263 145 262T157 264Q188 278 238 278H243Q308 278 308 247Q308 206 223 206Q177 206 142 219L132 212Q68 169 68 112Q68 39 201 39Q253 39 286 49T328 72T345 94T362 105Q376 103 376 88Q376 79 365 62T334 26T275 -8T190 -22Z"></path></g><g data-mml-node="mi" transform="translate(499,-150) scale(0.707)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g></g></svg></mjx-container> the additional terms by  formally writing</p><script type="math/tex; mode=display">\begin{aligned}     \mathbf{G}\left(\mathbf{r}, \mathbf{r}^{\prime}\right)=&-\frac{\hat{\mathbf{z}} \hat{\mathbf{z}}}{k_{l}^{2}} \delta(\mathbf{R})+\frac{i}{8 \pi^{2}} \iint \mathrm{d} k_{x} \mathrm{d} k_{y} \exp \left\{j\left[k_{x}\left(x-x_0\right)+k_{y}\left(y-y_0\right)\right]\right\}\frac{1}{k_{l z}}\\    &\left[\hat{\mathbf{I}}\hat{\mathbf{I}} \exp \left(j k_{l z}\left|z-z_0\right|\right)+\mathbf{R}^{s \uparrow} \exp \left(i k_{l z} z\right)+\mathbf{R}^{s \downarrow} \exp \left(-j k_{l z} z\right)\right.\\    &\left.+\hat{\mathbf{m}}\hat{\mathbf{m}} \exp \left(j k_{l z}\left|z-z_0 \right|\right)+\mathbf{R}^{p \uparrow} \exp \left(i k_{l z} z\right)+\mathbf{R}^{p \downarrow} \exp \left(-j k_{l z} z\right)\right]    \end{aligned}</script><p>where $k<em>{l}^2=\omega^2\varepsilon_l\mu_l<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.731ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 1649 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1129,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>k</em>{lz}=\sqrt{k<em>l^2-k_x^2-k_y^2}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="12.425ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 5491.7 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mi" transform="translate(1148.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1724.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2190.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(2551.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3017.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3617.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4086.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(4571.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5022.7,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container>\mathbf{R}^{s \uparrow},\mathbf{R}^{s \downarrow},\mathbf{R}^{p \uparrow},\mathbf{R}^{p \downarrow}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="147.54ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 65212.7 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(962,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1562,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(2047,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2476,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(2961,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3306,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3791,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4363,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4832,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(5130,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5620,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(6049,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(6515,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6860,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7460,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(7821,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(8287,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8738,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(9241,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9692,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(10158,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(10519,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(10985,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(11505,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(12034,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(12503,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(12980,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(13446,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(14046,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(14512,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(14963,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(15492,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(15790,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(16135,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(16600,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(17066,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(17586,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(18037,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(18503,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(19053,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(19351,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(19817,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(20250,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(20611,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(20956,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(21441,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(22041,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(22474,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(22959,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(23425,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(23975,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(24525,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(24870,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(25303,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(25648,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(26114,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(26714,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(27075,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(27544,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(27905,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(28481,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(29010,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(29371,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(29732,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(30261,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(30782,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(31248,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(31593,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(32193,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(32554,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(33039,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(33568,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(34001,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(34434,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(34919,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(35491,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(36091,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(36452,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(36903,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(37369,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(37919,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(38217,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(38683,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(39116,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(39477,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(39822,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(40307,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(40907,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(41376,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(41926,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(42377,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(42862,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(43740,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(44269,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(44567,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(44865,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(45331,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(45903,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(46248,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(46717,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(47078,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(47423,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(48023,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(48500,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(48969,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(49541,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(49992,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(50542,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(51071,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(51504,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(51970,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(52439,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(52883.7,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(53632.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(54117.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(54568.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(54929.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(55505.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(55971.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(56437.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(57009.7,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(57512.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(57810.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(58155.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(58588.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(58933.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(59294.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(59727.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(60256.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(60554.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(60987.7,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(61559.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(61857.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(62386.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(62747.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(63092.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(63577.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(64177.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(64662.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container>\mathbf{G}\left(\mathbf{r}, \mathbf{r}^{\prime}\right)<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="46.156ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 20401 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(706,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1051,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(1520,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2120,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2586,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(3019,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3485,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(3954,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(4423,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(4952,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5403,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5893,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6254,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(6739,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(7172,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(7657,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8257,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(8726,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9071,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(9591,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(10057,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10508,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(10977,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(11443,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(11946,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(12475,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(12926,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(13455,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(13816,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(14282,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(14580,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(15070,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(15431,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(16007,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(16473,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(16834,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(17550,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(18035,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(18468,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(18997,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(19466,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(19932,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container>z&gt;z_0<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.731ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 1649 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1129,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>z&lt;z_0<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="139.867ex" height="2.181ex" role="img" focusable="false" viewBox="0 -759 61821 964"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(910.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1439.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1872.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(2448.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2881.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3366.7,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4244.7,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(4747.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5232.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5832.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(6298.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6898.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(7259.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(7744.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(8294.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(8655.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(9231.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(9697.7,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mi" transform="translate(10483.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10934.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(11400.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msup" transform="translate(11866.7,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(633,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mi" transform="translate(12744.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(13213.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(13574.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(14040.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(14640.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(15109.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(15594.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(16045.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(16390.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(16859.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(17325.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(17897.1,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(18400.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(18851.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(19317.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(19786.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(20255.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(20721.1,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(21241.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(21586.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(22186.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(22547.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(23013.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(23464.1,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(24342.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(24811.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(25296.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(25846.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(26537.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(27537.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(28066.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(28666.6,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(29186.6,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(29911.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(30912,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(31415,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(31900,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(32198,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(32727,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(33178,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(33523,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(33988,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(34454,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(34974,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(35546,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(36049,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(36526,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(37011,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(37356,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(37956,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(38433,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(38962,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(39562,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(40082,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(40602,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(41087,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(41803,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(42403,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(42880,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(43365,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(43710,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(44310,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(44787,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(45290,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(45588,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(46117,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(46717,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(47183,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(47899,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(48428,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(48913,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(49379,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(49848,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(50564,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(50909,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(51270,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(51846,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(52375,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(53253,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(53756,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(54054,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(54399,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(54760,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(55332,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(55852,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(56318,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(56751,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(57236,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(57702,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(58252,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(58802,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(59147,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(59580,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(59925,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(60391,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(60991,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(61352,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g></g></svg></mjx-container>A</em>{l,\alpha\beta}^{s/p},B_{l,\alpha\beta}^{s/p}$</p><script type="math/tex; mode=display">\begin{aligned} G_{\alpha \beta}\left(\mathbf{r}, \mathbf{r}^{\prime}\right)=& \frac{j}{8 \pi^{2}} \iint \mathrm{d} k_{x} \mathrm{d} k_{y} \exp \left\{j\left[k_{x}\left(x-x^{\prime}\right)\right.\right.\\ &\left.\left.+k_{y}\left(y-y^{\prime}\right)\right]\right\} \frac{1}{k_{l z}}\left\{\left[\hat{l}_{\alpha}\left( \pm k_{l z}\right) A_{l, \alpha \beta}^{s} \exp \left(j k_{l z} z\right)\right.\right.\\ &\left.+\hat{l}_{\alpha}\left(\mp k_{l z}\right) B_{l, \alpha \beta}^{s} \exp \left(-j k_{l z} z\right)\right] \hat{l}_{\beta}\left(k_{l z}\right) \\ &+\left[\hat{m}_{\alpha}\left( \pm k_{l z}\right) A_{l, \alpha \beta}^{p} \exp \left(j k_{l z} z\right)\right.\\ &\left.\left.+\hat{m}_{\alpha}\left(\mp k_{l z}\right) B_{l, \alpha \beta}^{p} \exp \left(-j k_{l z} z\right)\right] \hat{m}_{\beta}\left(k_{l z}\right)\right\} \end{aligned} \label{Galphabeta}</script><p>We need express each component of the Green’s tensor and then we can write the field distribution for an arbitrary orientate dipole. And the coefficients can be obtained from the outer layer to the emitting layer. It’s necessary for us to write the explict form of the Green tensor. We write the Green tensor as</p><script type="math/tex; mode=display">G_{\alpha \beta}\left(\mathbf{r}, \mathbf{r}^{\prime}\right)=\frac{j}{8 \pi^{2}}\iint \mathrm{d} k_{x} \mathrm{d} k_{y} \exp \left\{j\left[k_{x}\left(x-x^{\prime}\right)+k_{y}\left(y-y^{\prime}\right)\right]\right\} \frac{1}{k_{l z}}\left[f_{\alpha,\beta}^s+f_{\alpha,\beta}^p\right]</script><p>We need write the explicit form of the tensor,</p><script type="math/tex; mode=display">1-\boldsymbol{\mathrm{\hat{k}}}\boldsymbol{\mathrm{\hat{k}}}=\frac{1}{k_{l}^{2} }\left[\begin{array}{ccc}{k_{l}^{2}-k_{x}^{2}} & {-k_{x} k_{y}} & {\mp k_{x} k_{lz}} \\ {-k_{x} k_{y}} & {k_{l}^{2}-k_{y}^{2}} & {\mp k_{y} k_{lz}} \\ {\mp k_{x} k_{lz}} & {\mp k_{y} k_{lz}} & {k_{l}^{2}-k_{lz}^{2}}\end{array}\right]</script><p>and</p><script type="math/tex; mode=display">\boldsymbol{\mathrm{\hat{I}}}\boldsymbol{\mathrm{\hat{I}}}=\frac{1}{\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{k_{y}^{2}} & {-k_{x} k_{y}} & {0} \\ {-k_{x} k_{y}} & {k_{x}^{2}} & {0} \\ {0} & {0} & {0}\end{array}\right]</script><script type="math/tex; mode=display">\boldsymbol{\mathrm{\hat{m}}}\boldsymbol{\mathrm{\hat{m}}}=\frac{1}{k_{l}^{2}\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{k_{x}^{2} k_{lz}^2} & {k_{x} k_{y} k_{lz}^2} & {\mp k_{x}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} \\ {k_{x} k_{y} k_{lz}^2} & {k_{y}^{2} k_{lz}^2} & {\mp k_{lz}k_{y}\left(k_{x}^{2}+k_{y}^{2}\right)} \\ {\mp k_{x}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} & {\mp k_{lz} k_{y}\left(k_{x}^{2}+k_{y}^{2}\right)} & {\left(k_{x}^{2}+k_{y}^{2}\right)^{2}}\end{array}\right]</script><p>Since the definition in the [] let the sign attached to $A<em>l,B</em>{l}$, then</p><script type="math/tex; mode=display">\boldsymbol{f^s}=\frac{1}{\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{k_{y}^{2}} & {-k_{x} k_{y}} & {0} \\ {-k_{x} k_{y}} & {k_{x}^{2}} & {0} \\ {0} & {0} & {0}\end{array}\right]\odot \left(\boldsymbol{A}_{l}^s\exp(jk_{lz}z))+\boldsymbol{B}_{l}^s\exp(-jk_{lz}z)\right)</script><script type="math/tex; mode=display">\begin{aligned}    \boldsymbol{f^p}&=\frac{1}{k_{l}^{2}\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{\pm k_{x}^{2} k_{lz}^2} & \pm {k_{x} k_{y} k_{lz}^2} & \mp{k_{x}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     \pm {k_{x} k_{y} k_{lz}^2} & \pm {k_{y}^{2} k_{lz}^2} & \mp{ k_{y}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     { - k_{x}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} & - { k_{y}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} &  {\left(k_{x}^{2}+k_{y}^{2}\right)^{2} }\end{array}\right]\odot \boldsymbol{A}_{l}^p\exp(jk_{lz}z))\\    &+\frac{1}{k_{l}^{2}\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{\mp k_{x}^{2} k_{lz}^2} & \mp {k_{x} k_{y} k_{lz}^2} & \pm{k_{x}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     \mp {k_{x} k_{y} k_{lz}^2} & \mp {k_{y}^{2} k_{lz}^2} & \pm{ k_{y}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     { - k_{x}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} & - { k_{y}k_{lz}\left(k_{x}^{2}+k_{y}^{2}\right)} &  {\left(k_{x}^{2}+k_{y}^{2}\right)^{2} }\end{array}\right]\odot \boldsymbol{B}_{l}^p\exp(-jk_{lz}z)\end{aligned}</script><p>Here <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.188ex;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.507ex" role="img" focusable="false" viewBox="0 -583 778 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2299" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM682 250Q682 322 649 387T546 497T381 542Q272 542 184 459T95 250Q95 132 178 45T389 -42Q515 -42 598 45T682 250ZM311 250Q311 285 332 304T375 328Q376 328 382 328T392 329Q424 326 445 305T466 250Q466 217 445 195T389 172Q354 172 333 195T311 250Z"></path></g></g></g></svg></mjx-container> means the multiply of the corresponding elements in each matrix. We now need calculate the accurate expression of the $A<em>{\alpha,\beta}^{s/p},A</em>{\alpha,\beta}^{s/p}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="20.044ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 8859.7 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(789.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1389.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1750.7,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(2326.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2792.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3258.7,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4136.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4481.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4842.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(5203.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5548.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6148.7,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(6625.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(6923.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(7452.7,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7942.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(8408.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>A<em>{\alpha,\beta}^{s/p},A</em>{\alpha,\beta}^{s/p}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="180.779ex" height="2.181ex" role="img" focusable="false" viewBox="0 -759 79904.5 964"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1045,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1530,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2102,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2400,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(2920,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3265,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3865,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(4298,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(4596,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5168,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(5688,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(6154,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6515,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(7091,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(7557,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(8077,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8422,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(8925,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9410,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="msup" transform="translate(9708,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(499,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mi" transform="translate(10451.5,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(10920.5,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(11349.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(11878.5,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(12311.5,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(12832.5,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(13309.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13760.5,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(14245.5,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(14817.5,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(15417.5,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(15937.5,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(16440.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(16969.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(17420.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(17781.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(18310.5,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(18910.5,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(19430.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(19791.5,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(20367.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(20833.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(21284.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(21750.5,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(22300.5,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(22598.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(23064.5,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(23497.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(23858.5,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(24203.5,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(24803.5,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(25280.5,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(25783.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(26312.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(26763.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(27124.5,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(27674.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(28125.5,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(28610.5,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(29488.5,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(29973.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(30334.5,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(30910.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(31376.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(31827.5,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(32125.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(32654.5,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(33144.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(33610.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(34061.5,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(34530.5,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(34975.1,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mi" transform="translate(35679.1,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(36255.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(36721.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(37082.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(37567.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(37928.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(38457.1,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(38755.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(39206.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(39672.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(40222.1,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(40520.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(40986.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(41419.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(41780.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(42125.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(42610.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(43210.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(43643.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(44128.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(44594.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(45144.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(45694.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(46039.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(46472.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(46817.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(47283.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(47883.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(48244.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(48713.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(49146.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(49675.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(50275.1,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(50704.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(51170.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(51603.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(52132.1,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(52430.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(52863.1,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(53435.1,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(53733.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(54262.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(54623.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(55089.1,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(55609.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(55954.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(56315.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(56781.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(57232.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(57761.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(58122.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(58467.1,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(58952.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(59418.1,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(59716.1,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(60206.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(60756.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(61207.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(61692.1,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(62570.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(62931.1,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(63507.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(63973.1,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(64458.1,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(65030.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(65391.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(65857.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(66308.1,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(66606.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(67135.1,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(67625.1,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(68091.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(68542.1,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(68986.8,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(69735.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(70220.8,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(70671.8,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(71032.8,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(71608.8,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(72074.8,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(72577.8,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(73080.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(73565.8,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(73863.8,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(74392.8,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(74843.8,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(75188.8,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mi" transform="translate(75653.8,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(76182.8,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(76543.8,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(76888.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(77373.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(77973.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(78418.5,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(78968.5,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(79453.5,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>\beta \neq z$</p><script type="math/tex; mode=display">A_{0,\alpha \beta}^{p\uparrow/\downarrow}=\pm R^{p\downarrow}_{0,\alpha\beta}\frac{R^{p\uparrow}_{0,\alpha\beta}\exp(-jk_{0z}z_0)-\exp(jk_{0z}z_0)}{1-R^{p\downarrow}_{0,\alpha\beta}R^{p\uparrow}_{0,\alpha\beta}}\pm\Theta(z-z_0)\exp(-jk_{0z}z_0)</script><script type="math/tex; mode=display">B_{l,\alpha \beta}^{p\uparrow/\downarrow}=\mp R^{p\uparrow}_{0,\alpha\beta}\frac{R^{p\downarrow}_{0,\alpha\beta}\exp(jk_{0z}z_0)-\exp(-jk_{0z}z_0)}{1-R^{p\downarrow}_{0,\alpha\beta}R^{p\uparrow}_{0,\alpha\beta}}\mp \Theta(z_0-z)\exp(jk_{0z}z_0)</script><p>with <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="5.35ex" height="2.034ex" role="img" focusable="false" viewBox="0 -705 2364.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g><g data-mml-node="mo" transform="translate(843.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1899.6,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g></svg></mjx-container></p><script type="math/tex; mode=display">A_{l,\alpha \beta}^{p\uparrow/\downarrow}= R^{p\downarrow}_{0,\alpha\beta}\frac{R^{p\uparrow}_{0,\alpha\beta}\exp(-jk_{0z}z_0)+\exp(jk_{0z}z_0)}{1-R^{p\downarrow}_{0,\alpha\beta}R^{p\uparrow}_{0,\alpha\beta}}+\Theta(z-z_0)\exp(-jk_{0z}z_0)</script><script type="math/tex; mode=display">B_{l,\alpha \beta}^{p\uparrow/\downarrow}= R^{p\uparrow}_{0,\alpha\beta}\frac{R^{p\downarrow}_{0,\alpha\beta}\exp(jk_{0z}z_0)+\exp(-jk_{0z}z_0)}{1-R^{p\downarrow}_{0,\alpha\beta}R^{p\uparrow}_{0,\alpha\beta}}+ \Theta(z_0-z)\exp(jk_{0z}z_0)</script><p>For the s polarization</p><script type="math/tex; mode=display">A_{l,\alpha \beta}^{s\uparrow/\downarrow}= R^{s\downarrow}_{0,\alpha\beta}\frac{R^{s\uparrow}_{0,\alpha\beta}\exp(-jk_{0z}z_0)+\exp(jk_{0z}z_0)}{1-R^{s\downarrow}_{0,\alpha\beta}R^{s\uparrow}_{0,\alpha\beta}}+\Theta (z-z_0)\exp(-jk_{0z}z_0)</script><script type="math/tex; mode=display">B_{l,\alpha \beta}^{s\uparrow/\downarrow}= R^{s\uparrow}_{0,\alpha\beta}\frac{R^{s\downarrow}_{0,\alpha\beta}\exp(jk_{0z}z_0)+\exp(-jk_{0z}z_0)}{1-R^{s\downarrow}_{0,\alpha\beta}R^{s\uparrow}_{0,\alpha\beta}}+ \Theta (z_0-z)\exp(jk_{0z}z_0)</script><p>In above expressions, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.048ex;" xmlns="http://www.w3.org/2000/svg" width="6.304ex" height="2.069ex" role="img" focusable="false" viewBox="0 -893.3 2786.5 914.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="TeXAtom" transform="translate(792,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(469,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(969,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1472,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(1750,0)"><g data-mml-node="text"><path data-c="2191" d="M27 414Q17 414 17 433Q17 437 17 439T17 444T19 447T20 450T22 452T26 453T30 454T36 456Q80 467 120 494T180 549Q227 607 238 678Q240 694 251 694Q259 694 261 684Q261 677 265 659T284 608T320 549Q340 525 363 507T405 479T440 463T467 455T479 451Q483 447 483 433Q483 413 472 413Q467 413 458 416Q342 448 277 545L270 555V-179Q262 -193 252 -193H250H248Q236 -193 230 -179V555L223 545Q192 499 146 467T70 424T27 414Z"></path></g><g data-mml-node="text" transform="translate(500,0)"><path data-c="2193" d="M473 86Q483 86 483 67Q483 63 483 61T483 56T481 53T480 50T478 48T474 47T470 46T464 44Q428 35 391 14T316 -55T264 -168Q264 -170 263 -173T262 -180T261 -184Q259 -194 251 -194Q242 -194 238 -176T221 -121T180 -49Q169 -34 155 -21T125 2T95 20T67 33T44 42T27 47L21 49Q17 53 17 67Q17 87 28 87Q33 87 42 84Q158 52 223 -45L230 -55V312Q230 391 230 482T229 591Q229 662 231 676T243 693Q244 694 251 694Q264 692 270 679V-55L277 -45Q307 1 353 33T430 76T473 86Z"></path></g></g></g></g></g></g></svg></mjx-container> are the total reflections in the emitting layer, we define the reflection coefficients in the upper space for each interface as</p><script type="math/tex; mode=display">R_{l,\alpha\beta}^{p\uparrow}=\frac{B_{l,\alpha\beta}^{p\uparrow}}{A_{l,\alpha\beta}^{p\uparrow}},R_{l,\alpha\beta}^{s\uparrow}=\frac{B_{l,\alpha\beta}^{s\uparrow}}{A_{l,\alpha\beta}^{s\uparrow}}</script><p>the same with the lower space</p><script type="math/tex; mode=display">R_{l}^{p\downarrow}=\frac{A_{l}^{p\downarrow}}{B_{l}^{p\downarrow}},R_{l}^{s\downarrow}=\frac{A_{l}^{s\downarrow}}{B_{l}^{s\downarrow}}</script><p>the reflections can be calculated iteratively from the outer layer</p><script type="math/tex; mode=display">R_{l,\alpha\beta}^{s/p,\uparrow}=\frac{R_{l+1,\alpha\beta}^{s/p,\uparrow}e^{-j(k_{(l+1)z}-k_{lz})d_{l+1}}+R_{l(l+1)}^{s/p}e^{j(k_{(l+1)z}+k_{lz})d_{l+1}}}{R_{l+1,\alpha\beta}^{s/p,\uparrow}R_{l(l+1)}^{s/p}e^{-j(k_{(l+1)z}+k_{lz})d_{l+1}}+e^{j(k_{(l+1)z}-k_{lz})d_{l+1}}}</script><script type="math/tex; mode=display">R_{l,\alpha\beta}^{s/p,\downarrow}=\frac{R_{l-1,\alpha\beta}^{s/p,\downarrow}e^{j(k_{(l-1)z}-k_{lz})d_{l}}+R_{l(l-1)}^{s/p}e^{-j(k_{(l-1)z}+k_{lz})d_{l}}}{R_{l-1,\alpha\beta}^{s/p,\downarrow}R_{l(l-1)}^{s/p}e^{j(k_{(l-1)z}+k_{lz})d_{l}}+e^{-j(k_{(l-1)z}-k_{lz})d_{l}}}</script><p>where</p><script type="math/tex; mode=display">R_{l(l-1)}^{p}=\frac{\varepsilon_{l-1} k_{l z}-\varepsilon_{l} k_{l-1, z}}{\varepsilon_{l} k_{(l-1) z}+\varepsilon_{l-1} k_{l z}}=-R_{(l-1) l}^{p} \quad R_{l(l-1)}^{s}=\frac{k_{l z}-k_{(l-1) z}}{k_{(l-1) z}+k_{l z}}=-R_{(l-1) l}^{s}</script><p>and</p><script type="math/tex; mode=display">T_{l(l-1)}^{p}=\frac{2\varepsilon_{l-1} k_{l z}}{\varepsilon_{l} k_{(l-1) z}+\varepsilon_{l-1} k_{l z}}=1+R_{l(l-1) }^{p} \quad T_{l(l-1)}^{s}=\frac{2k_{l z}}{k_{(l-1) z}+k_{l z}}=1+R_{l(l-1)}^{s}</script><p>So we can calculate the coefficients in the emitting layer, and the coefficients in other can be calculated via the transmission matrix.</p><h2 id="In-the-upper-space"><a href="#In-the-upper-space" class="headerlink" title="In the upper space"></a>In the upper space</h2><script type="math/tex; mode=display">A_{l+1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[A_{l,\alpha\beta}^{s/p}e^{j(k_{lz}-k_{(l+1)z})d_{l+1}}+R_{(l+1)l}^{s/p}B_{l,\alpha\beta}^{s/p} e^{-j(k_{lz}+k_{(l+1)z})d_{l+1}}\right]</script><script type="math/tex; mode=display">B_{l+1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[R_{(l+1)l}^{s/p}A_{l,\alpha\beta}^{s/p}e^{j(k_{lz}+k_{(l+1)z})d_{l+1}}+B_{l,\alpha\beta}^{s/p} e^{-j(k_{lz}-k_{(l+1)z})d_{l+1}}\right]</script><p>where</p><script type="math/tex; mode=display">\gamma^{s}=\frac{1}{2}\frac{k_{lz}+k_{(l+1)z}}{k_{lz}}=\frac{1}{1-R^{s}_{(l+1)l}}</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l+1}+\varepsilon_{l}k_{(l+1)z}}{k_{(l+1)z}\varepsilon_{l}}=\frac{1}{1+R^{p}_{(l+1)l}},\quad \text {for } \quad \beta=x,y,\quad\alpha=x,y,z</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l+1}+\varepsilon_{l}k_{lz}}{k_{lz}\varepsilon_{l+1}}=\frac{k_{(l+1)z}}{k_{lz}}\frac{1}{1+R^{p}_{(l+1)l}},\quad \text {for } \quad \beta=z, \quad\alpha=x,y,z</script><h2 id="In-the-lower-space"><a href="#In-the-lower-space" class="headerlink" title="In the lower space"></a>In the lower space</h2><script type="math/tex; mode=display">A_{l-1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[A_{l,\alpha\beta}^{s/p}e^{j(k_{lz}-k_{(l-1)z})d_{l}}+R_{(l-1)l}^{s/p}B_{l,\alpha\beta}^{s/p} e^{-j(k_{lz}+k_{(l-1)z})d_{l}}\right]</script><script type="math/tex; mode=display">B_{l-1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[R_{(l-1)l}^{s/p}A_{l,\alpha\beta}^{s/p}e^{j(k_{lz}+k_{(l-1)z})d_{l}}+B_{l,\alpha\beta}^{s/p} e^{-j(k_{lz}-k_{(l-1)z})d_{l}}\right]</script><p>where</p><script type="math/tex; mode=display">\gamma^{s}=\frac{1}{2}\frac{k_{lz}+k_{(l-1)z}}{k_{lz}}=\frac{1}{1-R^{s}_{(l-1)l}}</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l-1}+\varepsilon_{l}k_{(l-1)z}}{k_{(l-1)z}\varepsilon_{l}}=\frac{1}{1+R^{p}_{(l-1)l}},\quad \text {for } \quad \beta=x,y,\quad\alpha=x,y,z</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l-1}+\varepsilon_{l}k_{(l-1)z}}{k_{lz}\varepsilon_{l}}=\frac{k_{(l-1)z}}{k_{lz}}\frac{1}{1+R^{p}_{(l-1)l}},\quad \text {for } \quad \beta=z, \quad\alpha=x,y,z</script><h1 id="The-field-expression-and-emission-pattern"><a href="#The-field-expression-and-emission-pattern" class="headerlink" title="The field expression and emission pattern"></a>The field expression and emission pattern</h1><p>The Green’s tensor can be obtained in previous section, the electric field and magnetic field can be obtained from the Green’s tensor via</p><script type="math/tex; mode=display">\vec{E}(r)=j\omega\mu_0 \boldsymbol{\overset\leftrightarrow{G}}(\boldsymbol{r},\boldsymbol{r}_0)\boldsymbol{p}=j\omega\mu_0 \left(\boldsymbol{\overset\leftrightarrow{I}}+\frac{\nabla \nabla}{k^{2}}\right) G_0(\boldsymbol{r},\boldsymbol{r}_0)\boldsymbol{p}</script><script type="math/tex; mode=display">\vec{H}(r)=\nabla \times \left(\boldsymbol{\overset\leftrightarrow{G}}(\boldsymbol{r},\boldsymbol{r}_0)\boldsymbol{p}\right)=\nabla \times \left(\boldsymbol{\overset\leftrightarrow{I}}+\frac{\nabla \nabla}{k^{2}}\right) G_0(\boldsymbol{r},\boldsymbol{r}_0)\boldsymbol{p}=\nabla \times G_0(\boldsymbol{r},\boldsymbol{r}_0)\boldsymbol{p}</script><p>And we can write the electric field as</p><script type="math/tex; mode=display">E(r)=\iint \boldsymbol{E}^{s}(k_x,k_y,k_z)+\boldsymbol{E}^{p}(k_x,k_y,k_z)\mathrm{d}k_x\mathrm{d}k_y</script><p>The far field <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="3.457ex" height="1.895ex" role="img" focusable="false" viewBox="0 -680 1528.1 837.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="TeXAtom" transform="translate(771,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g></g></g></svg></mjx-container> observed in the direction of the dimensionless unit vector</p><script type="math/tex; mode=display">\boldsymbol{s}=(s_x,s_y,s_z)=(\boldsymbol{\frac{x}{r}},\boldsymbol{\frac{y}{r}},\boldsymbol{\frac{z}{r}})=(\frac{k_x}{k},\frac{k_y}{k},\frac{k_z}{k})</script><p>is determined by the Fourier spectrum <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="12.181ex" height="2.364ex" role="img" focusable="false" viewBox="0 -750 5384.1 1045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D46C" d="M257 618H231Q198 618 198 636Q202 672 214 678L219 680H811Q817 677 820 673T824 666L825 664Q825 659 814 549T799 433Q793 424 771 424Q752 424 746 427T740 441Q740 445 742 466T744 505Q744 561 722 585T646 616Q639 617 545 618H456Q456 617 427 502T398 385Q398 384 435 384Q461 385 471 385T499 391T526 405T545 433T562 478Q566 494 571 497T595 501H604Q622 501 626 486Q626 482 593 349T557 213Q552 205 530 205Q499 205 499 219Q499 222 503 242T508 281Q508 308 491 314T429 322Q425 322 423 322H382L317 64Q317 62 390 62Q460 62 493 64T569 80T640 124Q665 149 686 187T719 253T733 283Q739 289 760 289Q791 289 791 274Q791 267 763 201T706 71L678 8Q676 4 667 0H58Q47 5 43 15Q47 54 60 60Q64 62 113 62H162L163 66Q163 67 231 341T301 616Q301 618 257 618Z"></path></g><g data-mml-node="mo" transform="translate(825,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1214,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(554,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(2222.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2667.1,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(554,-150) scale(0.707)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(3617.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(4062.3,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(554,-150) scale(0.707)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><g data-mml-node="mo" transform="translate(4995.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> as <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.2ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2298.6 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(742.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1798.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container> as</p><script type="math/tex; mode=display">\boldsymbol{E}_{\infty}(s_x,s_y)=-iks_z \boldsymbol{E}(ks_x,ks_y;0)\frac{e^{ikr}}{r}</script><p>In the far field , the magnetic field vector is transverse to the electric field vector and the time-averaged Poynting vectors is<br>calculated as </p><script type="math/tex; mode=display">\langle \boldsymbol{S}\rangle =\frac{1}{2}\text{Re}\{\boldsymbol{E}\times \boldsymbol{H}\}=\frac{1}{2}\sqrt{\frac{\epsilon_0\varepsilon_l}{\mu_0\mu_l}}(\boldsymbol{E}\cdot \boldsymbol{E}^{*})\cdot\boldsymbol{n}_{r}</script><p>Since the s and p polarized field are orthogonal, then we can express the far field power as</p><script type="math/tex; mode=display">\begin{aligned}    &\iint \frac{1}{2}\sqrt{\frac{\epsilon_0\varepsilon_l}{\mu_0\mu_l}}(\boldsymbol{E_{\infty}}\cdot \boldsymbol{E_{\infty}}^{*})\cdot\boldsymbol{n}_{r}\cdot r^2\sin\theta \mathrm{d}\theta \mathrm{d}\phi\\    =&\iint \frac{1}{2}\sqrt{\frac{\epsilon_0\varepsilon_l}{\mu_0\mu_l}}k_z^2 |\boldsymbol{E}(ks_x,ks_y;0)\cdot\boldsymbol{n}_{r}|^2 \cdot \sin\theta \mathrm{d} \theta \mathrm{d}\phi\\    =& \frac{1}{2}\sqrt{\frac{\epsilon_0\varepsilon_l}{\mu_0\mu_l}}\iint \left(|\boldsymbol{E}|^2_s+|\boldsymbol{E}|^2_p \right)k^2\cos^2\theta \cdot \mathrm{d}\Omega\\    =& \iint I(\theta,\phi)\mathrm{d}\Omega\end{aligned}</script><p>where the emission pattern is</p><script type="math/tex; mode=display">I(\theta,\phi)=\frac{1}{2}\sqrt{\frac{\epsilon_0\varepsilon_l}{\mu_0\mu_l}}\left(|\boldsymbol{E}|^2_s+|\boldsymbol{E}|^2_p \right)k^2\cos^2\theta</script><h1 id="Numerical-Implementation"><a href="#Numerical-Implementation" class="headerlink" title="Numerical Implementation"></a>Numerical Implementation</h1><p>Our previous expressions are not suitable for numerical implementation since there are maximum numbers in the exponent. To let is more applicable we rewrite the expressions. We define in the upper space</p><script type="math/tex; mode=display">\widehat{A}_{l,\alpha\beta}^{s/p}=A_{l,\alpha\beta}^{s,p}\exp(jk_{lz}d_{l+1}),\quad \widehat{B}_{l,\alpha\beta}^{s/p}=B_{l,\alpha\beta}^{s,p}\exp(-jk_{lz}d_{l+1})</script><p>and in the lower space</p><script type="math/tex; mode=display">\widehat{A}_{l,\alpha\beta}^{s/p}=A_{l,\alpha\beta}^{s,p}\exp(jk_{lz}d_{l}),\quad \widehat{B}_{l,\alpha\beta}^{s/p}=B_{l,\alpha\beta}^{s,p}\exp(-jk_{lz}d_{l})</script><p>If we use these expression, The green tensor should be</p><script type="math/tex; mode=display">\begin{equation}\begin{aligned}G_{\alpha \beta}\left(\mathbf{r}, \mathbf{r}^{\prime}\right)=& \frac{j}{8 \pi^{2}} \iint \mathrm{d} k_{x} \mathrm{d} k_{y} \exp \left\{j\left[k_{x}\left(x-x^{\prime}\right)\right.\right. \\&\left.\left.+k_{y}\left(y-y^{\prime}\right)\right]\right\} \frac{1}{k_{l z}}\left\{\left[\hat{l}_{\alpha}\left( \pm k_{l z}\right) \widehat{A}_{l, \alpha \beta}^{s} \exp \left(j k_{l z} (z-z_{l})\right)\right.\right. \\&\left.+\hat{l}_{\alpha}\left(\mp k_{l z}\right) \widehat{B}_{l, \alpha \beta}^{s} \exp \left(-j k_{l z} (z-z_{l})\right)\right] \hat{l}_{\beta}\left(k_{l z}\right) \\&+\left[\hat{m}_{\alpha}\left( \pm k_{l z}\right) \widehat{A}_{l, \alpha \beta}^{p} \exp \left(j k_{l z} (z-z_{l})\right)\right.\\&\left.\left.+\hat{m}_{\alpha}\left(\mp k_{l z}\right) \widehat{B}_{l, \alpha \beta}^{p} \exp \left(-j k_{l z} (z-z_{l})\right)\right] \hat{m}_{\beta}\left(k_{l z}\right)\right\}\end{aligned}\end{equation}</script><p>where $z<em>{l}=d</em>{l+1}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="3.362ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 1486 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(550,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1035,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>z&gt;z<em>0<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.731ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 1649 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1129,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>z</em>{l}=d_{l}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="3.362ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 1486 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(550,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1035,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>z&lt;z_0$. The coefficients relation between different layers can be rewritten as</p><h2 id="In-the-upper-space-1"><a href="#In-the-upper-space-1" class="headerlink" title="In the upper space"></a>In the upper space</h2><script type="math/tex; mode=display">\widehat{A}_{l+1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[\widehat{A}_{l,\alpha\beta}^{s/p}e^{jk_{lz}(d_{l+1}-d_{l})}+R_{(l+1)l}^{s/p}\widehat{B}_{l,\alpha\beta}^{s/p} e^{-jk_{lz}(d_{l+1}-d_{l})}\right]</script><script type="math/tex; mode=display">\widehat{B}_{l+1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[R_{(l+1)l}^{s/p}\widehat{A}_{l,\alpha\beta}^{s/p}e^{jk_{lz}(d_{l+1}-d_{l})}+\widehat{B}_{l,\alpha\beta}^{s/p}e^{-jk_{lz}(d_{l+1}-d_{l})}\right]</script><p>where</p><script type="math/tex; mode=display">\gamma^{s}=\frac{1}{2}\frac{k_{lz}+k_{(l+1)z}}{k_{lz}}=\frac{1}{1-R^{s}_{(l+1)l}}</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l+1}+\varepsilon_{l}k_{(l+1)z}}{k_{(l+1)z}\varepsilon_{l}}=\frac{1}{1+R^{p}_{(l+1)l}},\quad \text {for } \quad \beta=x,y,\quad\alpha=x,y,z</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l+1}+\varepsilon_{l}k_{lz}}{k_{lz}\varepsilon_{l+1}}=\frac{k_{(l+1)z}}{k_{lz}}\frac{1}{1+R^{p}_{(l+1)l}},\quad \text {for } \quad \beta=z, \quad\alpha=x,y,z</script><h2 id="In-the-lower-space-1"><a href="#In-the-lower-space-1" class="headerlink" title="In the lower space"></a>In the lower space</h2><script type="math/tex; mode=display">\widehat{A}_{l-1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[\widehat{A}_{l,\alpha\beta}^{s/p}e^{jk_{lz}(d_{l}-d_{l-1})}+R_{(l-1)l}^{s/p}\widehat{B}_{l,\alpha\beta}^{s/p} e^{-jk_{lz}(d_{l}-d_{l-1})}\right]</script><script type="math/tex; mode=display">\widehat{B}_{l-1,\alpha\beta}^{s/p}=\gamma^{s/p}\left[R_{(l-1)l}^{s/p}\widehat{A}_{l,\alpha\beta}^{s/p}e^{jk_{lz}(d_{l}-d_{l-1})}+\widehat{B}_{l,\alpha\beta}^{s/p} e^{-jk_{lz}(d_{l}-d_{l-1})}\right]</script><p>where</p><script type="math/tex; mode=display">\gamma^{s}=\frac{1}{2}\frac{k_{lz}+k_{(l-1)z}}{k_{lz}}=\frac{1}{1-R^{s}_{(l-1)l}}</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l-1}+\varepsilon_{l}k_{(l-1)z}}{k_{(l-1)z}\varepsilon_{l}}=\frac{1}{1+R^{p}_{(l-1)l}},\quad \text {for } \quad \beta=x,y,\quad\alpha=x,y,z</script><script type="math/tex; mode=display">\gamma^{p}=\frac{1}{2}\frac{k_{lz}\varepsilon_{l-1}+\varepsilon_{l}k_{(l-1)z}}{k_{lz}\varepsilon_{l}}=\frac{k_{(l-1)z}}{k_{lz}}\frac{1}{1+R^{p}_{(l-1)l}},\quad \text {for } \quad \beta=z, \quad\alpha=x,y,z</script><h1 id="Relations-of-amplitudes-in-different-layers"><a href="#Relations-of-amplitudes-in-different-layers" class="headerlink" title="Relations of amplitudes in different layers"></a>Relations of amplitudes in different layers</h1><p>In this section , I will complete the derivations of the relations of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex;" xmlns="http://www.w3.org/2000/svg" width="4.34ex" height="2.245ex" role="img" focusable="false" viewBox="0 -705 1918.3 992.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="TeXAtom" transform="translate(819,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(640,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g></g></g></g></g></svg></mjx-container> in different layers. The boundary conditions in each interface can be written as</p><script type="math/tex; mode=display">\widehat{z}\times\left(\mathbf{G}^{+}-\mathbf{G}^{-}\right)=\mathbf{0}</script><script type="math/tex; mode=display">\widehat{z}\cdot\left(\boldsymbol{\varepsilon}^{+} \mathbf{G}^{+}-\boldsymbol{\varepsilon}^{-}\mathbf{G}^{-}\right)=\mathbf{0}</script><script type="math/tex; mode=display">\widehat{z}\times\mathbf{\nabla}\times \left(\frac{\mathbf{G}^{+}}{\mu_+}-\frac{\mathbf{G}^{-}}{\mu_{-}}\right)=\mathbf{0}</script><script type="math/tex; mode=display">\widehat{z}\cdot\mathbf{\nabla} \times\left(\mathbf{G}^{+}-\mathbf{G}^{-}\right)=\mathbf{0}</script><p>For convenience we need write the Green’s tensor into a more simple from which can be used to express the boundary conditions. We can express the total green tensor as</p><script type="math/tex; mode=display">\mathbf{G}=\frac{j}{8 \pi^{2}}\iint \mathrm{d} k_{x} \mathrm{d} k_{y} \exp \left\{j\left[k_{x}\left(x-x^{\prime}\right)+k_{y}\left(y-y^{\prime}\right)\right]\right\}\left[F_{A}\odot A \cdot e^{jk_{lz}z}+F_{B}\odot B \cdot e^{-jk_{lz}z}\right]</script><p>where $F<em>{A/B}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="53.261ex" height="2.084ex" role="img" focusable="false" viewBox="0 -716 23541.3 921"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(814,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1175,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1751,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2217,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2650,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3135,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3601,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(4151,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(4701,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5046,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(5479,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5824,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(6290,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6890,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(7251,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(7720,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(8149,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(8615,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(9165,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(9650,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10101,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(10567,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(11317,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(11761.7,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(12520.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mi" transform="translate(12965.3,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(13610.3,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13955.3,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(14555.3,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(14988.3,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(15454.3,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(15939.3,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(16539.3,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(16837.3,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(17327.3,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(17688.3,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(18264.3,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(18730.3,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(19163.3,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(19648.3,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(20526.3,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(21029.3,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(21514.3,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(22114.3,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(22580.3,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(23180.3,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container>k</em>{lz},k<em>{l}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="43.85ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 19381.7 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(814,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1265,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1731,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2029,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2558,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(2919,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3385,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(3905,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(4266,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(4751,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5629,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(6158,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6519,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(6985,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7436,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7781,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(8310,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(8608,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(9111,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9562,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(10047,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(10550,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(11016,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(11467,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(11828,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(12173,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(12639,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(13108,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(13552.7,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(14268.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(14734.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(15167.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(15652.7,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(16224.7,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(16522.7,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(17042.7,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(17758.7,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(18209.7,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(18554.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(18915.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container>F</em>{A/B}$ in a more simple form as </p><script type="math/tex; mode=display">F_{A/B}=U_{A/B}\cdot V_{A/B}</script><p>where $U<em>{A/B}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="36.238ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 16017 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1518,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(1879,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(2408,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2753,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3353,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(3822,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(4307,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4907,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(5205,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5695,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6056,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(6632,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(7098,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(7531,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(8016,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(8482,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(9032,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(9582,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(9927,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(10360,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(10705,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(11171,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(11771,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(12132,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(12601,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(13317,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13662,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(14023,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(14599,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(15084,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(15656,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container>k</em>{lz},\varepsilon$. We write the explicit form for each as follows.</p><h2 id="S-polarized-light-upper-lower-layer"><a href="#S-polarized-light-upper-lower-layer" class="headerlink" title="S polarized light upper/lower layer"></a>S polarized light upper/lower layer</h2><script type="math/tex; mode=display">U_{A/B}^{s\uparrow\downarrow}=\frac{1}{\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{k_{y}^{2}} & {-k_{x} k_{y}} & {0} \\ {-k_{x} k_{y}} & {k_{x}^{2}} & {0} \\ {0} & {0} & {0}\end{array}\right],V_{A/B}^{s\uparrow\downarrow}=\left[\begin{array}{ccc}{1} & {1} & {1} \\ {1} & {1} & {1}\\ {1} & {1} & {1}\end{array}\right]\frac{1}{k_{lz}}</script><h2 id="P-polarized-light-upper-lower-layer"><a href="#P-polarized-light-upper-lower-layer" class="headerlink" title="P polarized light upper/lower layer"></a>P polarized light upper/lower layer</h2><script type="math/tex; mode=display">\begin{aligned}U_{A}^{p\uparrow\downarrow}&=\frac{1}{\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{\pm k_{x}^{2} } & \pm {k_{x} k_{y} } & \mp{k_{x}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     \pm {k_{x} k_{y} } & \pm {k_{y}^{2} } & \mp{ k_{y}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     { - k_{x}\left(k_{x}^{2}+k_{y}^{2}\right)} & - { k_{y}\left(k_{x}^{2}+k_{y}^{2}\right)} &  {\left(k_{x}^{2}+k_{y}^{2}\right)^{2} }\end{array}\right]\\U_{B}^{p\uparrow\downarrow}&=\frac{1}{\left(k_{x}^{2}+k_{y}^{2}\right)}\left[\begin{array}{ccc}{\pm k_{x}^{2} } & \pm {k_{x} k_{y} } & \mp{k_{x}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     \pm {k_{x} k_{y} } & \pm {k_{y}^{2} } & \mp{ k_{y}\left(k_{x}^{2}+k_{y}^{2}\right)} \\     { - k_{x}\left(k_{x}^{2}+k_{y}^{2}\right)} & - { k_{y}\left(k_{x}^{2}+k_{y}^{2}\right)} &  {\left(k_{x}^{2}+k_{y}^{2}\right)^{2} }\end{array}\right]\\\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}V_{A}^{p\uparrow\downarrow}&=\frac{1}{k_{l}^{2}k_{lz}}\left[\begin{array}{ccc}{ k_{lz}^2} &  {k_{lz}^2} & k_{lz} \\     k_{lz}^2 & k_{lz}^2 & k_{lz} \\     k_{lz} & k_{lz} &  1 \end{array}\right]\\V_{B}^{p\uparrow\downarrow}&=\frac{1}{k_{l}^{2}k_{lz}}\left[\begin{array}{ccc}{ -k_{lz}^2} &  -{k_{lz}^2} & -k_{lz} \\     -k_{lz}^2 & -k_{lz}^2 & -k_{lz} \\     k_{lz} & k_{lz} &  1 \end{array}\right]\\\end{aligned}</script><p>Then in deriving the relations of coefficients between different layers, we can only use</p><script type="math/tex; mode=display">\boldsymbol{G}^{'}=V_{A}^{s/p,\uparrow\downarrow} A^{s/p,\uparrow\downarrow} e^{jk_{lz}z}+V_{B}^{s/p,\uparrow\downarrow} B^{s/p,\uparrow\downarrow} e^{jk_{lz}z}</script><p>which is more convenient to write. For convenience, we could also write the Green’s tensor as</p><script type="math/tex; mode=display">\boldsymbol{G}=[\boldsymbol{G}_{1},\boldsymbol{G}_{2},\boldsymbol{G}_{3}]</script><p>so that the boundary conditions can be written as</p><script type="math/tex; mode=display">[-(\boldsymbol{G}^{+}_{2i}-\boldsymbol{G}^{-}_{2i}),(\boldsymbol{G}^{+}_{1i}-\boldsymbol{G}^{-}_{1i}),0]^T=0    \label{eq75}</script><script type="math/tex; mode=display">[0,0,(\varepsilon^{+}\boldsymbol{G}^{+}_{3i}-\varepsilon^{-}\boldsymbol{G}^{-}_{3i})]^{T}=0    \label{eq76}</script><script type="math/tex; mode=display">\left[-(\partial_z (\boldsymbol{G}_{1i}^{+}/\mu_{+}-\boldsymbol{G}_{1i}^{-}/\mu_{-})-\partial_x (\boldsymbol{G}_{3i}^{+}/\mu_{+}-\boldsymbol{G}_{3i}^{-}/\mu_{-})),\partial_y (\boldsymbol{G}_{3i}^{+}/\mu_{+}-\boldsymbol{G}_{3i}^{-}/\mu_{-})-\partial_z (\boldsymbol{G}_{2i}^{+}/\mu_{+}-\boldsymbol{G}_{2i}^{-}/\mu_{-}),0\right]^T=0    \label{eq77}</script><script type="math/tex; mode=display">\left[0,0,\partial_x (\boldsymbol{G}_{2i}^{+}-\boldsymbol{G}_{2i}^{-})-\partial_y (\boldsymbol{G}_{1i}^{+}-\boldsymbol{G}_{1i}^{-})\right]^T=0    \label{eq78}</script><p>Then </p><script type="math/tex; mode=display">(F_{A2i}^{+}A^{+}_{2i}e^{ik_{z}^{+}z_{0}}+F_{B2i}^{+}B^{+}_{2i}e^{-ik_{z}^{+}z_{0}})-(F_{A2i}^{-}A^{-}_{2i}e^{ik_{z}^{-}z_{0}}+F_{B2i}^{-}B^{-}_{2i}e^{-ik_{z}^{-}z_{0}})=0\label{Eq:add70}</script><script type="math/tex; mode=display">(F_{A1i}^{+}A^{+}_{1i}e^{ik_{z}^{+}z_{0}}+F_{B1i}^{+}B^{+}_{1i}e^{-ik_{z}^{+}z_{0}})-(F_{A1i}^{-}A^{-}_{1i}e^{ik_{z}^{-}z_{0}}+F_{B1i}^{-}B^{-}_{1i}e^{-ik_{z}^{-}z_{0}})=0\label{Eq:add71}</script><script type="math/tex; mode=display">\varepsilon^{+}(F_{A3i}^{+}A^{+}_{3i}e^{ik_{z}^{+}z_{0}}+F_{B3i}^{+}B^{+}_{3i}e^{-ik_{z}^{+}z_{0}})-\varepsilon^{+}(F_{A3i}^{-}A^{-}_{3i}e^{ik_{z}^{-}z_{0}}+F_{B3i}^{-}B^{-}_{3i}e^{-ik_{z}^{-}z_{0}})=0\label{Eq:add72}</script><script type="math/tex; mode=display">\begin{equation}\begin{aligned}&\left[ik_{z}^{+}(F_{A1i}^{+}A^{+}_{1i}e^{ik_{z}^{+}z_{0}}-F_{B1i}^{+}B^{+}_{1i}e^{-ik_{z}^{+}z_{0}})/\mu_{+}-ik_{z}^{-}(F_{A1i}^{-}A^{-}_{1i}e^{ik_{z}^{-}z_{0}}-F_{B1i}^{-}B^{-}_{1i}e^{-ik_{z}^{-}z_{0}})/\mu_{-}\right]\\&-ik_{x}\left[(F_{A3i}^{+}A^{+}_{3i}e^{ik_{z}^{+}z_{0}}+F_{B3i}^{+}B^{+}_{3i}e^{-ik_{z}^{+}z_{0}})/\mu_{+}-(F_{A3i}^{-}A^{-}_{3i}e^{ik_{z}^{-}z_{0}}+F_{B3i}^{-}B^{-}_{3i}e^{-ik_{z}^{-}z_{0}})/\mu_{-}\right]=0\end{aligned}\end{equation}\label{Eq:add73}</script><script type="math/tex; mode=display">\begin{equation}\begin{aligned}&\left[ik_{z}^{+}(F_{A2i}^{+}A^{+}_{2i}e^{ik_{z}^{+}z_{0}}-F_{B2i}^{+}B^{+}_{2i}e^{-ik_{z}^{+}z_{0}})/\mu_{+}-ik_{z}^{-}(F_{A2i}^{-}A^{-}_{2i}e^{ik_{z}^{-}z_{0}}-F_{B1i}^{-}B^{-}_{1i}e^{-ik_{z}^{-}z_{0}})/\mu_{-}\right]\\&-ik_{y}\left[(F_{A3i}^{+}A^{+}_{3i}e^{ik_{z}^{+}z_{0}}+F_{B3i}^{+}B^{+}_{3i}e^{-ik_{z}^{+}z_{0}})/\mu_{+}-(F_{A3i}^{-}A^{-}_{3i}e^{ik_{z}^{-}z_{0}}+F_{B3i}^{-}B^{-}_{3i}e^{-ik_{z}^{-}z_{0}})/\mu_{-}\right]=0\end{aligned}\end{equation}\label{Eq:add74}</script><p>These equations  are all we have. To get the relations, we need decouple the relations for different rows.</p><h3 id="S-polarized-light"><a href="#S-polarized-light" class="headerlink" title="S polarized light"></a>S polarized light</h3><p> We first use the s polarized light as an example. For S polarized light, we have</p><script type="math/tex; mode=display">k_{x}F_{A1i}+k_{y}F_{A2i}=0,k_{x}F_{B1i}+k_{y}F_{B2i}=0,F_{A3i}=F_{B3i}=0</script><p>Then Eq. <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container> would be</p><script type="math/tex; mode=display">(A^{+}_{2i}e^{ik_{z}^{+}z_{0}}+B^{+}_{2i}e^{-ik_{z}^{+}z_{0}})/k_{z}^{+}-(A^{-}_{2i}e^{ik_{z}^{-}z_{0}}+B^{-}_{2i}e^{-ik_{z}^{-}z_{0}})/k_{z}^{-}=0</script><script type="math/tex; mode=display">(A^{+}_{1i}e^{ik_{z}^{+}z_{0}}+B^{+}_{1i}e^{-ik_{z}^{+}z_{0}})/k_{z}^{+}-(A^{-}_{1i}e^{ik_{z}^{-}z_{0}}+B^{-}_{1i}e^{-ik_{z}^{-}z_{0}})/k_{z}^{-}=0</script><script type="math/tex; mode=display">(A^{+}_{2i}e^{ik_{z}^{+}z_{0}}-B^{+}_{2i}e^{-ik_{z}^{+}z_{0}})/\mu^{+}-(A^{-}_{2i}e^{ik_{z}^{-}z_{0}}-B^{-}_{2i}e^{-ik_{z}^{-}z_{0}})/\mu^{-}=0</script><script type="math/tex; mode=display">(A^{+}_{1i}e^{ik_{z}^{+}z_{0}}+B^{+}_{1i}e^{-ik_{z}^{+}z_{0}})/\mu^{+}-(A^{-}_{1i}e^{ik_{z}^{-}z_{0}}+B^{-}_{1i}e^{-ik_{z}^{-}z_{0}})/\mu^{-}=0</script><p>Then</p><script type="math/tex; mode=display">A_{\alpha i}^{+}=\frac{k_{z}^{+}\mu_{-}+k_{z}^{-}\mu_{+}}{2k_{z}^{-}\mu_{-}}\left(A_{\alpha i}^{-}e^{i(k_{z}^{-}-k_{z}^{+})z_{0}}+\frac{k_{z}^{+}\mu_{-}-k_{z}^{-}\mu_{+}}{k_{z}^{+}\mu_{-}+k_{z}^{-}\mu_{+}}B_{\alpha i}^{-}e^{-i(k_{z}^{-}-k_{z}^{+})z_{0}}\right)</script><script type="math/tex; mode=display">B_{\alpha i}^{+}=\frac{k_{z}^{+}\mu_{-}+k_{z}^{-}\mu_{+}}{2k_{z}^{-}\mu_{-}}\left(\frac{k_{z}^{+}\mu_{-}-k_{z}^{-}\mu_{+}}{k_{z}^{+}\mu_{-}+k_{z}^{-}\mu_{+}}A_{\alpha i}^{-}e^{i(k_{z}^{-}-k_{z}^{+})z_{0}}+B_{\alpha i}^{-}e^{-i(k_{z}^{-}-k_{z}^{+})z_{0}}\right)</script><p>So the relation between different layers has been derived and agree well with the reference.</p><h3 id="P-polarized-light"><a href="#P-polarized-light" class="headerlink" title="P polarized light."></a>P polarized light.</h3><p>For P polarized light, the relation are more complex. We still substitute the detailed expression into Eq. <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>. We still have the following relations</p><script type="math/tex; mode=display">k_{x}F_{A1i}=k_{y}F_{A2i},k_{x}F_{B1i}=k_{y}F_{B2i},</script><p>Still for the relation</p><script type="math/tex; mode=display">(F_{A2i}^{+}A^{+}_{2i}e^{ik_{z}^{+}z_{0}}+F_{B2i}^{+}B^{+}_{2i}e^{-ik_{z}^{+}z_{0}})-(F_{A2i}^{-}A^{-}_{2i}e^{ik_{z}^{-}z_{0}}+F_{B2i}^{-}B^{-}_{2i}e^{-ik_{z}^{-}z_{0}})=0</script><script type="math/tex; mode=display">(A^{+}_{1i}e^{ik_{z}^{+}z_{0}}+B^{+}_{1i}e^{-ik_{z}^{+}z_{0}})/k_{z}^{+}-(A^{-}_{1i}e^{ik_{z}^{-}z_{0}}+B^{-}_{1i}e^{-ik_{z}^{-}z_{0}})/k_{z}^{-}=0</script><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><h3 id="Dyadic-Analysis"><a href="#Dyadic-Analysis" class="headerlink" title="Dyadic Analysis"></a>Dyadic Analysis</h3><p>In this section a brief review of dyadic analysis is presented. Dyadic operations and theorems provide an effective tool for manipulation of field quantities. Dyadic notation was first introduced by Gibbs in 1884 which later appeared in literature. Consider a vector function <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.695ex" height="2.45ex" role="img" focusable="false" viewBox="0 -1083 749 1083"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(484.3,269) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container> having three scalar component <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.848ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 817 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="TeXAtom" transform="translate(523,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container> with (<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="9.203ex" height="1.946ex" role="img" focusable="false" viewBox="0 -666 4067.9 860"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1678.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2178.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2623.2,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3123.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(3567.9,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container>) in a Cartesian system, that is</p><script type="math/tex; mode=display">\vec{F}=\sum_{i=1}^{3}f_{i}\hat{x}_{i}</script><p>Now consider three different vector functions  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="2.302ex" height="3.116ex" role="img" focusable="false" viewBox="0 -1083 1017.3 1377.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(484.3,269) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="TeXAtom" transform="translate(676,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g></g></svg></mjx-container>, given by</p><script type="math/tex; mode=display">\vec{F}_{j}=\sum_{i=1}^{3}f_{i,j}\hat{x}_{i},j=1,2,3</script><p>Which constitute a dyad <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.827ex" height="3.035ex" role="img" focusable="false" viewBox="0 -1341.3 807.6 1341.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(100.4,880) scale(0.707)"><path data-c="2194" d="M263 479Q267 501 271 506T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H835Q729 349 696 475Q691 493 691 500Q691 511 711 511Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q144 292 194 349T263 479Z"></path></g></g></g></g></svg></mjx-container> given by</p><script type="math/tex; mode=display">\overset\leftrightarrow{F}=[\vec{F}_{1},\vec{F}_{2},\vec{F}_{3}]=\left[\begin{matrix}f_{11} & f_{12} & f_{13}\\f_{21} & f_{22} & f_{23}\\f_{31} & f_{32} & f_{33}\\\end{matrix}\right]</script><p>It should be emphasized that </p><script type="math/tex; mode=display">\hat{x}_{i}\hat{x}_{j}\neq \hat{x}_{j}\hat{x}_{i} \quad \text{for} i\neq j</script><p>In general a dyad can be formed from the product of two arbitrary vectors  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.934ex" role="img" focusable="false" viewBox="0 -845 529 855"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(264.5,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="2.507ex" role="img" focusable="false" viewBox="0 -1097 429 1108"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(214.5,283) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container> to form <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="7.012ex" height="3.22ex" role="img" focusable="false" viewBox="0 -1341.3 3099.1 1423.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(100.4,880) scale(0.707)"><path data-c="2194" d="M263 479Q267 501 271 506T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H835Q729 349 696 475Q691 493 691 500Q691 511 711 511Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q144 292 194 349T263 479Z"></path></g></g><g data-mml-node="mo" transform="translate(1085.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2141.1,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(264.5,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2670.1,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(214.5,283) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container> . Components of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.827ex" height="3.035ex" role="img" focusable="false" viewBox="0 -1341.3 807.6 1341.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(100.4,880) scale(0.707)"><path data-c="2194" d="M263 479Q267 501 271 506T288 511Q308 511 308 500Q308 493 303 475Q293 438 278 406T246 352T215 315T185 287T165 270H835Q729 349 696 475Q691 493 691 500Q691 511 711 511Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H165Q167 228 182 216T211 189T244 152T277 96T303 25Q308 7 308 0Q308 -11 288 -11Q281 -11 278 -11T272 -7T267 2T263 21Q245 94 195 151T73 236Q58 242 55 247Q55 254 59 257T73 264Q144 292 194 349T263 479Z"></path></g></g></g></g></svg></mjx-container> can be obtained from a matrix product of a denoted by a 3 × 1 matrix with 1 × 3 matrix. Note that the converse may not be necessarily true. That is, a general dyad may not be expressiable in terms of product of two vector.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><blockquote id="fn_ref1"><sup>ref1</sup>. <a href="https://link.aps.org/doi/10.1103/PhysRevE.62.5797">Accurate and efficient computation of the Green’s tensor for stratified media</a><a href="#reffn_ref1" title="Jump back to footnote [ref1] in the text."> ↩</a></blockquote>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Physics </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10 按百分比显示电量的图标软件</title>
      <link href="/2020/06/21/C_%E6%95%99%E7%A8%8B_%E5%A6%82%E4%BD%95%E8%AE%A9win10%E7%94%B5%E8%84%91%E6%8C%89%E7%99%BE%E5%88%86%E6%AF%94%E6%98%BE%E7%A4%BA%E7%94%B5%E9%87%8F/"/>
      <url>/2020/06/21/C_%E6%95%99%E7%A8%8B_%E5%A6%82%E4%BD%95%E8%AE%A9win10%E7%94%B5%E8%84%91%E6%8C%89%E7%99%BE%E5%88%86%E6%AF%94%E6%98%BE%E7%A4%BA%E7%94%B5%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><p>自己的笔记本是惠普的，看见同事的笔记本的电量是一个小的带百分比的图标，自己也想拥有，怎么办呢？</p><p><img src="https://cdn.guidingtech.com/imager/assets/198152/Windows-10-Always-Show-Battery-Percentage-Featured_4d470f76dc99e18ad75087b1b8410ea9.png?1529074864" alt=""></p><p>去下载联想的电量管理软件吗？感觉不是很靠谱，结果Google，马上就知道了靠谱的软件，</p><p><a href="https://www.guidingtech.com/show-remaining-battery-percentage-windows-10-taskbar/">2 Cool Apps to Show Remain­ing Bat­tery Per­cent­age on the Win­dows 10 Taskbar</a></p><p>这里面推荐了两款软件，我觉得第一个<a href="http://batterybarpro.com/">BatteryBar</a> 更加符合我的审美和需求。可以点击作者的链接直接下载<a href="http://batterybarpro.com/basic.php">免费版</a> .最终下过如下</p><p><img src="https://cdn.guidingtech.com/imager/assets/198143/Windows-10-Always-Show-Battery-Percentage-3_4d470f76dc99e18ad75087b1b8410ea9.png?1529074868" alt=""></p><p>我要的要求是比以前的默认图标大，而且显示百分比，这个已经做的很好了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dipole&#39;s Emission Near Sphere</title>
      <link href="/2020/06/20/A_En_DipoleEmissionNearSphere/"/>
      <url>/2020/06/20/A_En_DipoleEmissionNearSphere/</url>
      
        <content type="html"><![CDATA[<h1 id="Dipole’s-Emission-Near-Sphere"><a href="#Dipole’s-Emission-Near-Sphere" class="headerlink" title="Dipole’s Emission Near Sphere"></a>Dipole’s Emission Near Sphere</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200107214942441_16601.png" alt=""></p><p>As is shown in above figure, In this project I will simulate the dipole’s emission near a sphere. The sphere could be dielectric or metalic. The theoretic description could be found in  this paper <sup><a href="#fn_ref1" id="reffn_ref1">ref1</a></sup>. </p><p>We will analyze two different types of dipole orientations. </p><ul><li>Radial dipole orientation which means dipole is orthogonal to the radial direction.  $\mathrm{d}_{ort}$</li><li><p>Tangential dipole orientation which means dipole is parallel to the radial direction. $\mathrm{d}_{para}$</p><p>We will try to numerically and theoretically calculate the emission enhancement.</p></li></ul><h2 id="Theoretical-Description"><a href="#Theoretical-Description" class="headerlink" title="Theoretical Description"></a>Theoretical Description</h2><p>Theoretically, the total decay rate  $\Gamma<em>{t}$ and radiative decay rate $\Gamma</em>{r}$  could be expressed as</p><ul><li>Radial Dipole</li></ul><script type="math/tex; mode=display">\begin{equation}\frac{\Gamma_{t}^{\bot}}{\Gamma_{0}}=1+\frac{3}{2}\text{Re}\sum_{l=1}^{\infty}(2l+1)l(l+1)b_{l}\left(\frac{h_{l}^{(1)}(kr)}{kr}\right)^2\end{equation}</script><script type="math/tex; mode=display">\begin{equation}\frac{\Gamma_{r}^{\bot}}{\Gamma_{0}}=\frac{3}{2}\text{Re}\sum_{l=1}^{\infty}(2l+1)l(l+1)b_{l}\left|\frac{j_{l}^{(1)}(kr)+b_{l}h_{l}^{(1)}(kr)}{kr}\right|^2\end{equation}</script><ul><li>Tangential Dipole</li></ul><script type="math/tex; mode=display">\begin{equation}\frac{\Gamma_{t}^{\parallel}}{\Gamma_{0}}=1+\frac{3}{2}\sum_{l=1}^{\infty}(l+\frac{1}{2})\left[b_{l}\left(\frac{\xi_{l}^{\prime}(kr)}{kr}\right)^2+a_{l}(h_{l}^{(1)}(kr))^2\right)\end{equation}</script><script type="math/tex; mode=display">\begin{equation}\frac{\Gamma_{r}^{\parallel}}{\Gamma_{0}}=\frac{3}{4}\sum_{l=1}^{\infty}(2l+1)\left[|j_{l}(kr)+a_{l}h_{l}^{(1)}(kr)|^2+\left|\frac{\psi^{\prime}(kr)+b_{l}\xi^{\prime}_{l}(kr)}{kr}\right|^2\right]\end{equation}</script><p>In above expressions, $j<em>{n},h^{(1)}</em>{n}$ are ordinary spherical Bessel and Hankel functions.</p><script type="math/tex; mode=display">\begin{equation}\psi_{n}(x)\equiv xj_{n}(x),\quad \xi_{n}(x)\equiv xh^{(1)}_{n}(x)\end{equation}</script><p>$a<em>{n}$ and $b</em>{n}$ are the Mie scattering coefficients of the sphere. $r=R+d$, $k=\sqrt{\varepsilon}\omega/c$. $\varepsilon$  is the dielectric constant of the embedding medium, $\omega$ the optical frequency, $c$ the speed of the light in vacuum, and $l$ is the angular mode number. The derivatives of  $\psi<em>{n},\xi</em>{n}$ are relatively to $kr$. The Mie scattering coefficients’ definition could be found in the book.<sup><a href="#fn_ref2" id="reffn_ref2">ref2</a></sup></p><script type="math/tex; mode=display">\begin{equation}a_{n}=\frac{\mu m^2j_{n}(mx)[xj_{n}(x)]^{'}-\mu_{1}j_{n}(x)[mxj_{n}(mx)]^{\prime}}{\mu m^2 j_{n}(mx)[xh^{(1)(x)}]'-\mu_{1}h_{n}^{(1)}[mxj_{n}(mx)]^{\prime}}\end{equation}</script><script type="math/tex; mode=display">\begin{equation}b_{n}=\frac{\mu_{1} j_{n}(m x)\left[x j_{n}(x)\right]^{\prime}-\mu j_{n}(x)\left[m x j_{n}(m x)\right]^{\prime}}{\mu_{1} j_{n}(m x)\left[x h_{n}^{(1)}(x)\right]^{\prime}-\mu h_{n}^{(1)}(x)\left[m x j_{n}(m x)\right]^{\prime}}\end{equation}</script><h3 id="MATLAB-Implementation"><a href="#MATLAB-Implementation" class="headerlink" title="MATLAB Implementation"></a>MATLAB Implementation</h3><p>I wrote an MATLAB program to realize the simulation of the emission enhancement.  The following is the function and these function should be renamed and stored with a proper name according to the function name.</p><h4 id="Function-Program"><a href="#Function-Program" class="headerlink" title="Function Program"></a>Function Program</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">% Main Function</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nP</span>=<span class="title">Fun_nP_Cal</span><span class="params">(num_sum,num_dis,dis,alpha,alpham,index_s,k)</span></span></span><br><span class="line">nP=<span class="built_in">zeros</span>(num_dis,<span class="number">2</span>); <span class="comment">% with nP(:,1) store the np_ortho and nP(:,2) store the np_para</span></span><br><span class="line"><span class="keyword">for</span> m=<span class="number">1</span>:num_dis</span><br><span class="line">rate_ortho=<span class="number">0</span>;</span><br><span class="line">    rate_para=<span class="number">0</span>;</span><br><span class="line">    r=dis(m);</span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:num_sum</span><br><span class="line">        a1=(index_s^<span class="number">2</span>*spBJ(l,alpham)*dspBJ(l,alpha)-spBJ(l,alpha)*dspBJ(l,alpham));</span><br><span class="line">        a2=(index_s^<span class="number">2</span>*spBJ(l,alpham)*dspBH(l,alpha)-spBH(l,alpha)*dspBJ(l,alpham));   </span><br><span class="line">        b1=(spBJ(l,alpham)*dspBJ(l,alpha)-spBJ(l,alpha)*dspBJ(l,alpham));</span><br><span class="line">        b2=(spBJ(l,alpham)*dspBH(l,alpha)-spBH(l,alpha)*dspBJ(l,alpham));</span><br><span class="line">    x=k*r;</span><br><span class="line">    al=a1/a2;</span><br><span class="line">    bl=b1/b2;</span><br><span class="line">rate_ortho=rate_ortho+(<span class="number">2</span>*l+<span class="number">1</span>)*l*(l+<span class="number">1</span>)*(-al)*(spBH(l,x)/(x))^<span class="number">2</span>;</span><br><span class="line">    rate_para=rate_para+(l+<span class="number">0.5</span>)*((-al)*(dspBH(l,x)/(x))^<span class="number">2</span>+(-bl)*(spBH(l,x))^<span class="number">2</span>);   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">rate_ortho=<span class="built_in">real</span>(rate_ortho)*<span class="number">3</span>/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">rate_para=<span class="number">1</span>+<span class="number">1.5</span>*<span class="built_in">real</span>(rate_para);</span><br><span class="line">nP(m,<span class="number">1</span>)=rate_ortho;</span><br><span class="line">nP(m,<span class="number">2</span>)=rate_para; </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% The Sphere Hankel Function of the first kind</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[spBH]</span>=<span class="title">spBH</span><span class="params">(l,x)</span></span></span><br><span class="line">    l=l+<span class="number">0.5</span>;</span><br><span class="line">    spBH=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*(<span class="built_in">besselj</span>(l,x)+<span class="number">1</span><span class="built_in">j</span>*<span class="built_in">bessely</span>(l,x));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% The Sphere Bessel Function </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[spBJ]</span>=<span class="title">spBJ</span><span class="params">(l,x)</span></span></span><br><span class="line">    l=l+<span class="number">0.5</span>;</span><br><span class="line">    spBJ=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*<span class="built_in">besselj</span>(l,x);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% The derivative of the Hankel function of the first kind</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[dspBH]</span>=<span class="title">dspBH</span><span class="params">(l,x)</span></span></span><br><span class="line">    l=l+<span class="number">0.5</span>;</span><br><span class="line">    spBH1=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*(<span class="built_in">besselj</span>(l,x)+<span class="number">1</span><span class="built_in">j</span>*<span class="built_in">bessely</span>(l,x));</span><br><span class="line">    spBH2=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*(<span class="built_in">besselj</span>(l<span class="number">-1</span>,x)+<span class="number">1</span><span class="built_in">j</span>*<span class="built_in">bessely</span>(l<span class="number">-1</span>,x));</span><br><span class="line">    spBH3=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*(<span class="built_in">besselj</span>(l+<span class="number">1</span>,x)+<span class="number">1</span><span class="built_in">j</span>*<span class="built_in">bessely</span>(l+<span class="number">1</span>,x));</span><br><span class="line">    dspBH=<span class="number">0.5</span>*spBH1+x*<span class="number">0.5</span>*(spBH2-spBH3);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% The derivative of [the Hankel function of the first kind * mx]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[dspBHm]</span>=<span class="title">dspBHm</span><span class="params">(l,x)</span></span></span><br><span class="line">    l=l+<span class="number">0.5</span>;</span><br><span class="line">    m=<span class="built_in">sqrt</span>(<span class="number">-50</span>);</span><br><span class="line">    spBH1=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*(<span class="built_in">besselj</span>(l,x)+<span class="number">1</span><span class="built_in">j</span>*<span class="built_in">bessely</span>(l,x));</span><br><span class="line">    spBH2=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*(<span class="built_in">besselj</span>(l<span class="number">-1</span>,x)+<span class="number">1</span><span class="built_in">j</span>*<span class="built_in">bessely</span>(l<span class="number">-1</span>,x));</span><br><span class="line">    spBH3=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*(<span class="built_in">besselj</span>(l+<span class="number">1</span>,x)+<span class="number">1</span><span class="built_in">j</span>*<span class="built_in">bessely</span>(l+<span class="number">1</span>,x));</span><br><span class="line">    dspBHm=m*<span class="number">0.5</span>*spBH1+x*<span class="number">0.5</span>*(spBH2-spBH3);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% The derivative of the Bessel function</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[dspBJ]</span>=<span class="title">dspBJ</span><span class="params">(l,x)</span></span></span><br><span class="line">    l=l+<span class="number">0.5</span>;</span><br><span class="line">    spBJ1=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*<span class="built_in">besselj</span>(l,x);</span><br><span class="line">    spBJ2=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*<span class="built_in">besselj</span>(l<span class="number">-1</span>,x);</span><br><span class="line">    spBJ3=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*<span class="built_in">besselj</span>(l+<span class="number">1</span>,x);</span><br><span class="line">    dspBJ=<span class="number">0.5</span>*spBJ1+x*<span class="number">0.5</span>*(spBJ2-spBJ3);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% The derivative of [the Bessel function *mx]</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[dspBJm]</span>=<span class="title">dspBJm</span><span class="params">(l,x)</span></span></span><br><span class="line">    l=l+<span class="number">0.5</span>;</span><br><span class="line">    m=<span class="built_in">sqrt</span>(<span class="number">-50</span>);</span><br><span class="line">    spBJ1=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*<span class="built_in">besselj</span>(l,x);</span><br><span class="line">    spBJ2=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*<span class="built_in">besselj</span>(l<span class="number">-1</span>,x);</span><br><span class="line">    spBJ3=<span class="built_in">sqrt</span>(<span class="built_in">pi</span>/(x*<span class="number">2</span>))*<span class="built_in">besselj</span>(l+<span class="number">1</span>,x);</span><br><span class="line">    dspBJm=m*<span class="number">0.5</span>*spBJ1+m^<span class="number">2</span>*x*<span class="number">0.5</span>*(spBJ2-spBJ3);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="Main-Program-Convergence-Test"><a href="#Main-Program-Convergence-Test" class="headerlink" title="Main Program (Convergence Test)"></a>Main Program (Convergence Test)</h4><p>And the main program is as follows</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% To test when will the theoretical expressions will convengent</span></span><br><span class="line"><span class="comment">%index_s=sqrt(-22.473-1.3974i);</span></span><br><span class="line">index_s=<span class="built_in">sqrt</span>(<span class="number">-50</span>);</span><br><span class="line">lamda=<span class="number">1000e-9</span>;</span><br><span class="line">k0=<span class="number">2</span>*<span class="built_in">pi</span>/lamda;</span><br><span class="line">k=k0;</span><br><span class="line">radius=<span class="number">110e-9</span>;</span><br><span class="line">alpha=<span class="built_in">pi</span>*<span class="number">2</span>*radius/lamda;</span><br><span class="line">alpham=alpha*index_s;</span><br><span class="line">num_dis=<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">num_sum=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">50</span>];</span><br><span class="line">num_len=<span class="built_in">length</span>(num_sum);</span><br><span class="line">dis_theo=<span class="built_in">linspace</span>(radius+<span class="number">50e-9</span>,radius+<span class="number">1000e-9</span>,num_dis);</span><br><span class="line"></span><br><span class="line">np_theo=<span class="built_in">zeros</span>(num_dis,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:num_len</span><br><span class="line">    np_theo(:,:,l)=Fun_nP_Cal(num_sum(l),num_dis,dis_theo,alpha,alpham,index_s,k);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% </span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:num_len</span><br><span class="line">    <span class="built_in">plot</span>(dis_theo,np_theo(:,<span class="number">1</span>,l),<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    <span class="built_in">hold</span> on</span><br><span class="line">    <span class="built_in">plot</span>(dis_theo,np_theo(:,<span class="number">2</span>,l),<span class="string">&#x27;--&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Python-Implementation"><a href="#Python-Implementation" class="headerlink" title="Python Implementation"></a>Python Implementation</h3><p>I also write a corresponding python program to calculate the dipole’s emission near sphere.</p><h3 id="Simulation-Methods"><a href="#Simulation-Methods" class="headerlink" title="Simulation Methods"></a>Simulation Methods</h3><h2 id="COMSOL-Simulation"><a href="#COMSOL-Simulation" class="headerlink" title="COMSOL Simulation"></a>COMSOL Simulation</h2><p>Dipole’s emission properties near nano particles could be simulated via COMSOL. COMSOL supports different types of sources, for example, the point, edge, surface and volume current source. The emission power could be described by </p><script type="math/tex; mode=display">\begin{equation}\frac{\mathrm{d}W}{\mathrm{d}t}=\int_{s}\langle \vec{S}\rangle\cdot \boldsymbol{n}\mathrm{d}S=-\frac{1}{2}\text{Re}\int_{V} (J^{*}\cdot \boldsymbol{E})dV=\frac{\Omega}{2}\text{Im}(\boldsymbol{d}^{*}\cdot \boldsymbol{E}) \end{equation}</script><p>to be continued…….</p><h2 id="MEEP-Simulation"><a href="#MEEP-Simulation" class="headerlink" title="MEEP Simulation"></a>MEEP Simulation</h2><h2 id="Lumerical-FDTD-Simulations"><a href="#Lumerical-FDTD-Simulations" class="headerlink" title="Lumerical FDTD Simulations"></a>Lumerical FDTD Simulations</h2><blockquote id="fn_ref1"><sup>ref1</sup>. <a href="http://dx.doi.org/10.1103/PhysRevB.76.115123">Phys. Rev. B  76, <strong>115123</strong> (2007)</a><a href="#reffn_ref1" title="Jump back to footnote [ref1] in the text."> &#8617;</a></blockquote><blockquote id="fn_ref2"><sup>ref2</sup>. Absorption and scattering by small particles<a href="#reffn_ref2" title="Jump back to footnote [ref2] in the text."> &#8617;</a></blockquote>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MATLAB </tag>
            
            <tag> Simulation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica的一些小技巧</title>
      <link href="/2020/05/30/C_%E6%95%99%E7%A8%8B_Mathematica%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/05/30/C_%E6%95%99%E7%A8%8B_Mathematica%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h1><h1 id="Mathematica的一些小技巧"><a href="#Mathematica的一些小技巧" class="headerlink" title="Mathematica的一些小技巧"></a>Mathematica的一些小技巧</h1><p>[TOC]</p><h2 id="如何更好的使用目录？"><a href="#如何更好的使用目录？" class="headerlink" title="如何更好的使用目录？"></a>如何更好的使用目录？</h2><p>解决方案来自于<a href="https://mathematica.stackexchange.com/questions/139599/table-of-contents-with-hyperlinks">Table of contents with hyperlinks</a></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">nbTOC</span><span class="punctuation">[</span><span class="type">nb_</span><span class="punctuation">]</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="built_in">Button</span><span class="punctuation">[</span><span class="built_in">Mouseover</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="built_in">Style</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="string">"HyperlinkActive"</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;@</span></span><br><span class="line">       <span class="built_in">First</span><span class="operator">@</span><span class="built_in">NotebookRead</span><span class="operator">@</span><span class="type">#</span><span class="operator">,</span> <span class="built_in">SelectionMove</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="built_in">All</span><span class="operator">,</span> <span class="built_in">CellContents</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">      <span class="built_in">Appearance</span> <span class="operator">-&gt;</span> <span class="built_in">None</span><span class="operator">,</span> <span class="built_in">BaseStyle</span> <span class="operator">-&gt;</span> <span class="string">"Hyperlink"</span><span class="operator">,</span> <span class="built_in">Alignment</span> <span class="operator">-&gt;</span> <span class="built_in">Left</span><span class="operator">,</span></span><br><span class="line">       <span class="built_in">ImageSize</span> <span class="operator">-&gt;</span> <span class="number">1000</span><span class="punctuation">]</span> <span class="operator">&amp;</span> <span class="operator">/@</span> </span><br><span class="line">    <span class="built_in">Cells</span><span class="punctuation">[</span><span class="built_in">CellStyle</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="string">"Title"</span><span class="operator">,</span> <span class="string">"Chapter"</span><span class="operator">,</span> <span class="string">"Section"</span><span class="operator">,</span> <span class="string">"Subsection"</span><span class="operator">,</span> </span><br><span class="line">       <span class="string">"Subsubsection"</span><span class="punctuation">}</span><span class="punctuation">]</span> <span class="operator">//</span> </span><br><span class="line">   <span class="built_in">CreatePalette</span><span class="punctuation">[</span></span><br><span class="line">     <span class="built_in">Panel</span><span class="punctuation">[</span><span class="built_in">Column</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="built_in">Dividers</span> <span class="operator">-&gt;</span> <span class="built_in">Center</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">ImageSize</span> <span class="operator">-&gt;</span> <span class="number">1000</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">     <span class="variable">FrontEnd</span><span class="operator">`</span><span class="built_in">ClosingSaveDialog</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">WindowTitle</span> <span class="operator">-&gt;</span> <span class="string">"Table of Contents"</span><span class="operator">,</span> <span class="built_in">Magnification</span> <span class="operator">-&gt;</span> <span class="number">1</span><span class="punctuation">]</span> <span class="operator">&amp;;</span></span><br><span class="line"><span class="variable">nbTOC</span><span class="punctuation">[</span><span class="built_in">Optional</span><span class="punctuation">[</span><span class="built_in">Automatic</span><span class="operator">,</span> <span class="built_in">Automatic</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="variable">nbTOC</span><span class="operator">@</span><span class="built_in">EvaluationNotebook</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">nbTOC</span><span class="punctuation">[</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">tableOfContents</span><span class="punctuation">[</span><span class="type">notebook_</span><span class="punctuation">]</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="built_in">Module</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">headerTypes</span><span class="operator">,</span> <span class="variable">nb</span><span class="operator">,</span> <span class="variable">header</span><span class="operator">,</span> <span class="variable">headerCells</span><span class="operator">,</span> </span><br><span class="line">    <span class="variable">tagHeaders</span><span class="punctuation">}</span><span class="operator">,</span><span class="comment">(*Cell types to include in ToC*)</span></span><br><span class="line">   <span class="variable">headerTypes</span> <span class="operator">=</span> <span class="string">"Subsection"</span> <span class="operator">|</span> <span class="string">"Section"</span><span class="operator">;</span></span><br><span class="line">   <span class="comment">(*Find cells of the desired type and tag with their names*)</span></span><br><span class="line">   <span class="variable">nb</span> <span class="operator">=</span> <span class="built_in">Import</span><span class="punctuation">[</span><span class="variable">notebook</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">   <span class="variable">headerCells</span> <span class="operator">=</span> <span class="built_in">Cases</span><span class="punctuation">[</span><span class="variable">nb</span><span class="operator">,</span> <span class="built_in">Cell</span><span class="punctuation">[</span><span class="type">_</span><span class="operator">,</span> <span class="variable">headerTypes</span><span class="operator">,</span> <span class="type">___</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Infinity</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">   <span class="variable">tagHeaders</span> <span class="operator">=</span> <span class="built_in">Map</span><span class="punctuation">[</span><span class="built_in">Append</span><span class="punctuation">[</span><span class="type">#</span><span class="operator">,</span> <span class="built_in">CellTags</span> <span class="operator">-&gt;</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;,</span> <span class="variable">headerCells</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">   <span class="comment">(*Export tagged cells*)</span></span><br><span class="line">   <span class="built_in">Export</span><span class="punctuation">[</span><span class="variable">notebook</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">ReplaceAll</span><span class="punctuation">[</span><span class="variable">nb</span><span class="operator">,</span> </span><br><span class="line">     <span class="built_in">Normal</span><span class="punctuation">[</span><span class="built_in">AssociationThread</span><span class="punctuation">[</span><span class="variable">headerCells</span><span class="operator">,</span> <span class="variable">tagHeaders</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">   <span class="comment">(*Generate styled hyperlinks for ToC*)</span></span><br><span class="line">   <span class="built_in">Map</span><span class="punctuation">[</span><span class="built_in">If</span><span class="punctuation">[</span><span class="built_in">MatchQ</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="string">"Section"</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Hyperlink</span><span class="punctuation">[</span></span><br><span class="line">        <span class="built_in">Style</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">RGBColor</span><span class="operator">@</span><span class="punctuation">{</span><span class="number">211</span><span class="operator">/</span><span class="number">256</span><span class="operator">,</span> <span class="number">15</span><span class="operator">/</span><span class="number">64</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">         <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Arial"</span><span class="operator">,</span> <span class="built_in">FontTracking</span> <span class="operator">-&gt;</span> <span class="string">"Plain"</span><span class="operator">,</span> </span><br><span class="line">         <span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">18</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">notebook</span><span class="operator">,</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">       <span class="built_in">Hyperlink</span><span class="punctuation">[</span></span><br><span class="line">        <span class="built_in">Style</span><span class="punctuation">[</span><span class="string">"\t"</span> <span class="operator">&lt;&gt;</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">RGBColor</span><span class="operator">@</span><span class="punctuation">{</span><span class="number">53</span><span class="operator">/</span><span class="number">64</span><span class="operator">,</span> <span class="number">51</span><span class="operator">/</span><span class="number">128</span><span class="operator">,</span> <span class="number">1</span><span class="operator">/</span><span class="number">256</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">         <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Arial"</span><span class="operator">,</span> <span class="built_in">FontTracking</span> <span class="operator">-&gt;</span> <span class="string">"Plain"</span><span class="operator">,</span> </span><br><span class="line">         <span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">14</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">notebook</span><span class="operator">,</span> <span class="type">#</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;,</span> <span class="variable">headerCells</span><span class="punctuation">]</span> <span class="operator">//</span> </span><br><span class="line">    <span class="built_in">TableForm</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><h2 id="如何使用”Jet”颜色函数？"><a href="#如何使用”Jet”颜色函数？" class="headerlink" title="如何使用”Jet”颜色函数？"></a>如何使用”Jet”颜色函数？</h2><p>解决方案来自于<a href="https://stackoverflow.com/questions/5753508/custom-colorfunction-colordata-in-arrayplot-and-similar-functions/9321152#9321152"><a href="https://stackoverflow.com/questions/5753508/custom-colorfunction-colordata-in-arrayplot-and-similar-functions">Custom ColorFunction/ColorData in ArrayPlot (and similar functions)</a></a></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">jet</span><span class="punctuation">[</span><span class="type">u_</span><span class="operator">?</span><span class="built_in">NumericQ</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="built_in">Blend</span><span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0</span><span class="operator">,</span> <span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">9</span><span class="operator">/</span><span class="number">16</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">1</span><span class="operator">/</span><span class="number">9</span><span class="operator">,</span> <span class="built_in">Blue</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">23</span><span class="operator">/</span><span class="number">63</span><span class="operator">,</span> <span class="built_in">Cyan</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">13</span><span class="operator">/</span><span class="number">21</span><span class="operator">,</span> <span class="built_in">Yellow</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">         <span class="punctuation">{</span><span class="number">47</span><span class="operator">/</span><span class="number">63</span><span class="operator">,</span> <span class="built_in">Orange</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">55</span><span class="operator">/</span><span class="number">63</span><span class="operator">,</span> <span class="built_in">Red</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">1</span><span class="operator">,</span> <span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">/</span><span class="number">2</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">0</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line">                          <span class="variable">u</span><span class="punctuation">]</span> <span class="operator">/;</span> <span class="number">0</span> <span class="operator">&lt;=</span> <span class="variable">u</span> <span class="operator">&lt;=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>一个例子示例如何制定颜色的范围（20201127），<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">vmin</span> <span class="operator">=</span> <span class="operator">-</span><span class="number">1</span><span class="operator">;</span></span><br><span class="line"><span class="variable">vmax</span> <span class="operator">=</span> <span class="number">1</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">DensityPlot</span><span class="punctuation">[</span><span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span> <span class="built_in">Sin</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">x</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">3</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">y</span><span class="operator">,</span> <span class="number">0</span><span class="operator">,</span> <span class="number">3</span> <span class="variable">\[Pi]</span><span class="punctuation">}</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">ColorFunction</span> <span class="operator">-&gt;</span> <span class="punctuation">(</span><span class="variable">jet</span><span class="punctuation">[</span><span class="built_in">Rescale</span><span class="punctuation">[</span><span class="type">#1</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">vmin</span><span class="operator">,</span> <span class="variable">vmax</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;</span><span class="punctuation">)</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">ColorFunctionScaling</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="operator">,</span> </span><br><span class="line"> <span class="built_in">PlotLegends</span> <span class="operator">-&gt;</span> </span><br><span class="line">  <span class="built_in">BarLegend</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">jet</span><span class="punctuation">[</span><span class="built_in">Rescale</span><span class="punctuation">[</span><span class="type">#1</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">vmin</span><span class="operator">,</span> <span class="variable">vmax</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&amp;,</span> <span class="punctuation">{</span><span class="variable">vmin</span><span class="operator">,</span> <span class="variable">vmax</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><h2 id="如何访问矩阵的元素以及部分？"><a href="#如何访问矩阵的元素以及部分？" class="headerlink" title="如何访问矩阵的元素以及部分？"></a>如何访问矩阵的元素以及部分？</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">mat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">m</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">mat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">m</span><span class="operator">,</span><span class="variable">n</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">mat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">m1</span><span class="operator">;;</span><span class="variable">m2</span><span class="operator">,</span><span class="variable">n</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="variable">mat</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="built_in">All</span><span class="operator">,</span><span class="variable">n</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="如何从Mathematica运行Python"><a href="#如何从Mathematica运行Python" class="headerlink" title="如何从Mathematica运行Python?"></a>如何从Mathematica运行Python?</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">session</span> <span class="operator">=</span> <span class="built_in">StartExternalSession</span><span class="punctuation">[</span><span class="string">"Python"</span><span class="punctuation">]</span></span><br><span class="line"><span class="built_in">ExternalEvaluate</span><span class="punctuation">[</span><span class="variable">session</span><span class="operator">,</span><span class="built_in">File</span><span class="punctuation">[</span><span class="string">"filepath"</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="如何生成带颜色的框？"><a href="#如何生成带颜色的框？" class="headerlink" title="如何生成带颜色的框？"></a>如何生成带颜色的框？</h2><p>运行如下代码，然后选择颜色即可。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">cell</span><span class="punctuation">[</span><span class="type">color_</span><span class="operator">,</span> <span class="type">form_</span><span class="operator">,</span> <span class="type">style_String</span><span class="operator">:</span> <span class="string">"Text"</span><span class="operator">,</span> </span><br><span class="line">   <span class="type">font_String</span><span class="operator">:</span> <span class="string">"Comic Sans MS"</span><span class="operator">,</span> <span class="type">size_Integer</span><span class="operator">:</span> <span class="number">15</span><span class="punctuation">]</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="built_in">NotebookWrite</span><span class="punctuation">[</span><span class="built_in">EvaluationCell</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line">   <span class="built_in">Cell</span><span class="punctuation">[</span><span class="built_in">BoxData</span><span class="punctuation">[</span><span class="built_in">FormBox</span><span class="punctuation">[</span><span class="string">""</span><span class="operator">,</span> <span class="variable">form</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">style</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">CellFrame</span> <span class="operator">-&gt;</span> <span class="punctuation">{</span><span class="punctuation">{</span><span class="number">0.5</span><span class="operator">,</span> <span class="number">0.5</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">1.5</span><span class="operator">,</span> <span class="number">0.5</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="operator">,</span> <span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="variable">size</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="variable">font</span><span class="operator">,</span> <span class="built_in">FontWeight</span> <span class="operator">-&gt;</span> <span class="string">"Plain"</span><span class="operator">,</span> </span><br><span class="line">    <span class="built_in">Background</span> <span class="operator">-&gt;</span> </span><br><span class="line">     <span class="built_in">RGBColor</span><span class="punctuation">[</span></span><br><span class="line">      <span class="built_in">Sequence</span> <span class="operator">@@</span> <span class="punctuation">(</span><span class="variable">color</span> <span class="operator">/.</span> <span class="built_in">ColorSetter</span> <span class="operator">:&gt;</span> <span class="built_in">List</span> <span class="operator">/.</span> <span class="built_in">RGBColor</span> <span class="operator">:&gt;</span> <span class="built_in">List</span> <span class="operator">//</span></span><br><span class="line">          <span class="built_in">Flatten</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">All</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">ccell</span> <span class="operator">=</span> <span class="variable">cell</span><span class="punctuation">[</span><span class="built_in">ColorSetter</span><span class="punctuation">[</span><span class="built_in">GrayLevel</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">TraditionalForm</span><span class="operator">,</span> <span class="string">"Text"</span><span class="operator">,</span> </span><br><span class="line">   <span class="string">"Times New Roman"</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">]</span> <span class="operator">//</span> <span class="built_in">Defer</span></span><br><span class="line"><span class="variable">csmyellowcell</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="variable">cell</span><span class="punctuation">[</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">1.</span><span class="operator">,</span> <span class="number">1.</span><span class="operator">,</span> <span class="number">0.5019607843137255</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">TraditionalForm</span><span class="operator">,</span> <span class="string">"Text"</span><span class="operator">,</span> </span><br><span class="line">   <span class="string">"Comic Sans MS"</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">csmgreencell</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="variable">cell</span><span class="punctuation">[</span><span class="built_in">LightGreen</span><span class="operator">,</span> <span class="built_in">TraditionalForm</span><span class="operator">,</span> <span class="string">"Text"</span><span class="operator">,</span> <span class="string">"Comic Sans MS"</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">tnryellowcell</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="variable">cell</span><span class="punctuation">[</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">1.</span><span class="operator">,</span> <span class="number">1.</span><span class="operator">,</span> <span class="number">0.5019607843137255</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">TraditionalForm</span><span class="operator">,</span> <span class="string">"Text"</span><span class="operator">,</span> </span><br><span class="line">   <span class="string">"Times New Roman"</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">tnrwhitecell</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="variable">cell</span><span class="punctuation">[</span><span class="built_in">White</span><span class="operator">,</span> <span class="built_in">TraditionalForm</span><span class="operator">,</span> <span class="string">"Text"</span><span class="operator">,</span> <span class="string">"Times New Roman"</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">tnrgreencell</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="variable">cell</span><span class="punctuation">[</span><span class="built_in">LightGreen</span><span class="operator">,</span> <span class="built_in">TraditionalForm</span><span class="operator">,</span> <span class="string">"Text"</span><span class="operator">,</span> <span class="string">"Times New Roman"</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">tnrgraycell</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="variable">cell</span><span class="punctuation">[</span><span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="number">236</span><span class="operator">/</span><span class="number">255</span><span class="operator">,</span> <span class="number">236</span><span class="operator">/</span><span class="number">255</span><span class="operator">,</span> <span class="number">236</span><span class="operator">/</span><span class="number">255</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">TraditionalForm</span><span class="operator">,</span> <span class="string">"Text"</span><span class="operator">,</span> </span><br><span class="line">   <span class="string">"Times New Roman"</span><span class="operator">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><h2 id="Mathematica如何更改StyleSheet里面Style的快捷键"><a href="#Mathematica如何更改StyleSheet里面Style的快捷键" class="headerlink" title="Mathematica如何更改StyleSheet里面Style的快捷键"></a>Mathematica如何更改StyleSheet里面Style的快捷键</h2><p><a href="https://mathematica.stackexchange.com/questions/28286/add-keyboard-shortcut-to-the-displayformula-style">Add keyboard shortcut to the DisplayFormula style</a></p><h2 id="Mathematica通过留数定理计算积分"><a href="#Mathematica通过留数定理计算积分" class="headerlink" title="Mathematica通过留数定理计算积分"></a>Mathematica通过留数定理计算积分</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(*Assume the original function is fana(t)/fpole(t)*)</span></span><br><span class="line"><span class="variable">funcomplexint</span><span class="punctuation">[</span><span class="type">fana_</span><span class="operator">,</span> <span class="type">fpole_</span><span class="operator">,</span> <span class="type">t_</span><span class="punctuation">]</span> <span class="operator">:=</span> <span class="built_in">Module</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">sol</span><span class="operator">,</span> <span class="variable">poles</span><span class="operator">,</span> <span class="variable">numpoles</span><span class="punctuation">}</span><span class="operator">,</span></span><br><span class="line">   <span class="variable">sol</span> <span class="operator">=</span> <span class="built_in">Solve</span><span class="punctuation">[</span><span class="variable">fpole</span> <span class="operator">==</span> <span class="number">0</span><span class="operator">,</span> <span class="variable">t</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">   <span class="variable">numpoles</span> <span class="operator">=</span> <span class="built_in">Length</span><span class="punctuation">[</span><span class="built_in">Flatten</span><span class="punctuation">[</span><span class="variable">sol</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line">   <span class="variable">poles</span> <span class="operator">=</span> <span class="variable">t</span> <span class="operator">/.</span> <span class="variable">sol</span><span class="operator">;</span></span><br><span class="line">   <span class="built_in">Table</span><span class="punctuation">[</span><span class="punctuation">(</span><span class="variable">fana</span><span class="operator">*</span><span class="punctuation">(</span><span class="variable">t</span> <span class="operator">-</span> <span class="variable">poles</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">/</span><span class="variable">fpole</span><span class="punctuation">)</span> <span class="operator">/.</span> <span class="punctuation">{</span><span class="variable">t</span> <span class="operator">-&gt;</span> <span class="variable">poles</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="variable">i</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">i</span><span class="operator">,</span> </span><br><span class="line">     <span class="variable">numpoles</span><span class="punctuation">}</span><span class="punctuation">]</span></span><br><span class="line">   <span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><h2 id="Mathematica按Enter变成换行而不是创建新的Cell"><a href="#Mathematica按Enter变成换行而不是创建新的Cell" class="headerlink" title="Mathematica按Enter变成换行而不是创建新的Cell"></a>Mathematica按Enter变成换行而不是创建新的Cell</h2><p><a href="https://mathematica.stackexchange.com/questions/228879/pressing-the-enter-key-in-the-python-external-evaluation-cell-becomes-run-in">Pressing the “enter” key in the Python External Evaluation cell becomes “run” instead of “line break”</a></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SetOptions</span><span class="punctuation">[</span><span class="built_in">EvaluationNotebook</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">FrontEnd</span><span class="operator">`</span><span class="variable">ReturnCreatesNewCell</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">SetOptions</span><span class="punctuation">[</span><span class="built_in">EvaluationNotebook</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">    <span class="built_in">StyleDefinitions</span> <span class="operator">-&gt;</span> <span class="built_in">Notebook</span><span class="operator">@</span><span class="punctuation">{</span></span><br><span class="line">        <span class="built_in">Cell</span><span class="operator">@</span><span class="built_in">StyleData</span><span class="punctuation">[</span><span class="built_in">StyleDefinitions</span> <span class="operator">-&gt;</span> <span class="variable">FrontEnd</span><span class="operator">`</span><span class="built_in">FileName</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="string">"Article"</span><span class="punctuation">}</span><span class="operator">,</span> <span class="string">"JournalArticle.nb"</span><span class="operator">,</span> <span class="built_in">CharacterEncoding</span> <span class="operator">-&gt;</span> <span class="string">"UTF-8"</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">        <span class="built_in">Cell</span><span class="punctuation">[</span><span class="built_in">StyleData</span><span class="operator">@</span><span class="string">"ExternalLanguage"</span><span class="operator">,</span> <span class="variable">FrontEnd</span><span class="operator">`</span><span class="variable">ReturnCreatesNewCell</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">SetOptions</span><span class="punctuation">[</span><span class="built_in">EvaluationNotebook</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">    <span class="built_in">StyleDefinitions</span> <span class="operator">-&gt;</span> <span class="built_in">Notebook</span><span class="operator">@</span><span class="punctuation">{</span></span><br><span class="line">        <span class="built_in">Cell</span><span class="operator">@</span><span class="built_in">StyleData</span><span class="punctuation">[</span><span class="built_in">StyleDefinitions</span> <span class="operator">-&gt;</span> <span class="variable">FrontEnd</span><span class="operator">`</span><span class="built_in">FileName</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="string">"Article"</span><span class="punctuation">}</span><span class="operator">,</span> <span class="string">"JournalArticle.nb"</span><span class="operator">,</span> <span class="built_in">CharacterEncoding</span> <span class="operator">-&gt;</span> <span class="string">"UTF-8"</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line">        <span class="built_in">Cell</span><span class="punctuation">[</span><span class="built_in">StyleData</span><span class="operator">@</span><span class="string">"Notebook"</span><span class="operator">,</span> <span class="variable">FrontEnd</span><span class="operator">`</span><span class="variable">ReturnCreatesNewCell</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"><span class="operator">```</span></span><br></pre></td></tr></table></figure><h2 id="Mathenatica-Link-with-Python"><a href="#Mathenatica-Link-with-Python" class="headerlink" title="Mathenatica Link with Python"></a>Mathenatica Link with Python</h2><p><a href="https://reference.wolfram.com/language/WolframClientForPython/index.html">Wolfram Client Library for Python</a></p><h2 id="Mathematica-获取-python数据"><a href="#Mathematica-获取-python数据" class="headerlink" title="Mathematica 获取 python数据"></a>Mathematica 获取 python数据</h2><p>in python external evaluation</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wolframclient.serializers <span class="keyword">import</span> export</span><br><span class="line">export(&lt;<span class="built_in">object</span>&gt;) <span class="comment"># &lt;object&gt; could be any things supported</span></span><br></pre></td></tr></table></figure><p>in mathematica we have</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">efficpy</span><span class="operator">=</span><span class="built_in">ToExpression</span><span class="punctuation">[</span><span class="operator">%</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><h2 id="从-Mathematica中用默认软件打开PDF"><a href="#从-Mathematica中用默认软件打开PDF" class="headerlink" title="从 Mathematica中用默认软件打开PDF"></a>从 Mathematica中用默认软件打开PDF</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url = "C:\\Users\\xiail\\Desktop\\PhysRevA.99.023857.pdf";</span><br><span class="line"></span><br><span class="line">Button[Style["mathematica.pdf", "Subsection"], SystemOpen[url], </span><br><span class="line"> Appearance -&gt; "Frameless"]</span><br></pre></td></tr></table></figure><p> <a href="https://mathematica.stackexchange.com/questions/224658/launch-pdf-viewer-from-within-a-mathematica-notebook">Launch PDF viewer from within a Mathematica Notebook</a></p><h2 id="Mathematica的meshgrid函数"><a href="#Mathematica的meshgrid函数" class="headerlink" title="Mathematica的meshgrid函数"></a>Mathematica的meshgrid函数</h2><p> 我们在python和MATLAB都有<code>meshgrid</code>函数来帮我们绘图，在Mathematica需要手动实现。解决方案来自于<br> <a href="https://mathematica.stackexchange.com/questions/30701/simulate-matlabs-meshgrid-function">Simulate MATLAB’s meshgrid function</a></p><p> 一般MATLAB实现为</p> <figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> [X,Y] = <span class="built_in">meshgrid</span>(<span class="number">-2</span>:<span class="number">.1</span>:<span class="number">2</span>, <span class="number">-4</span>:<span class="number">.2</span>:<span class="number">4</span>);</span><br><span class="line">Z = X .* <span class="built_in">exp</span>(-X.^<span class="number">2</span> - Y.^<span class="number">2</span>);</span><br><span class="line">surf(X,Y,Z)</span><br></pre></td></tr></table></figure><p>而Mathematica实现为</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">meshgrid</span><span class="punctuation">[</span><span class="type">x_List</span><span class="operator">,</span> <span class="type">y_List</span><span class="punctuation">]</span><span class="operator">:=</span><span class="punctuation">{</span><span class="built_in">ConstantArray</span><span class="punctuation">[</span><span class="variable">x</span><span class="operator">,</span><span class="built_in">Length</span><span class="punctuation">[</span><span class="variable">y</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="built_in">Transpose</span><span class="operator">@</span><span class="built_in">ConstantArray</span><span class="punctuation">[</span><span class="variable">y</span><span class="operator">,</span><span class="built_in">Length</span><span class="punctuation">[</span><span class="variable">x</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">{</span><span class="variable">xx</span><span class="operator">,</span> <span class="variable">yy</span><span class="punctuation">}</span> <span class="operator">=</span> <span class="variable">meshgrid</span><span class="punctuation">[</span><span class="built_in">Range</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">2</span><span class="operator">,</span> <span class="number">2</span><span class="operator">,</span> <span class="number">.1</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Range</span><span class="punctuation">[</span><span class="operator">-</span><span class="number">4</span><span class="operator">,</span> <span class="number">4</span><span class="operator">,</span> <span class="number">.2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="variable">c</span> <span class="operator">=</span> <span class="variable">xx</span><span class="operator">*</span><span class="built_in">Exp</span><span class="punctuation">[</span><span class="operator">-</span><span class="variable">xx</span><span class="operator">^</span><span class="number">2</span> <span class="operator">-</span> <span class="variable">yy</span><span class="operator">^</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">pts</span> <span class="operator">=</span> <span class="built_in">Flatten</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="variable">xx</span><span class="operator">,</span> <span class="variable">yy</span><span class="operator">,</span> <span class="variable">c</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="number">2</span><span class="operator">,</span> <span class="number">3</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">ListPlot3D</span><span class="punctuation">[</span><span class="variable">pts</span><span class="operator">,</span> <span class="built_in">PlotRange</span> <span class="operator">-&gt;</span> <span class="built_in">All</span><span class="operator">,</span> <span class="built_in">AxesLabel</span> <span class="operator">-&gt;</span> <span class="built_in">Automatic</span><span class="operator">,</span> </span><br><span class="line">           <span class="built_in">ImagePadding</span> <span class="operator">-&gt;</span> <span class="number">20</span><span class="operator">,</span> <span class="built_in">Mesh</span> <span class="operator">-&gt;</span> <span class="number">35</span><span class="operator">,</span> <span class="built_in">InterpolationOrder</span> <span class="operator">-&gt;</span> <span class="number">2</span><span class="operator">,</span> </span><br><span class="line">           <span class="built_in">ColorFunction</span> <span class="operator">-&gt;</span> <span class="string">"Rainbow"</span><span class="operator">,</span> <span class="built_in">Boxed</span> <span class="operator">-&gt;</span> <span class="built_in">False</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>注意原答案是有问题的，我的版本已经改过来了。</p><h2 id="Mathematica的寻找最大值以及其位置"><a href="#Mathematica的寻找最大值以及其位置" class="headerlink" title="Mathematica的寻找最大值以及其位置"></a>Mathematica的寻找最大值以及其位置</h2><p><a href="https://mathematica.stackexchange.com/questions/40231/list-manipulation-position-max-value-combination">List manipulation: position &amp; max value combination</a></p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">findmax</span><span class="punctuation">[</span><span class="type">x_</span><span class="punctuation">]</span><span class="operator">:=</span><span class="punctuation">{</span><span class="variable">x</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="type">#</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span><span class="type">#</span><span class="punctuation">}</span><span class="operator">&amp;@@</span><span class="built_in">Ordering</span><span class="punctuation">[</span><span class="operator">-</span><span class="variable">x</span><span class="operator">,</span><span class="number">1</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><h2 id="运行其他的笔记本"><a href="#运行其他的笔记本" class="headerlink" title="运行其他的笔记本"></a>运行其他的笔记本</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SetDirectory</span><span class="punctuation">[</span><span class="built_in">NotebookDirectory</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*nbFile="Tools_ListofFunctions.nb";*)</span></span><br><span class="line"><span class="variable">nbFile</span> <span class="operator">=</span> <span class="built_in">FileNameJoin</span><span class="operator">@</span><span class="punctuation">{</span><span class="built_in">Directory</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="operator">,</span> <span class="string">"Tools_ListofFunctions.nb"</span><span class="punctuation">}</span><span class="operator">;</span></span><br><span class="line"><span class="built_in">FileExistsQ</span><span class="punctuation">[</span><span class="variable">nbFile</span><span class="punctuation">]</span><span class="operator">;</span></span><br><span class="line"><span class="comment">(*NotebookEvaluate[nbFile];*)</span></span><br><span class="line"><span class="built_in">NotebookEvaluate</span><span class="punctuation">[</span><span class="variable">nbFile</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="绘图调整细节"><a href="#绘图调整细节" class="headerlink" title="绘图调整细节"></a>绘图调整细节</h2><p>调制一下坐标的字体以及线条<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">LabelStyle</span> <span class="operator">-&gt;</span> </span><br><span class="line">  <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">FontSize</span> <span class="operator">-&gt;</span> <span class="number">20</span><span class="operator">,</span> <span class="built_in">FontFamily</span> <span class="operator">-&gt;</span> <span class="string">"Times"</span><span class="operator">,</span> <span class="built_in">FontColor</span> <span class="operator">-&gt;</span> <span class="built_in">Black</span><span class="punctuation">]</span><span class="operator">,</span></span><br><span class="line"> <span class="built_in">FrameStyle</span> <span class="operator">-&gt;</span> <span class="built_in">Directive</span><span class="punctuation">[</span><span class="built_in">Black</span><span class="operator">,</span> <span class="built_in">Thickness</span> <span class="operator">-&gt;</span> <span class="number">0.005</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><br>自己设置一些矩形的图例<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">Marker1</span> <span class="operator">=</span> <span class="built_in">Table</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">Graphics</span><span class="punctuation">[</span><span class="punctuation">{</span><span class="built_in">EdgeForm</span><span class="punctuation">[</span><span class="built_in">Thickness</span><span class="punctuation">[</span><span class="number">0.1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">RGBColor</span><span class="punctuation">[</span><span class="punctuation">{</span></span><br><span class="line"><span class="built_in">Rational</span><span class="punctuation">[</span><span class="number">11</span><span class="operator">,</span> <span class="number">51</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line"><span class="built_in">Rational</span><span class="punctuation">[</span><span class="number">42</span><span class="operator">,</span> <span class="number">85</span><span class="punctuation">]</span><span class="operator">,</span> </span><br><span class="line"><span class="built_in">Rational</span><span class="punctuation">[</span><span class="number">184</span><span class="operator">,</span> <span class="number">255</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="built_in">Polygon</span><span class="punctuation">[</span><span class="built_in">CirclePoints</span><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">,</span> <span class="number">0.04</span><span class="punctuation">}</span><span class="operator">,</span> <span class="punctuation">{</span><span class="variable">i</span><span class="operator">,</span> <span class="number">1</span><span class="operator">,</span> <span class="variable">L</span><span class="operator">,</span> </span><br><span class="line">    <span class="number">1</span><span class="punctuation">}</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure><br>修改位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PlotLegends -&gt; </span><br><span class="line">    Placed[LineLegend[{"1"}, </span><br><span class="line">      LabelStyle -&gt; {FontFamily -&gt; "Helvetica", FontSize -&gt; 15, </span><br><span class="line">        Black}, LegendLayout -&gt; {"Column", 1}], {0.5, 0.75}]];</span><br></pre></td></tr></table></figure><h2 id="如何导出颜色图"><a href="#如何导出颜色图" class="headerlink" title="如何导出颜色图"></a>如何导出颜色图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = ColorData["TemperatureMap"];</span><br><span class="line">mat = Table[f[x], {x, 0, 1, 0.01}];</span><br><span class="line">mat /. {RGBColor[x_, y_, z_] -&gt; {x, y, z}}</span><br></pre></td></tr></table></figure><h2 id="如何默认变量为数值，加快计算速度"><a href="#如何默认变量为数值，加快计算速度" class="headerlink" title="如何默认变量为数值，加快计算速度"></a>如何默认变量为数值，加快计算速度</h2><p>用<code>?NumericQ</code>来给出默认的选项。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">f1</span><span class="punctuation">[</span><span class="variable">\[Tau]</span><span class="type">_</span><span class="operator">?</span><span class="built_in">NumericQ</span><span class="punctuation">]</span> <span class="operator">:=</span> </span><br><span class="line">  <span class="variable">f</span><span class="variable">\[Tau]</span><span class="variable">gaussian</span><span class="punctuation">[</span><span class="variable">\[CapitalGamma]</span><span class="number">1</span><span class="operator">,</span> <span class="variable">\[Tau]</span><span class="operator">,</span> <span class="variable">t0</span><span class="operator">,</span> <span class="variable">\[Omega]</span><span class="number">0</span><span class="punctuation">]</span><span class="operator">;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica 排版技巧</title>
      <link href="/2020/05/30/C_%E6%95%99%E7%A8%8B_Mathematica%E6%8E%92%E7%89%88%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/05/30/C_%E6%95%99%E7%A8%8B_Mathematica%E6%8E%92%E7%89%88%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Mathematica"><a href="#Mathematica" class="headerlink" title="Mathematica"></a>Mathematica</h1><h1 id="Mathematica-排版技巧"><a href="#Mathematica-排版技巧" class="headerlink" title="Mathematica 排版技巧"></a>Mathematica 排版技巧</h1><p>[TOC]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前一直觉得Mathematica就是一个计算器一样的软件，符号计算还可以，数值计算一般。后来从知乎的一些少有的帖子里，知道了Mathematica的强大，以及对于我们这种偏理论的工作者的好处。慢慢开始学习Mathematica，用它来进行科研推导、记笔记、数值计算和绘图。关于Mathematica有很多技巧、关键点需要总结和注意，今天本篇笔记将会专注于Mathematica的排版使用。</p><h2 id="使用默认样式表、样式"><a href="#使用默认样式表、样式" class="headerlink" title="使用默认样式表、样式"></a>使用默认样式表、样式</h2><p>和word一样，我们可以对标题、副标题、章节、正文等规定特定的格式，输入一段文字之后，我们只需要将该段文字选择为特定格式即可。</p><p>Mathematica的使用手册写的非常详细，点击“帮助”-&gt;“Wolfram参考资料”，然后搜索“样式表”，就可以有非常详细的讲解了。也可以去<a href="https://reference.wolfram.com/language/tutorial/WorkingWithStylesheets.html">官网</a>看。</p><p>我这里也再按照自己的话说一遍。</p><p>Mathematica的每一个单元具有独立的属性，可以对整个单元的属性进行调整。Mathematica有不同的模板，称为“样式表”，默认新建一个Mathematica的文件，其样式表为“Default”,</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2020-05-26_21-14-06.png" alt=""></p><p>该样式表有如下的格式可供选择</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2020-05-26_21-15-08.png" alt=""></p><p>一般默认是“Input”模式，要改成其他模式，可以通过格式—&gt;样式—&gt;来选择，另外还支持快捷键，<code>Alt+Number</code>来快速更换模式。下面是一个简单的例子，</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2020-05-26_21-21-54.png" alt=""></p><p>注意直接按Enter是换行，如果要新建一个单元，按快捷键：<code>Ctrl+Shift+D</code>. 另外，选中某段文字，还可以单独对其格式修改，比如要修改字体，选中文字之后，选择<code>格式-&gt;字体</code>，修改即可，这个不用多说。</p><h2 id="创建自己的样式表"><a href="#创建自己的样式表" class="headerlink" title="创建自己的样式表"></a>创建自己的样式表</h2><p>如果是觉得现有样式表不能满足自己的需要，怎么新建定制一个样式表呢？这方面有很多的资料，如果Google去搜索的话，也是一大堆，我能力有限，没办法深入浅出的分析讲解，直接上步骤吧。</p><p>所有的样式表都是存在一个特定的文件夹的，该文件夹可以通过如下命令得到，</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">FileNameJoin</span><span class="operator">@</span><span class="punctuation">{</span><span class="built_in">$UserBaseDirectory</span><span class="operator">,</span> <span class="string">"SystemFiles"</span><span class="operator">,</span> <span class="string">"FrontEnd"</span><span class="operator">,</span>  <span class="string">"StyleSheets"</span><span class="punctuation">}</span></span><br></pre></td></tr></table></figure><p>如果别人有现成的样式表，你可以下载下来，复制到改文件夹即可。如果是自己要定义一个样式表呢？一般都是从某一个原始的样式表上面改。比如我想将Default的样式的正文字体改成红色，怎么做呢？</p><p>（1）首先将当前笔记本的样式表选择为“Default”.</p><p>（2）打开“格式”—&gt;“编辑样式表”—&gt;“Default”，然后在选择样式处，找到“Text点击，这时下面会多出一个“Text”的单元，此时修改Text的格式即可。只想短暂保存，就直接使用就可以；如果想以后接着用，那就点“安装样式表”，输入好名称，就有一个自己定制的样式表了。</p><h2 id="技巧-更改热键"><a href="#技巧-更改热键" class="headerlink" title="技巧-更改热键"></a>技巧-更改热键</h2><p>如果我们想自己决定，alt+1,alt+2分别对应什么样式，怎么办呢？可以通过如下的教程做到。</p><p><a href="https://mathematica.stackexchange.com/questions/28286/add-keyboard-shortcut-to-the-displayformula-style">Add keyboard shortcut to the DisplayFormula style</a></p><h2 id="技巧-显示表达式"><a href="#技巧-显示表达式" class="headerlink" title="技巧-显示表达式"></a>技巧-显示表达式</h2><p>一个很重要的技巧，当我们要修改格式的时候，也可以通过，修改某单元的“表达式”代码。通过点击“单元”—-&gt;”显示表达式”或者按快捷键“Ctrl+Shift+E”,即可来回切换。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="样式表更改了格式之后，输出为PDF的格式还是没有变？"><a href="#样式表更改了格式之后，输出为PDF的格式还是没有变？" class="headerlink" title="样式表更改了格式之后，输出为PDF的格式还是没有变？"></a>样式表更改了格式之后，输出为PDF的格式还是没有变？</h3><p>我自己被这个问题困扰了很久，我是通过自带的样式表“Preprint”改的一个自定义样式，Text格式我在样式表中已经修改了，但是导出之后还是很小的字体。什么原因呢？这是由于，Text还有个“Printout”的选项。</p><p>我们看该样式表的Text如下</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2020-05-26_23-22-05.png" alt=""></p><p>可以看见，同一个Text，有多种模式，我自己不是很懂意思，只知道这个地方，把Text的字体的普通和Printout的地方都改掉就可以了。改的时候，可以将单元格的显式表达式弄出来修改，会比较方便。</p><h2 id="我的笔记示例"><a href="#我的笔记示例" class="headerlink" title="我的笔记示例"></a>我的笔记示例</h2>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装COMSOL,MATLAB以及FDTD Solutions</title>
      <link href="/2020/05/30/C_%E6%95%99%E7%A8%8B_Ubuntu_%E5%AE%89%E8%A3%85COMSOL_MATLAB_FDTD%20Solutions/"/>
      <url>/2020/05/30/C_%E6%95%99%E7%A8%8B_Ubuntu_%E5%AE%89%E8%A3%85COMSOL_MATLAB_FDTD%20Solutions/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="常用软件列表"><a href="#常用软件列表" class="headerlink" title="常用软件列表"></a>常用软件列表</h2><p>作为光学研究方向的研究生，不可避免的需要进行光学仿真计算，我目前常用的光学仿真以及数值计算软件有如下：</p><ul><li>COMSOL5.1/5.4</li><li>MATLAB 2018a</li><li>Lumerical Fdtd Solutions 2016a</li></ul><p>接下来将分别介绍对应的安装方法。</p><h2 id="安装Lumerical-Fdtd-Solutions-2016a"><a href="#安装Lumerical-Fdtd-Solutions-2016a" class="headerlink" title="安装Lumerical Fdtd Solutions 2016a"></a>安装Lumerical Fdtd Solutions 2016a</h2><h3 id="A-转换包rpm包为deb格式"><a href="#A-转换包rpm包为deb格式" class="headerlink" title="A.转换包rpm包为deb格式"></a>A.转换包rpm包为deb格式</h3><p>Lumerical官网对于linux的包只有rpm文件，即是为redhat等系统准备的，对于Debian/Ubuntu系统，需要将rpm转为deb包，工具为alien，安装方式为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install alien</span><br></pre></td></tr></table></figure><p>转换方式为，cd到对应的rpm包所在目录后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo alien ./*.rpm</span><br><span class="line"><span class="comment">## 或者</span></span><br><span class="line">sudo alien --scripts ./*.rpm</span><br></pre></td></tr></table></figure><p>就会生成对应的deb包，这种方法一般不推荐，因为在装换的时候可能会遇到各种各样的小问题（有时候会报错），但是没有其他更好的办法了。</p><h3 id="B-逐个安装Lumerical的包"><a href="#B-逐个安装Lumerical的包" class="headerlink" title="B. 逐个安装Lumerical的包"></a>B. 逐个安装Lumerical的包</h3><p>逐个安装对应的软件Mode solutions ,Fdtd-solutions等一共四个（顺序无所谓），然后最后安装Lumerical_FlexLM-1.6.700，都只需要：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure><p>至此软件已经全部安装完毕，接下来要做的就是破解激活。</p><h3 id="C-确保Lumerical-flex-license-manager工作正常"><a href="#C-确保Lumerical-flex-license-manager工作正常" class="headerlink" title="C. 确保Lumerical flex license manager工作正常"></a>C. 确保Lumerical flex license manager工作正常</h3><p>尝试启动Lumerical flex license manager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin start</span><br></pre></td></tr></table></figure><p>这时候如果成功，再次尝试关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin stop</span><br></pre></td></tr></table></figure><p>如果以上两步都出现：<code>ok</code> 字样，那就说明该软件已经成功了，剩下的就是激活了。但是我实际操作的时候，遇到了如下问题：</p><ul><li>启动的时候报错：缺少库文件：libxmlsec1.io.1(还缺少另外一个文件，具体是啥忘记了)，解决办法是需要在网站上面下载对应的包安装。</li><li>如果上面启动时候不报错，但是关闭还是报错：没有什么pid.log什么的，具体是啥忘记了，总之就是还没有真正启动lumerical flex license manager，这里面讲需要安装一个叫lsb的东西，具体原因我也不是很懂，因为我自己的电脑安装完全没有问题，安装好之后就可以启动lumerical flex license manager（没有记记清楚当时的问题，有些可惜···）</li></ul><p>2023 10 30 更新<br>安装之后，启动fdtd-solutions时候一直报错，<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/2330c2379b68a62f0d084c6611d6d45.png" alt=""><br>实际上是lumerical flex license manager没有正确的启动，这个问题一般出现在不正确关闭lumerical flex license manager就直接复制替换文件，观察相应的log文件，发现是没有正确的在端口启动的<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picblog/Snipaste_2023-10-31_11-39-27.png" alt=""><br>解决方法是，列出被占用的端口，然后手动关闭被占用端口的程序</p><h3 id="D-复制文件覆盖"><a href="#D-复制文件覆盖" class="headerlink" title="D. 复制文件覆盖"></a>D. 复制文件覆盖</h3><p>关闭Lumerical flex license manager，然后将安装文件夹里面的破解文件复制到对应的目录覆盖即可。再重启lumerical flex license manager：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin start</span><br></pre></td></tr></table></figure><p>这时候就可以再安装文件的/opt/lumerical/bin目录里面启动fdtd-solutions了。</p><h3 id="E-开机启动设置"><a href="#E-开机启动设置" class="headerlink" title="E :开机启动设置"></a>E :开机启动设置</h3><p>还有一个问题是这个Manager不会自动开机启动，所以需要用的时候需要手动开启，怎么设置开机启动可以看另外一篇 <a href="https://knifelees3.github.io/2019/03/02/Linux%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/#more">笔记</a></p><h2 id="安装MATLAB"><a href="#安装MATLAB" class="headerlink" title="安装MATLAB"></a>安装MATLAB</h2><h3 id="sudo权限挂载并开始安装"><a href="#sudo权限挂载并开始安装" class="headerlink" title="sudo权限挂载并开始安装"></a>sudo权限挂载并开始安装</h3><p>接下来是安装MATLAB,我是在北邮BT下载的最新版本：MATLAB2018a,这个软件装起来比较简单，<br>文件夹一共有两个盘：xxxxdvd1.iso,xxxxdvd2.iso,首先挂载iso文件1,可以在根目录下新建一个专门用来挂载的文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /mnt/temp/</span><br></pre></td></tr></table></figure><p>挂载文件到新建的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o loop ./*dvd1.iso /mnt/temp</span><br></pre></td></tr></table></figure><p>用sudo权限安装,直接运行里面的安装文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /mnt/temp/install</span><br></pre></td></tr></table></figure><p>开始安装之后选择我有序列号，将Crack文件里面的standalone下面的序列号粘贴进去，开始安装，安装到一半的时候提示插入第二个iso文件，这时候再次将dvd2.iso挂载，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o loop ./*dvd2.iso /mnt/temp</span><br></pre></td></tr></table></figure><p>然后点击确定就可以继续安装了，安装好之后记得卸载挂载的MATLAB iso文件，命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount /mnt/temp/</span><br></pre></td></tr></table></figure><h3 id="复制文件激活覆盖"><a href="#复制文件激活覆盖" class="headerlink" title="复制文件激活覆盖"></a>复制文件激活覆盖</h3><p>安装完成之后打开matlab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/local/MATLAB/matlab2018a/bin/matlab</span><br></pre></td></tr></table></figure><p>提示激活，选择本地激活，然后选中Crack文件里面的Standlone.lic文件。<br>最后将Crack文件里面的文件覆盖到对应的安装文件夹即可.<br>打开MATLAB可能会报错、闪退等，一般都是缺少一些库或者安装包，或者驱动有问题，不同系统、服务器问题不一样，需要google。<br>我遇到的问题：打开MATLAB可能会遇到问题，命令行里面一排红字，关于显卡的，具体是啥忘记了，打开COMSOL也会对3D什么的报错，这都是由于我们的新系统显卡驱动没有装好的缘故，解决办法：<br>打开软件源，选择Additional Drivers,选择里面推荐的Nvidia驱动安装即可。重启生效。有时候会出现重启无法开机的情况，这是由于安装的推荐的显卡驱动不对，这时候需要卸载掉已安装的驱动，重新安装其他版本（我自己的电脑最开始就是这个原因一直死机，换了好几个驱动才找到合适的）。</p><h2 id="安装COMSOL"><a href="#安装COMSOL" class="headerlink" title="安装COMSOL"></a>安装COMSOL</h2><p>安装最简单的就是COMSOL了，和前面挂载MATLAB一样，挂载iso文件到temp文件夹，运行里面的setup文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o loop ./*.iso /mnt/temp</span><br><span class="line">sudo /mnt/temp/setup</span><br></pre></td></tr></table></figure><p>安装时候选择破解文件夹里面对应的lic文件，然后安装。<br>最重要的一步，安装COMSOL livelink with MATLAB,选择MATLAB所在文件夹，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/MATLAB/matlab2018a/</span><br></pre></td></tr></table></figure><p>测试是否安装成功，只需要在命令行输入：comsol,如果可以打开即安装成功，然后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comsol mphserver matlab</span><br></pre></td></tr></table></figure><p>如果可以启动matlab，那么就代表成功了。而且第一次打开需要输入用户名即密码，随便输入即可。</p><h2 id="做对应的桌面快捷方式"><a href="#做对应的桌面快捷方式" class="headerlink" title="做对应的桌面快捷方式"></a>做对应的桌面快捷方式</h2><p>安装好软件之后一般不会自动在桌面形成对应的快捷方式，需要手动的添加快捷方式，添加方式为，在桌面编辑对应的文件（以MATLAB为例）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ./Mtalab.Desktop</span><br></pre></td></tr></table></figure><p>然后添加下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=Matlab 2018a</span><br><span class="line">Exec=/usr/local/MATLAB/R2018a/bin/matlab -desktop %启动文件所在位置</span><br><span class="line">Icon=/usr/local/MATLAB/R2018a/bin/matlab.png %图标所在位置</span><br><span class="line">Type=Application</span><br><span class="line">Name[zh_CN]=Matlab_2018ab</span><br></pre></td></tr></table></figure><p>保存之后修改权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x ./Matlab.Desktop</span><br></pre></td></tr></table></figure><p>即可点击打开了。</p><h2 id="添加到环境变量"><a href="#添加到环境变量" class="headerlink" title="添加到环境变量"></a>添加到环境变量</h2><p>为了可以在命令行使用，还需要将安装的软件执行文件添加到环境变量。给某个用户和给所有用户添加环境变量是不一样的。</p><h3 id="A-用于当前用户："><a href="#A-用于当前用户：" class="headerlink" title="A.用于当前用户："></a>A.用于当前用户：</h3><p>在对应用户主目录下有一个 .bashrc 隐藏文件，可以在此文件中加入 PATH 的设置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/local/MATLAB/R2018a/bin/:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>其中<code>/usr/local/MATLAB/R2018a/bin/</code> 是我的MATLAB路径，需要根据实际的软件路径更改。 如果要加入多个路径，只要：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=&lt;你要加入的路径1&gt;:&lt;你要加入的路径2&gt;: ...... :<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>当中每个路径要以冒号分隔。这样每次登录都会生效，此时还需要注销再登录或者使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>使得更改生效</p><h3 id="B-用于所有用户："><a href="#B-用于所有用户：" class="headerlink" title="B.用于所有用户："></a>B.用于所有用户：</h3><p>如果需要环境变量更改对所有用户有效，那么需要更改“/etc/profile”文件，该方法需要具有管理员权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/profile</span><br></pre></td></tr></table></figure><p>在其中加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=&lt;你要加入的路径&gt;:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>终端输入：echo $PATH 可以查看环境变量此时还需要注销再登录或者使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>使得更改生效。</p><h2 id="安装多个版本软件"><a href="#安装多个版本软件" class="headerlink" title="安装多个版本软件"></a>安装多个版本软件</h2><p>有时候我们可能需要安装COMSOL或者MATLAB的多个版本，多个版本软件的安装目录默认是不冲突的，如MATLAB在“/usr/local/MATLAB”下会有“R2018a”或者“R2018b”来区分，COMSOL在“/usr/local/”下有“comsol51”和“comsol54”加以区分。当我们将安装路径加入环境变量之后，由于启动的文件名相同，比如都是“comsol”，为了区别出到底是想启动COMSOL的哪个版本。我们可以将文件名做更改，比如将comsol5.4版本的bin目录下的comsol文件改名为comsol54:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> /usr/local/comsol54/multiphysics/bin/comsol /usr/local/comsol54/multiphysics/bin/comsol54</span><br></pre></td></tr></table></figure><p>这样我们在命令行输入“comsol54”就可以指定启动COMSOL5.4版本了。其他软件的做法也类似。</p><p>libpng2</p><p><a href="https://launchpad.net/~ubuntu-security/+archive/ubuntu/ppa/+build/15108504">https://launchpad.net/~ubuntu-security/+archive/ubuntu/ppa/+build/15108504</a></p><p>ligqtcore4<br><a href="https://packages.ubuntu.com/search?keywords=libqtcore4">https://packages.ubuntu.com/search?keywords=libqtcore4</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让windows软件在高分辨率屏幕笔记本显示不模糊</title>
      <link href="/2020/04/05/C_%E6%95%99%E7%A8%8B_%E5%A6%82%E4%BD%95%E8%AE%A9%E8%BD%AF%E4%BB%B6%E5%9C%A8%E9%AB%98%E5%88%86%E8%BE%A8%E7%8E%87%E5%B1%8F%E5%B9%95%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%98%BE%E7%A4%BA%E4%B8%8D%E6%A8%A1%E7%B3%8A/"/>
      <url>/2020/04/05/C_%E6%95%99%E7%A8%8B_%E5%A6%82%E4%BD%95%E8%AE%A9%E8%BD%AF%E4%BB%B6%E5%9C%A8%E9%AB%98%E5%88%86%E8%BE%A8%E7%8E%87%E5%B1%8F%E5%B9%95%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%98%BE%E7%A4%BA%E4%B8%8D%E6%A8%A1%E7%B3%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><p>​        目前windows笔记本的分辨率和色域都逐渐变好，不再是以前的1366<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0.02ex;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.09ex" role="img" focusable="false" viewBox="0 -491 778 482"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g></g></g></svg></mjx-container>768的TN屏幕。不过由于windows要适配各种型号的电脑，对于高分屏幕适配的根本不好。我自己的笔记本是13.3寸的1920<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0.02ex;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.09ex" role="img" focusable="false" viewBox="0 -491 778 482"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g></g></g></svg></mjx-container> 1080的屏幕，在打开一些软件的时候，会有字体模糊的现象。比如Mathematica,Vegas等等。这主要是软件没有针对该型号笔记本做专门的适配。解决方法有两种，第一种是将笔记本的缩放改成原来的100%，这对于小屏幕笔记本不友好，字体太小了。这里推荐第二种方法：</p><p>该方法适用于所有软件：</p><ol><li><p>第一步，先找到对应软件的启动文件”xxx.exe”文件，比如我们要改Mathematica，那么在C盘找到”Mathematica.exe”。不同软件的位置不同，推荐安装软件<a href="https://www.voidtools.com/zh-cn/">Everything</a>,直接搜索，会方便很多。</p></li><li><p>第二步，右键点击该”xxx.exe”文件，选择属性-&gt;兼容性-&gt;更改高DPI设置。勾选两处即可（如下图所示），然后确定退出。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/微信截图_20200405114935.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neural Networks Learning I -Recognize Handwritten Digits</title>
      <link href="/2020/03/11/A_En_Python-Deep-Learinging-I-Recognize-Handwritten-Digits/"/>
      <url>/2020/03/11/A_En_Python-Deep-Learinging-I-Recognize-Handwritten-Digits/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Deeplearning"><a href="#Python-Deeplearning" class="headerlink" title="Python #Deeplearning"></a>Python #Deeplearning</h1><p>This is the beginning of my neural networks learning. I have read the books written by <a href="http://michaelnielsen.org/">Michael Nielsen</a> for a long time and I think now it’s time to complete the learning examples in first chapter of his book. </p><p><img src="http://michaelnielsen.org/images/mn.jpg" alt=""></p><h2 id="Introduction-of-some-functions"><a href="#Introduction-of-some-functions" class="headerlink" title="Introduction of some functions"></a>Introduction of some functions</h2><p>I first want to show the use of some functions in his program example. These uses really surprise me a lot.</p><h3 id="numpy-random"><a href="#numpy-random" class="headerlink" title="numpy.random"></a><code>numpy.random</code></h3><p>The first function is the random function from the package numpy. In initialize the matrix, the random function is used.</p><h4 id="random-randn"><a href="#random-randn" class="headerlink" title="random.randn"></a><code>random.randn</code></h4><blockquote><p>Return a sample (or samples) from the “standard normal” distribution.<br>If positive, int_like or int-convertible arguments are provided, randn generates an array of shape (d0, d1, …, dn), filled with random floats sampled from a univariate “normal” (Gaussian) distribution of mean 0 and variance 1 (if any of the d_i are floats, they are first converted to integers by truncation). A single float randomly sampled from the distribution is returned if no argument is provided</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="built_in">print</span>(np.random.randn(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>[0.34894831]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(np.random.randn(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><pre><code>[0.34444932 0.12172097 1.14900238]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(np.random.randn(<span class="number">2</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure><pre><code>[[ 0.49635216  0.22762119 -0.68270641] [-2.13526944 -0.82040908 -0.79356388]]</code></pre><h4 id="Random-shuffle"><a href="#Random-shuffle" class="headerlink" title="Random.shuffle"></a><code>Random.shuffle</code></h4><blockquote><p>Modify a sequence in-place by shuffling its contents.</p><p>This function only shuffles the array along the first axis of a multi-dimensional array. The order of sub-arrays is changed but their contents remains the same.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A=np.random.randn(<span class="number">4</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(A)</span><br></pre></td></tr></table></figure><pre><code>[[ 0.89532715 -2.34406351 -0.47233016 -0.1943856 ] [ 0.57509425 -0.84810353  1.11576561  1.33146725] [ 0.81883264  2.25208295 -1.52527099 -1.30444846] [ 1.94464225  0.29825984 -0.16625868 -0.35876162]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.shuffle(A)</span><br><span class="line"><span class="built_in">print</span>(A)</span><br></pre></td></tr></table></figure><pre><code>[[ 1.94464225  0.29825984 -0.16625868 -0.35876162] [ 0.57509425 -0.84810353  1.11576561  1.33146725] [ 0.81883264  2.25208295 -1.52527099 -1.30444846] [ 0.89532715 -2.34406351 -0.47233016 -0.1943856 ]]</code></pre><h3 id="zip"><a href="#zip" class="headerlink" title="zip()"></a><code>zip()</code></h3><blockquote><p>Python’s zip() function creates an iterator that will aggregate elements from two or more iterables. You can use the resulting iterator to quickly and consistently solve common programming problems, like creating dictionaries. In this tutorial, you’ll discover the logic behind the Python zip() function and how you can use it to solve real-world problems.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>]</span><br><span class="line">B=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>]</span><br><span class="line">C=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">ABC=<span class="built_in">zip</span>(A,B,C)</span><br><span class="line"><span class="built_in">print</span>(ABC)</span><br></pre></td></tr></table></figure><pre><code>&lt;zip object at 0x000001D6AB168A08&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>(ABC)</span><br></pre></td></tr></table></figure><pre><code>zip</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>(ABC)</span><br></pre></td></tr></table></figure><pre><code>[('1', 'A', 1), ('2', 'B', 2), ('3', 'C', 3)]</code></pre><h3 id="Matrix-use"><a href="#Matrix-use" class="headerlink" title="Matrix use"></a>Matrix use</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>])</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> A[<span class="number">1</span>:]:</span><br><span class="line">    <span class="built_in">print</span>(l)</span><br></pre></td></tr></table></figure><pre><code>234567</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> A[:-<span class="number">1</span>]:</span><br><span class="line">    <span class="built_in">print</span>(l)</span><br></pre></td></tr></table></figure><pre><code>123456</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sizes=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">W=[np.random.randn(y, x) <span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(sizes[:-<span class="number">1</span>], sizes[<span class="number">1</span>:])]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(W)</span><br></pre></td></tr></table></figure><pre><code>[array([[-0.53071848, -0.26905161],       [-0.75696575, -0.57292324],       [-1.47093334,  0.060232  ]]), array([[ 1.03193319,  0.58177683,  0.78046451],       [ 0.14132843, -0.90416154, -0.12645047],       [ 1.90204955, -0.55866015,  0.39481778],       [-0.11897701,  1.1277029 ,  0.7584795 ]])]</code></pre><h2 id="My-understanding-on-the-neural-networks"><a href="#My-understanding-on-the-neural-networks" class="headerlink" title="My understanding on the neural networks"></a>My understanding on the neural networks</h2><h3 id="How-we-map-the-input-to-the-output"><a href="#How-we-map-the-input-to-the-output" class="headerlink" title="How we map the input to the output"></a>How we map the input to the output</h3><p>Previously, I have learned the use of some special functions, now it’s time to give a summary of my understanding. I will not list everything since Michael Nieslen gives wonderful descriptions. </p><p>In my view, our problem is that we have a input which is usually a one dimensional array, the output is still an array. What we need do is to map the input to the output correctly.</p><p>In real life we will can describe and measure the world in different way. The color, the sound, the taste etc. However, </p><blockquote><p>Anything is a number.</p></blockquote><p>The properties in real world can all be mapped into a number space. And what happened in real world can be described by the numbers and  number operations. For example, we use coordinate (x,y,z) to describe the position of the some object. </p><p>We create the neural networks and it has many layers. From the mathematical view, the input data <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="3.019ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1334.2 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container> will be processed through different layers with a matrix and Sigmoid transformation.</p><script type="math/tex; mode=display">\boldsymbol{V}^{i+1}=\sigma(\boldsymbol{W}^{i}\cdot \boldsymbol{V}^{i}+\boldsymbol{b})</script><p>Where <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="4.658ex" height="1.937ex" role="img" focusable="false" viewBox="0 -833.9 2058.9 855.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container> is the value in layer <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="4.677ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2067.4 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(567.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1567.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.038ex;" xmlns="http://www.w3.org/2000/svg" width="3.596ex" height="1.917ex" role="img" focusable="false" viewBox="0 -830.4 1589.7 847.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D47E" d="M111 624Q109 624 102 624T91 623Q61 623 61 640Q61 660 70 678Q78 686 98 686Q140 684 239 684Q277 684 309 684T360 685T383 686H385Q407 686 407 668Q404 634 391 626Q387 624 348 624Q307 624 307 622Q307 618 332 409Q359 198 359 195L570 532L564 576L558 622V624H522H504Q472 624 472 641Q475 678 488 684L493 686L529 685Q551 684 645 684Q716 684 753 685T795 686Q818 686 818 669Q815 632 802 626Q798 624 759 624Q718 624 718 622Q718 615 743 410Q770 199 770 196Q770 195 806 253T903 406Q1035 618 1035 619Q1025 624 968 624Q943 624 943 641Q943 648 946 659Q950 675 952 679T963 686L998 685Q1020 684 1093 684Q1113 684 1139 685T1173 686Q1207 686 1207 669Q1207 664 1204 652Q1199 631 1194 628T1164 624Q1113 622 1101 615Q1098 612 905 305Q715 -1 709 -7Q699 -17 673 -17Q645 -17 639 -8L581 441Q581 444 442 221Q331 44 314 18T288 -14Q279 -17 263 -17H254Q229 -17 227 -5Q225 2 186 311L147 620V624H111Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1295.7,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container> is the weight matrix between layer i and layer j. <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.018ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.588ex" role="img" focusable="false" viewBox="0 -694 521 702"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D483" d="M220 -8Q142 -8 94 35T45 155V167Q45 187 52 218T104 426L153 622H149Q148 622 144 622T134 623T122 624T111 624T101 624T96 625Q84 628 84 642Q84 647 88 661T94 679Q98 684 109 685T185 690Q258 694 272 694Q289 694 293 679Q293 676 263 553L232 429L244 434Q256 440 281 446T331 452Q417 452 465 407T513 285Q513 235 494 184T439 90T346 20T220 -8ZM385 337Q385 400 318 400Q269 400 226 360Q214 349 211 341T191 268Q162 149 162 113Q162 44 226 44Q269 44 299 76T339 135T362 215Q364 222 365 226Q385 303 385 337Z"></path></g></g></g></svg></mjx-container> is a vector. </p><p>So the value vectors in different layers will be linked with the the transformation. So this is how we obtain the output from the input.</p><p>In summary, we have a neural networks means we have a series of weight matrix and bias vectors. Different weights, bias, number of layers will give different neural networks. Our neural networks are actually a series of matrix, vectors.</p><h3 id="How-to-measure-the-quality-of-the-mapping"><a href="#How-to-measure-the-quality-of-the-mapping" class="headerlink" title="How to measure the quality of the mapping?"></a>How to measure the quality of the mapping?</h3><p>To measure the quality of the mapping, we should compare the output data from our neural networks and the actual data. To measure the quality we can for example define the following cost function</p><script type="math/tex; mode=display">C=|\boldsymbol{y}-\boldsymbol{y}_{0}|^2/n</script><p>If the difference between the output and the actual value is smaller, it means our neural networks works better.</p><h3 id="How-to-train-our-neural-networks？"><a href="#How-to-train-our-neural-networks？" class="headerlink" title="How to train our neural networks？"></a>How to train our neural networks？</h3><p>A very important step of deep learning is to train our neural networks. Training means we change our weights and bias vector to let our output closer to the actual result.</p><p>To realize this, we need give some modifications after each learning. In machine learning, the down hill method is used to optimize our parameters. What we will do is just the same. The difference is that the effect of weights and bias on the output is more complex. We need choose a road in an abstract space to let the cost function decrease just like we go down in an abstract space.</p><p>So the partial derivative will be calculated. Some tricks will be used to let the change of the weight function and bias will always let the cost function decrease.</p><script type="math/tex; mode=display">\nabla C=(\frac{\partial C}{\partial v_{1}},\frac{\partial C}{\partial v_{2}}...)</script><script type="math/tex; mode=display">\Delta C\approx \nabla C \cdot\Delta \nu</script><p>But what’s really exciting about the equation is that it lets us see how to choose <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="3.084ex" height="1.62ex" role="img" focusable="false" viewBox="0 -716 1363 716"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D708" d="M74 431Q75 431 146 436T219 442Q231 442 231 434Q231 428 185 241L137 51H140L150 55Q161 59 177 67T214 86T261 119T312 165Q410 264 445 394Q458 442 496 442Q509 442 519 434T530 411Q530 390 516 352T469 262T388 162T267 70T106 5Q81 -2 71 -2Q66 -2 59 -1T51 1Q45 5 45 11Q45 13 88 188L132 364Q133 377 125 380T86 385H65Q59 391 59 393T61 412Q65 431 74 431Z"></path></g></g></g></svg></mjx-container> so as to make <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="3.604ex" height="1.67ex" role="img" focusable="false" viewBox="0 -716 1593 738"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g></g></g></svg></mjx-container> negative. In particular, suppose we choose</p><script type="math/tex; mode=display">\Delta \nu=-\eta \nabla C</script><p>where <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="1.124ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 497 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D702" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q156 442 175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336V326Q503 302 439 53Q381 -182 377 -189Q364 -216 332 -216Q319 -216 310 -208T299 -186Q299 -177 358 57L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> is a small, positive parameter (known as the learning rate). So <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="19.504ex" height="2.451ex" role="img" focusable="false" viewBox="0 -833.9 8620.7 1083.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(1870.8,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="mo" transform="translate(2926.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3704.6,0)"><path data-c="1D702" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q156 442 175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336V326Q503 302 439 53Q381 -182 377 -189Q364 -216 332 -216Q319 -216 310 -208T299 -186Q299 -177 358 57L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4201.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(4479.6,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(5312.6,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="msup" transform="translate(6072.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mn" transform="translate(311,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(7064.9,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mn" transform="translate(8120.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></p><p>and the vector should be updated like this</p><script type="math/tex; mode=display">\nu^{\prime}\rightarrow \nu-\eta \nabla C</script><p>However, for a neural networks, further derivation must be done to calculate the derivative of the weight and bias in each layers. Nielsen gives detailed explanation and proof.<a href="http://neuralnetworksanddeeplearning.com/chap2.html">Back Propagation Method</a></p><p>Here is a simple summary,<br><img src="http://neuralnetworksanddeeplearning.com/images/tikz21.png" alt=""></p><p>The backpropagation equations provide us with a way of computing the gradient of the cost function. Let’s explicitly write this out in the form of an algorithm:</p><ul><li>Input x: Set the corresponding activation a1 for the input layer.</li><li>Feedforward: For each l=2,3,…,L compute <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="15.325ex" height="2.117ex" role="img" focusable="false" viewBox="0 -853.7 6773.6 935.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1036.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2092.3,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="msup" transform="translate(3102,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(562,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(298,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1076,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5050.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(6050.8,0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="TeXAtom" transform="translate(462,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.465ex;" xmlns="http://www.w3.org/2000/svg" width="7.572ex" height="2.397ex" role="img" focusable="false" viewBox="0 -853.7 3346.8 1059.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="TeXAtom" transform="translate(562,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1100.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2156.3,0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(604,-197.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g></g></g></g></g></svg></mjx-container>.</li><li>Output error <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.937ex" role="img" focusable="false" viewBox="0 -846 1008.5 856"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g></g></g></g></svg></mjx-container>: Compute the vector <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="17.581ex" height="2.48ex" role="img" focusable="false" viewBox="0 -846 7770.6 1096"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1286.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2342.1,0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="TeXAtom" transform="translate(866,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g><g data-mml-node="mi" transform="translate(3632.2,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(4614.4,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msup" transform="translate(5114.6,0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(604,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5963.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6352.1,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7381.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</li><li>Backpropagate the error: For each l=L−1,L−2,…,2 compute <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="25.474ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 11259.5 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1015.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2071.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(2460.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2849.3,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(298,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1076,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msup" transform="translate(4762.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5732.5,0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(298,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1076,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7373.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7762.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8374.1,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msup" transform="translate(8874.3,0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(604,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9722.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(10111.8,0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="TeXAtom" transform="translate(498,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10870.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</li><li>Output: The gradient of the cost function is given by $\frac{\partial C}{\partial b<em>{j}^{l}}=\delta</em>{j}^{l}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.731ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 1649 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1129,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>\frac{\partial C}{\partial w<em>{jk}^{l}}=a</em>{k}^{l-1}\delta_{j}^{l}$.</li></ul><h2 id="Explanation-of-the-program"><a href="#Explanation-of-the-program" class="headerlink" title="Explanation of the program"></a>Explanation of the program</h2><p>Now I will focus on the program and give my own understanding of the function. I will follow the list of the program. The first is import necessary packages.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">network.py</span></span><br><span class="line"><span class="string">~~~~~~~~~~</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">A module to implement the stochastic gradient descent learning</span></span><br><span class="line"><span class="string">algorithm for a feedforward neural network.  Gradients are calculated</span></span><br><span class="line"><span class="string">using backpropagation.  Note that I have focused on making the code</span></span><br><span class="line"><span class="string">simple, easily readable, and easily modifiable.  It is not optimized,</span></span><br><span class="line"><span class="string">and omits many desirable features.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### Libraries</span></span><br><span class="line"><span class="comment"># Standard library</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># Third-party libraries</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><p>Then the Sigmoid function and derivation of Sigmoid function will be defined.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### Miscellaneous functions</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sigmoid</span>(<span class="params">z</span>):</span><br><span class="line">    <span class="string">"""The sigmoid function."""</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span>/(<span class="number">1.0</span>+np.exp(-z))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sigmoid_prime</span>(<span class="params">z</span>):</span><br><span class="line">    <span class="string">"""Derivative of the sigmoid function."""</span></span><br><span class="line">    <span class="keyword">return</span> sigmoid(z)*(<span class="number">1</span>-sigmoid(z))</span><br></pre></td></tr></table></figure><p>Then a class named network will be defined. And in this class,the <code>_init_</code> function is as follows<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, sizes</span>):</span><br><span class="line">        <span class="string">"""The list ``sizes`` contains the number of neurons in the</span></span><br><span class="line"><span class="string">        respective layers of the network.  For example, if the list</span></span><br><span class="line"><span class="string">        was [2, 3, 1] then it would be a three-layer network, with the</span></span><br><span class="line"><span class="string">        first layer containing 2 neurons, the second layer 3 neurons,</span></span><br><span class="line"><span class="string">        and the third layer 1 neuron.  The biases and weights for the</span></span><br><span class="line"><span class="string">        network are initialized randomly, using a Gaussian</span></span><br><span class="line"><span class="string">        distribution with mean 0, and variance 1.  Note that the first</span></span><br><span class="line"><span class="string">        layer is assumed to be an input layer, and by convention we</span></span><br><span class="line"><span class="string">        won't set any biases for those neurons, since biases are only</span></span><br><span class="line"><span class="string">        ever used in computing the outputs from later layers."""</span></span><br><span class="line">        self.num_layers = <span class="built_in">len</span>(sizes)</span><br><span class="line">        self.sizes = sizes</span><br><span class="line">        self.biases = [np.random.randn(y, <span class="number">1</span>) <span class="keyword">for</span> y <span class="keyword">in</span> sizes[<span class="number">1</span>:]]</span><br><span class="line">        self.weights = [np.random.randn(y, x)</span><br><span class="line">                        <span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(sizes[:-<span class="number">1</span>], sizes[<span class="number">1</span>:])]</span><br></pre></td></tr></table></figure></p><p>Be careful the use of <code>size[:-1],size[1:]</code> which means the matrix removed the last element and last element respectively. The use of zip is also new to me and <code>self.weights</code> is constructed by a series of matrix with different dimensions.</p><p>The  feedforward function that which update <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></svg></mjx-container> from <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.674ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 298 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g></svg></mjx-container> layer to <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="4.571ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 2020.4 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(520.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1520.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> layer </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">feedforward</span>(<span class="params">self, a</span>):</span><br><span class="line">    <span class="string">"""Return the output of the network if ``a`` is input."""</span></span><br><span class="line">    <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">        a = sigmoid(np.dot(w, a)+b)</span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><p>Here is the SGD main function</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SGD</span>(<span class="params">self, training_data, epochs, mini_batch_size, eta,</span></span><br><span class="line"><span class="params">            test_data=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="string">"""Train the neural network using mini-batch stochastic</span></span><br><span class="line"><span class="string">        gradient descent.  The ``training_data`` is a list of tuples</span></span><br><span class="line"><span class="string">        ``(x, y)`` representing the training inputs and the desired</span></span><br><span class="line"><span class="string">        outputs.  The other non-optional parameters are</span></span><br><span class="line"><span class="string">        self-explanatory.  If ``test_data`` is provided then the</span></span><br><span class="line"><span class="string">        network will be evaluated against the test data after each</span></span><br><span class="line"><span class="string">        epoch, and partial progress printed out.  This is useful for</span></span><br><span class="line"><span class="string">        tracking progress, but slows things down substantially."""</span></span><br><span class="line">        <span class="keyword">if</span> test_data: n_test = <span class="built_in">len</span>(test_data)</span><br><span class="line">        n = <span class="built_in">len</span>(training_data)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(epochs):</span><br><span class="line">            random.shuffle(training_data)</span><br><span class="line">            mini_batches = [</span><br><span class="line">                training_data[k:k+mini_batch_size]</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">0</span>, n, mini_batch_size)]</span><br><span class="line">            <span class="keyword">for</span> mini_batch <span class="keyword">in</span> mini_batches:</span><br><span class="line">                self.update_mini_batch(mini_batch, eta)</span><br><span class="line">            <span class="keyword">if</span> test_data:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">"Epoch {0}: {1} / {2}"</span>.<span class="built_in">format</span>(</span><br><span class="line">                    j, self.evaluate(test_data), n_test)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">"Epoch {0} complete"</span>.<span class="built_in">format</span>(j)</span><br></pre></td></tr></table></figure><p>The main training function. A test data will be used if needed. We give the training data which will be loaded use well defined function</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> mnist_loader</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>training_data, validation_data, test_data = \</span><br><span class="line"><span class="meta">... </span>mnist_loader.load_data_wrapper()</span><br></pre></td></tr></table></figure><p>This function will divide the step of training and show the progress and quality of the neural networks if we give the test data. The function <code>update_mini_batch</code> will update the weights and bias for a given training data.</p><p><code>update_mini_batch</code> function is defined as follows</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">update_mini_batch</span>(<span class="params">self, mini_batch, eta</span>):</span><br><span class="line">        <span class="string">"""Update the network's weights and biases by applying</span></span><br><span class="line"><span class="string">        gradient descent using backpropagation to a single mini batch.</span></span><br><span class="line"><span class="string">        The ``mini_batch`` is a list of tuples ``(x, y)``, and ``eta``</span></span><br><span class="line"><span class="string">        is the learning rate."""</span></span><br><span class="line">        nabla_b = [np.zeros(b.shape) <span class="keyword">for</span> b <span class="keyword">in</span> self.biases]</span><br><span class="line">        nabla_w = [np.zeros(w.shape) <span class="keyword">for</span> w <span class="keyword">in</span> self.weights]</span><br><span class="line">        <span class="keyword">for</span> x, y <span class="keyword">in</span> mini_batch:</span><br><span class="line">            delta_nabla_b, delta_nabla_w = self.backprop(x, y)</span><br><span class="line">            nabla_b = [nb+dnb <span class="keyword">for</span> nb, dnb <span class="keyword">in</span> <span class="built_in">zip</span>(nabla_b, delta_nabla_b)]</span><br><span class="line">            nabla_w = [nw+dnw <span class="keyword">for</span> nw, dnw <span class="keyword">in</span> <span class="built_in">zip</span>(nabla_w, delta_nabla_w)]</span><br><span class="line">        self.weights = [w-(eta/<span class="built_in">len</span>(mini_batch))*nw</span><br><span class="line">                        <span class="keyword">for</span> w, nw <span class="keyword">in</span> <span class="built_in">zip</span>(self.weights, nabla_w)]</span><br><span class="line">        self.biases = [b-(eta/<span class="built_in">len</span>(mini_batch))*nb</span><br><span class="line">                       <span class="keyword">for</span> b, nb <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, nabla_b)]</span><br></pre></td></tr></table></figure><p>The partial derivative for weights and biases will be defined first. Then the partial derivative will be calculated use the function <code>backprop</code>. And the new weights will bias will be updated. The most important part is the function <code>backprop</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">backprop</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="string">"""Return a tuple ``(nabla_b, nabla_w)`` representing the</span></span><br><span class="line"><span class="string">        gradient for the cost function C_x.  ``nabla_b`` and</span></span><br><span class="line"><span class="string">        ``nabla_w`` are layer-by-layer lists of numpy arrays, similar</span></span><br><span class="line"><span class="string">        to ``self.biases`` and ``self.weights``."""</span></span><br><span class="line">        nabla_b = [np.zeros(b.shape) <span class="keyword">for</span> b <span class="keyword">in</span> self.biases]</span><br><span class="line">        nabla_w = [np.zeros(w.shape) <span class="keyword">for</span> w <span class="keyword">in</span> self.weights]</span><br><span class="line">        <span class="comment"># feedforward</span></span><br><span class="line">        activation = x</span><br><span class="line">        activations = [x] <span class="comment"># list to store all the activations, layer by layer</span></span><br><span class="line">        zs = [] <span class="comment"># list to store all the z vectors, layer by layer</span></span><br><span class="line">        <span class="keyword">for</span> b, w <span class="keyword">in</span> <span class="built_in">zip</span>(self.biases, self.weights):</span><br><span class="line">            z = np.dot(w, activation)+b</span><br><span class="line">            zs.append(z)</span><br><span class="line">            activation = sigmoid(z)</span><br><span class="line">            activations.append(activation)</span><br><span class="line">        <span class="comment"># backward pass</span></span><br><span class="line">        delta = self.cost_derivative(activations[-<span class="number">1</span>], y) * \</span><br><span class="line">            sigmoid_prime(zs[-<span class="number">1</span>])</span><br><span class="line">        nabla_b[-<span class="number">1</span>] = delta</span><br><span class="line">        nabla_w[-<span class="number">1</span>] = np.dot(delta, activations[-<span class="number">2</span>].transpose())</span><br><span class="line">        <span class="comment"># Note that the variable l in the loop below is used a little</span></span><br><span class="line">        <span class="comment"># differently to the notation in Chapter 2 of the book.  Here,</span></span><br><span class="line">        <span class="comment"># l = 1 means the last layer of neurons, l = 2 is the</span></span><br><span class="line">        <span class="comment"># second-last layer, and so on.  It's a renumbering of the</span></span><br><span class="line">        <span class="comment"># scheme in the book, used here to take advantage of the fact</span></span><br><span class="line">        <span class="comment"># that Python can use negative indices in lists.</span></span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> xrange(<span class="number">2</span>, self.num_layers):</span><br><span class="line">            z = zs[-l]</span><br><span class="line">            sp = sigmoid_prime(z)</span><br><span class="line">            delta = np.dot(self.weights[-l+<span class="number">1</span>].transpose(), delta) * sp</span><br><span class="line">            nabla_b[-l] = delta</span><br><span class="line">            nabla_w[-l] = np.dot(delta, activations[-l-<span class="number">1</span>].transpose())</span><br><span class="line">        <span class="keyword">return</span> (nabla_b, nabla_w)</span><br></pre></td></tr></table></figure><p>This function is a realization of previous explanation of the back propagation methods. And finally, the two other functions</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">evaluate</span>(<span class="params">self, test_data</span>):</span><br><span class="line">    <span class="string">"""Return the number of test inputs for which the neural</span></span><br><span class="line"><span class="string">    network outputs the correct result. Note that the neural</span></span><br><span class="line"><span class="string">    network's output is assumed to be the index of whichever</span></span><br><span class="line"><span class="string">    neuron in the final layer has the highest activation."""</span></span><br><span class="line">    test_results = [(np.argmax(self.feedforward(x)), y)</span><br><span class="line">                    <span class="keyword">for</span> (x, y) <span class="keyword">in</span> test_data]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="built_in">int</span>(x == y) <span class="keyword">for</span> (x, y) <span class="keyword">in</span> test_results)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cost_derivative</span>(<span class="params">self, output_activations, y</span>):</span><br><span class="line">    <span class="string">"""Return the vector of partial derivatives \partial C_x /</span></span><br><span class="line"><span class="string">    \partial a for the output activations."""</span></span><br><span class="line">    <span class="keyword">return</span> (output_activations-y)</span><br></pre></td></tr></table></figure><p>which is very easy to understand.</p><h3 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use?"></a>How to use?</h3><p>This is really a good example of neural networks deep learning. To use this, you can direct download Michael Nielsen’s example. However, he writes this use python2, to use python3, you can use the another example by <a href="https://github.com/MichalDanielDobrzanski/DeepLearningPython35">MichalDanielDobrzanski</a></p><p>after downloading the repository, the file <code>network.py</code> is just like we shown above. The following is the use of the program</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xiail\Documents\Dropbox\Code\Python\Study\Neural-Networks\Study-<span class="number">1</span>\DeepL</span><br><span class="line">on35 (master -&gt; origin)                                                         </span><br><span class="line">λ python                                                                        </span><br><span class="line">Python <span class="number">3.7</span><span class="number">.2</span> (tags/v3<span class="number">.7</span><span class="number">.2</span>:9a3ffc0492, Dec <span class="number">23</span> <span class="number">2018</span>, <span class="number">23</span>:09:<span class="number">28</span>) [MSC v<span class="number">.1916</span> <span class="number">64</span> bit </span><br><span class="line"> win32                                                                          </span><br><span class="line"><span class="type">Type</span> <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.          </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> mnist_loader                                                         </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>training_data, validation_data, test_data = mnist_loader.load_data_wrapper()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> network                                                              </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>net = network.Network([<span class="number">784</span>, <span class="number">30</span>, <span class="number">10</span>])                                        </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>net.SGD(training_data, <span class="number">30</span>, <span class="number">10</span>, <span class="number">3.0</span>, test_data=test_data)                    </span><br><span class="line">Epoch <span class="number">0</span> : <span class="number">8254</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">1</span> : <span class="number">8367</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">2</span> : <span class="number">8449</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">3</span> : <span class="number">8483</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">4</span> : <span class="number">8517</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">5</span> : <span class="number">8533</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">6</span> : <span class="number">8538</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">7</span> : <span class="number">8541</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">8</span> : <span class="number">9448</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">9</span> : <span class="number">9450</span> / <span class="number">10000</span>                                                          </span><br><span class="line">Epoch <span class="number">10</span> : <span class="number">9446</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">11</span> : <span class="number">9475</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">12</span> : <span class="number">9456</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">13</span> : <span class="number">9473</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">14</span> : <span class="number">9447</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">15</span> : <span class="number">9483</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">16</span> : <span class="number">9501</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">17</span> : <span class="number">9501</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">18</span> : <span class="number">9502</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">19</span> : <span class="number">9501</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">20</span> : <span class="number">9485</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">21</span> : <span class="number">9491</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">22</span> : <span class="number">9519</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">23</span> : <span class="number">9499</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">24</span> : <span class="number">9530</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">25</span> : <span class="number">9504</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">26</span> : <span class="number">9502</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">27</span> : <span class="number">9521</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">28</span> : <span class="number">9506</span> / <span class="number">10000</span>                                                         </span><br><span class="line">Epoch <span class="number">29</span> : <span class="number">9498</span> / <span class="number">10000</span>                                                         </span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> DeepLearning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora 使用技巧</title>
      <link href="/2020/03/02/C_%E6%95%99%E7%A8%8B-Typora%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/03/02/C_%E6%95%99%E7%A8%8B-Typora%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-Typora"><a href="#Markdown-Typora" class="headerlink" title="Markdown #Typora"></a>Markdown #Typora</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Typora是一款很多人推荐的markdown编辑器，其对Markdown的支持真的是非常全！我以前试过Sublime, VS Code, Vnote等各种工具，这些软件都各有优劣。其中Vnote我觉得是做的比较良心的，特别是对搜索功能以及输入图片、表格的功能，缺点就是支持打字的手感差一些，而且预览模式也差一些。</p><p>通过学习，我发现typora可以做到很多事情，除了一般的插入图片、代码块、引用外，还有好多其他的功能，详细的介绍可以直接访问 <a href="http://support.typora.io/Markdown-Reference/">Markdown Reference</a>. 下面是官网的一些教程，我直接Copy了一遍。</p><h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p><strong>Markdown</strong> is created by <a href="http://daringfireball.net/">Daring Fireball</a>; the original guideline is <a href="http://daringfireball.net/projects/markdown/syntax">here</a>. Its syntax, however, varies between different parsers or editors. <strong>Typora</strong> uses <a href="https://help.github.com/articles/github-flavored-markdown/">GitHub Flavored Markdown</a>.</p><ul><li><a href="http://support.typora.io/Markdown-Reference/#overview">Overview</a></li><li>Block Elements<ul><li><a href="http://support.typora.io/Markdown-Reference/#paragraph-and-line-breaks">Paragraph and line breaks</a></li><li><a href="http://support.typora.io/Markdown-Reference/#headers">Headers</a></li><li><a href="http://support.typora.io/Markdown-Reference/#blockquotes">Blockquotes</a></li><li><a href="http://support.typora.io/Markdown-Reference/#lists">Lists</a></li><li><a href="http://support.typora.io/Markdown-Reference/#task-list">Task List</a></li><li><a href="http://support.typora.io/Markdown-Reference/#fenced-code-blocks">(Fenced) Code Blocks</a></li><li><a href="http://support.typora.io/Markdown-Reference/#math-blocks">Math Blocks</a></li><li><a href="http://support.typora.io/Markdown-Reference/#tables">Tables</a></li><li><a href="http://support.typora.io/Markdown-Reference/#footnotes">Footnotes</a></li><li><a href="http://support.typora.io/Markdown-Reference/#horizontal-rules">Horizontal Rules</a></li><li><a href="http://support.typora.io/Markdown-Reference/#yaml-front-matter">YAML Front Matter</a></li><li><a href="http://support.typora.io/Markdown-Reference/#table-of-contents-toc">Table of Contents (TOC)</a></li></ul></li><li>Span Elements<ul><li>Links<ul><li><a href="http://support.typora.io/Markdown-Reference/#inline-links">Inline Links</a></li><li><a href="http://support.typora.io/Markdown-Reference/#internal-links">Internal Links</a></li><li><a href="http://support.typora.io/Markdown-Reference/#reference-links">Reference Links</a></li></ul></li><li><a href="http://support.typora.io/Markdown-Reference/#urls">URLs</a></li><li><a href="http://support.typora.io/Markdown-Reference/#images">Images</a></li><li><a href="http://support.typora.io/Markdown-Reference/#emphasis">Emphasis</a></li><li><a href="http://support.typora.io/Markdown-Reference/#strong">Strong</a></li><li><a href="http://support.typora.io/Markdown-Reference/#code">Code</a></li><li><a href="http://support.typora.io/Markdown-Reference/#strikethrough">Strikethrough</a></li><li><a href="http://support.typora.io/Markdown-Reference/#emoji-happy">Emoji :happy:</a></li><li><a href="http://support.typora.io/Markdown-Reference/#inline-math">Inline Math</a></li><li><a href="http://support.typora.io/Markdown-Reference/#subscript">Subscript</a></li><li><a href="http://support.typora.io/Markdown-Reference/#superscript">Superscript</a></li><li><a href="http://support.typora.io/Markdown-Reference/#highlight">Highlight</a></li></ul></li><li>HTML<ul><li><a href="http://support.typora.io/Markdown-Reference/#underlines">Underlines</a></li><li><a href="http://support.typora.io/Markdown-Reference/#embed-contents">Embed Contents</a></li><li><a href="http://support.typora.io/Markdown-Reference/#video">Video</a></li><li><a href="http://support.typora.io/Markdown-Reference/#other-html-support">Other HTML Support</a></li></ul></li></ul><h2 id="Block-Elements"><a href="#Block-Elements" class="headerlink" title="Block Elements"></a>Block Elements</h2><h3 id="Paragraph-and-line-breaks"><a href="#Paragraph-and-line-breaks" class="headerlink" title="Paragraph and line breaks"></a>Paragraph and line breaks</h3><p>A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by two or more blank lines. In Typora, you only need one blank line (press <code>Return</code> once) to create a new paragraph.</p><p>Press <code>Shift</code> + <code>Return</code> to create a single line break. Most other markdown parsers will ignore single line breaks, so in order to make other markdown parsers recognize your line break, you can leave two spaces at the end of the line, or insert <code> </code>.</p><h3 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h3><p>Headers use 1-6 hash (<code>#</code>) characters at the start of the line, corresponding to header levels 1-6. For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># This is an H1</span><br><span class="line"></span><br><span class="line">## This is an H2</span><br><span class="line"></span><br><span class="line">###### This is an H6</span><br></pre></td></tr></table></figure><p>In Typora, input ‘#’s followed by title content, and press <code>Return</code> key will create a header. Or type ⌘1 to ⌘6 as a shortcut.</p><h3 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h3><p>Markdown uses email-style &gt; characters for block quoting. They are presented as:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. This is first paragraph.</span><br><span class="line">&gt;</span><br><span class="line">&gt; This is second pragraph. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.</span><br></pre></td></tr></table></figure><p>In Typora, typing ‘&gt;’ followed by your quote contents will generate a quote block. Typora will insert a proper ‘&gt;’ or line break for you. Nested block quotes (a block quote inside another block quote) by adding additional levels of ‘&gt;’.</p><h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><p>Typing <code>* list item 1</code> will create an unordered list. (The <code>*</code> symbol can be replace with <code>+</code> or <code>-</code>.)</p><p>Typing <code>1. list item 1</code> will create an ordered list.</p><p>For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">## un-ordered list</span><br><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br><span class="line"></span><br><span class="line">## ordered list</span><br><span class="line">1.  Red</span><br><span class="line">2. Green</span><br><span class="line">3.Blue</span><br></pre></td></tr></table></figure><h3 id="Task-List"><a href="#Task-List" class="headerlink" title="Task List"></a>Task List</h3><p>Task lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- [ ] a task list item</span><br><span class="line">- [ ] list syntax required</span><br><span class="line">- [ ] normal **formatting**, @mentions, #1234 refs</span><br><span class="line">- [ ] incomplete</span><br><span class="line">- [x] completed</span><br></pre></td></tr></table></figure><p>You can change the complete/incomplete state by clicking on the checkbox before the item.</p><h3 id="Fenced-Code-Blocks"><a href="#Fenced-Code-Blocks" class="headerlink" title="(Fenced) Code Blocks"></a>(Fenced) Code Blocks</h3><p>Typora only supports fences in GitHub Flavored Markdown, not the original code block style.</p><p>Using fences is easy: type <code>and press `return`. Add an optional language identifier after</code> and Typora runs it through syntax highlighting:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Here's an example:</span><br><span class="line"></span><br><span class="line">​```</span><br><span class="line">function test() {</span><br><span class="line">  console.log("notice the blank line before this function?");</span><br><span class="line">}</span><br><span class="line">​```</span><br><span class="line"></span><br><span class="line">syntax highlighting:</span><br><span class="line">​```ruby</span><br><span class="line">require 'redcarpet'</span><br><span class="line">markdown = Redcarpet.new("Hello World!")</span><br><span class="line">puts markdown.to_html</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><h3 id="Math-Blocks"><a href="#Math-Blocks" class="headerlink" title="Math Blocks"></a>Math Blocks</h3><p>You can render <em>LaTeX</em> mathematical expressions using <strong>MathJax</strong>.</p><p>To add a mathematical expression, enter <mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="0.036ex" role="img" focusable="false" viewBox="0 0 16 16"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"></g></g></svg></mjx-container> and press the ‘Return’ key. This will trigger an input field which accepts <em>Tex/LaTex</em> source. For example:</p><p>V1×V2=∣∣∣∣∣i∂X∂u∂X∂vj∂Y∂u∂Y∂vk00∣∣∣∣∣V1×V2=|ijk∂X∂u∂Y∂u0∂X∂v∂Y∂v0|</p><p>In the markdown source file, the math block is a <em>LaTeX</em> expression wrapped by a pair of ‘$$’ marks:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}</span><br><span class="line">\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\</span><br><span class="line">\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\</span><br><span class="line">\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\</span><br><span class="line">\end{vmatrix}</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>You can find more details <a href="http://support.typora.io/Math/">here</a>.</p><h3 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h3><p>Standard Markdown has been extended in several ways to add table support., including by GFM. Typora supports this with a graphical interface, or writing the source code directly.</p><p>Enter <code>| First Header | Second Header |</code> and press the <code>return</code> key. This will create a table with two columns.</p><p>After a table is created, placing the focus on that table will open up a toolbar for the table where you can resize, align, or delete the table. You can also use the context menu to copy and add/delete individual columns/rows.</p><p>The full syntax for tables is described below, but it is not necessary to know the full syntax in detail as the markdown source code for tables is generated automatically by Typora.</p><p>In markdown source code, they look like:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| First Header  | Second Header |</span><br><span class="line">| ------------- | ------------- |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br></pre></td></tr></table></figure><p>You can also include inline Markdown such as links, bold, italics, or strikethrough in the table.</p><p>By including colons (<code>:</code>) within the header row, you can set text in that column to be left-aligned, right-aligned, or center-aligned:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Left-Aligned  | Center Aligned  | Right Aligned |</span><br><span class="line">| :------------ |:---------------:| -----:|</span><br><span class="line">| col 3 is      | some wordy text | $1600 |</span><br><span class="line">| col 2 is      | centered        |   $12 |</span><br><span class="line">| zebra stripes | are neat        |    $1 |</span><br></pre></td></tr></table></figure><p>A colon on the left-most side indicates a left-aligned column; a colon on the right-most side indicates a right-aligned column; a colon on both sides indicates a center-aligned column.</p><h3 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h3><p>MultiMarkdown extends standard Markdown to provide two ways to add footnotes.</p><p>You can create <strong>reference footnotes</strong> like this<a href="http://support.typora.io/Markdown-Reference/#fn:fn1">1</a> and this<a href="http://support.typora.io/Markdown-Reference/#fn:fn2">2</a>.</p><p>will produce:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">You can create footnotes like this[^fn1] and this[^fn2].</span><br><span class="line"></span><br><span class="line">[^fn1]: Here is the *text* of the first **footnote**.</span><br><span class="line">[^fn2]: Here is the *text* of the second **footnote**.</span><br></pre></td></tr></table></figure><p>Hover over the ‘fn1’ or ‘fn2’ superscript to see content of the footnote. You can use whatever unique identified you like as the footnote marker (e.g. “fn1”).</p><p>Or you can create <strong>inline footnotes</strong>, like this^[Here is the <em>text</em> of the first <strong>footnote</strong>.] and this[Here is the <em>text</em> of the second <strong>footnote</strong>.].</p><p>Hover over the footnote superscripts to see content of the footnote.</p><h3 id="Horizontal-Rules"><a href="#Horizontal-Rules" class="headerlink" title="Horizontal Rules"></a>Horizontal Rules</h3><p>Entering <code>***</code> or <code>---</code> on a blank line and pressing <code>return</code> will draw a horizontal line.</p><hr><h3 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h3><p>Typora now supports <a href="http://jekyllrb.com/docs/frontmatter/">YAML Front Matter</a>. Enter <code>---</code> at the top of the article and then press <code>Return</code> to introduce a metadata block. Alternatively, you can insert a metadata block from the top menu of Typora.</p><h3 id="Table-of-Contents-TOC"><a href="#Table-of-Contents-TOC" class="headerlink" title="Table of Contents (TOC)"></a>Table of Contents (TOC)</h3><p>Enter <code>[toc]</code> and press the <code>Return</code> key to create a “Table of Contents” section. The TOC extracts all headers from the document, and its contents are updated automatically as you add to the document.</p><h2 id="Span-Elements"><a href="#Span-Elements" class="headerlink" title="Span Elements"></a>Span Elements</h2><p>Span elements will be parsed and rendered right after typing. Moving the cursor in middle of those span elements will expand those elements into markdown source. Below is an explanation of the syntax for each span element.</p><h3 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h3><p>Markdown supports two styles of links: inline and reference.</p><p>In both styles, the link text is delimited by [square brackets].</p><h4 id="Inline-Links"><a href="#Inline-Links" class="headerlink" title="Inline Links"></a>Inline Links</h4><p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ "Title") inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>This is <a href="http://example.com/&quot;Title&quot;">an example</a> inline link. (<code>This is [</code>](<a href="http://example.com/">http://example.com/</a>))</p><p><a href="http://example.net/">This link</a> has no title attribute. (<code>[This link](http://example.net/) has no</code>)</p><h4 id="Internal-Links"><a href="#Internal-Links" class="headerlink" title="Internal Links"></a>Internal Links</h4><p>To create an internal link that creates a ‘bookmark’ that allow you to jump to that section after clicking on it, use the name of the header element as the href. For example:</p><p>Hold down Cmd (on Windows: Ctrl) and click on <a href="http://support.typora.io/Markdown-Reference/#block-elements">this link</a> to jump to header <code>Block Elements</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hold down Cmd (on Windows: Ctrl) and click on [this link](#block-elements) to jump to header `Block Elements`. </span><br></pre></td></tr></table></figure><h4 id="Reference-Links"><a href="#Reference-Links" class="headerlink" title="Reference Links"></a>Reference Links</h4><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br><span class="line"></span><br><span class="line">Then, anywhere in the document, you define your link label on a line by itself like this:</span><br><span class="line"></span><br><span class="line">[id]: http://example.com/  "Optional Title Here"</span><br></pre></td></tr></table></figure><p>In Typora, they will be rendered like so:</p><p>This is <a href="http://example.com/">an example</a> reference-style link.</p><p>The implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — for example, to link the word “Google” to the google.com web site, you could simply write:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br><span class="line">And then define the link:</span><br><span class="line"></span><br><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>In Typora, clicking the link will expand it for editing, and command+click will open the hyperlink in your web browser.</p><h3 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h3><p>Typora allows you to insert URLs as links, wrapped by <code>&lt;</code>brackets<code>&gt;</code>. For example `` becomes <a href="mailto:i@typora.io">i@typora.io</a>.</p><p>Typora will also automatically link standard URLs (for example: www.google.com) without these brackets.</p><h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><p>Images have similar syntax as links, but they require an additional <code>!</code> char before the start of the link. The syntax for inserting an image looks like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![Alt text](/path/to/img.jpg)</span><br><span class="line"></span><br><span class="line">![Alt text](/path/to/img.jpg "Optional title")</span><br></pre></td></tr></table></figure><p>You are able to use drag and drop to insert an image from an image file or your web browser. You can modify the markdown source code by clicking on the image. A relative path will be used if the image that is added using drag and drop is in same directory or sub-directory as the document you’re currently editing.</p><p>If you’re using markdown for building websites, you may specify a URL prefix for the image preview on your local computer with property <code>typora-root-url</code> in YAML Front Matter. For example, Enter <code>typora-root-url:/User/Abner/Website/typora.io/</code> in YAML Front Matter, and then <code>![alt](/blog/img/test.png)</code> will be treated as <code>![alt](file:///User/Abner/Website/typora.io/blog/img/test.png)</code> in Typora.</p><p><img src="http://typora.io/img/drag-img.gif" alt="drag and drop image"></p><h3 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h3><p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML `` tag. For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br></pre></td></tr></table></figure><p>produces:</p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p>GFM will ignore underscores in words, which is commonly used in code and names, like this:</p><blockquote><p>wow_great_stuff</p><p>do_this_and_do_that_and_another_thing.</p></blockquote><p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it with a backslash character:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><p>Typora recommends using the <code>*</code> symbol.</p><h3 id="Strong"><a href="#Strong" class="headerlink" title="Strong"></a>Strong</h3><p>A double <code>*</code> or <code>_</code> will cause its enclosed contents to be wrapped with an HTML `` tag, e.g:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>produces:</p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><p>Typora recommends using the <code>**</code> symbol.</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>To indicate an inline span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use the `printf()` function.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>Use the <code>printf()</code> function.</p><h3 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h3><p>GFM adds syntax to create strikethrough text, which is missing from standard Markdown.</p><p><code>~~Mistaken text.~~</code> becomes <del>Mistaken text.</del></p><h3 id="Emoji-happy"><a href="#Emoji-happy" class="headerlink" title="Emoji :happy:"></a>Emoji :happy:</h3><p>Enter emoji with syntax <code>:smile:</code>. To make it easier, an auto-complete helper will pop up after typing <code>:</code> and the start of an emoji name.</p><p>Entering UTF-8 emoji characters directly is also supported by going to <code>Edit</code> -&gt; <code>Emoji &amp; Symbols</code> in the menu bar.</p><h3 id="Inline-Math"><a href="#Inline-Math" class="headerlink" title="Inline Math"></a>Inline Math</h3><p>To use this feature, please enable it first in the <code>Markdown</code> tab of the preference panel. Then, use <script type="math/tex">` to wrap a LaTeX command. For example: `$\lim_{x \to \infty} \exp(-x) = 0</script>.</p><p>To trigger inline preview for inline math: input “$”, then press the <code>ESC</code> key, then input a TeX command.</p><p>You can find more details <a href="http://support.typora.io/Math/">here</a>.</p><h3 id="Subscript"><a href="#Subscript" class="headerlink" title="Subscript"></a>Subscript</h3><p>To use this feature, please enable it first in the <code>Markdown</code> tab of the preference panel. Then, use <code>~</code> to wrap subscript content. For example: <code>H~2~O</code>, <code>X~long\ text~</code>/</p><h3 id="Superscript"><a href="#Superscript" class="headerlink" title="Superscript"></a>Superscript</h3><p>To use this feature, please enable it first in the <code>Markdown</code> tab of the preference panel. Then, use <code>^</code> to wrap superscript content. For example: <code>X^2^</code>.</p><h3 id="Highlight"><a href="#Highlight" class="headerlink" title="Highlight"></a>Highlight</h3><p>To use this feature, please enable it first in the <code>Markdown</code> tab of the preference panel. Then, use <code>==</code> to wrap highlight content. For example: <code>==highlight==</code>.</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>You can use HTML to style content what pure Markdown does not support. For example, use <code>this text is red</code> to add text with red color.</p><h3 id="Underlines"><a href="#Underlines" class="headerlink" title="Underlines"></a>Underlines</h3><p>Underline isn’t specified in Markdown of GFM, but can be produced by using underline HTML tags:</p><p><code>Underline</code> becomes Underline.</p><h3 id="Embed-Contents"><a href="#Embed-Contents" class="headerlink" title="Embed Contents"></a>Embed Contents</h3><p>Some websites provide iframe-based embed code which you can also paste into Typora. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">'265'</span> <span class="attr">scrolling</span>=<span class="string">'no'</span> <span class="attr">title</span>=<span class="string">'Fancy Animated SVG Menu'</span> <span class="attr">src</span>=<span class="string">'http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2'</span> <span class="attr">frameborder</span>=<span class="string">'no'</span> <span class="attr">allowtransparency</span>=<span class="string">'true'</span> <span class="attr">allowfullscreen</span>=<span class="string">'true'</span> <span class="attr">style</span>=<span class="string">'width: 100%;'</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>You can use the `` HTML tag to embed videos. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"xxx.mp4"</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Other-HTML-Support"><a href="#Other-HTML-Support" class="headerlink" title="Other HTML Support"></a>Other HTML Support</h3><p>You can find more details <a href="http://support.typora.io/HTML/">here</a>.</p><ol><li>Here is the <em>text</em> of the first <strong>footnote</strong>. <a href="http://support.typora.io/Markdown-Reference/#fnref:fn1">↩</a></li><li>Here is the <em>text</em> of the second <strong>footnote</strong>. <a href="http://support.typora.io/Markdown-Reference/#fnref:fn2">↩</a></li></ol><h1 id="Math-and-Academic-Functions"><a href="#Math-and-Academic-Functions" class="headerlink" title="Math and Academic Functions"></a>Math and Academic Functions</h1><p>August 14, 2018 by typora.io</p><p>Typora supports rendering normal mathematics using Tex/LaTeX syntax. The rendering process is processed by <a href="https://www.mathjax.org/">MathJax</a>.</p><p><strong>Table of Contents</strong></p><ul><li><a href="http://support.typora.io/Math/#math-block-display-math">Math Block (Display Math)</a></li><li><a href="http://support.typora.io/Math/#inline-math">Inline Math</a></li><li><a href="http://support.typora.io/Math/#tex-commands-available-in-typora">TeX Commands available in Typora</a></li><li><a href="http://support.typora.io/Math/#chemistry-expressions">Chemistry Expressions</a></li><li><a href="http://support.typora.io/Math/#cross-reference">Cross Reference</a></li><li><a href="http://support.typora.io/Math/#auto-numbering">Auto Numbering</a></li><li>Troubleshooting<ul><li><a href="http://support.typora.io/Math/#force-refresh">Force Refresh</a></li></ul></li><li><a href="http://support.typora.io/Math/#limitations">Limitations</a></li></ul><h2 id="Math-Block-Display-Math"><a href="#Math-Block-Display-Math" class="headerlink" title="Math Block (Display Math)"></a>Math Block (Display Math)</h2><p>Math blocks are LaTeX expressions wrapped by <mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="0.036ex" role="img" focusable="false" viewBox="0 0 16 16"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"></g></g></svg></mjx-container> mark and line break, for example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin{align<span class="emphasis">*}</span></span><br><span class="line"><span class="emphasis">y = y(x,t) &amp;= A e^{i\theta} \\</span></span><br><span class="line"><span class="emphasis">&amp;= A (\cos \theta + i \sin \theta) \\</span></span><br><span class="line"><span class="emphasis">&amp;= A (\cos(kx - \omega t) + i \sin(kx - \omega t)) \\</span></span><br><span class="line"><span class="emphasis">&amp;= A\cos(kx - \omega t) + i A\sin(kx - \omega t)  \\</span></span><br><span class="line"><span class="emphasis">&amp;= A\cos \Big(\frac{2\pi}{\lambda}x - \frac{2\pi v}{\lambda} t \Big) + i A\sin \Big(\frac{2\pi}{\lambda}x - \frac{2\pi v}{\lambda} t \Big)  \\</span></span><br><span class="line"><span class="emphasis">&amp;= A\cos \frac{2\pi}{\lambda} (x - v t) + i A\sin \frac{2\pi}{\lambda} (x - v t)</span></span><br><span class="line"><span class="emphasis">\end{align*</span>}</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>will be rendered as</p><p>y=y(x,t)=Aeiθ=A(cosθ+isinθ)=A(cos(kx−ωt)+isin(kx−ωt))=Acos(kx−ωt)+iAsin(kx−ωt)=Acos(2πλx−2πvλt)+iAsin(2πλx−2πvλt)=Acos2πλ(x−vt)+iAsin2πλ(x−vt)y=y(x,t)=Aeiθ=A(cos⁡θ+isin⁡θ)=A(cos⁡(kx−ωt)+isin⁡(kx−ωt))=Acos⁡(kx−ωt)+iAsin⁡(kx−ωt)=Acos⁡(2πλx−2πvλt)+iAsin⁡(2πλx−2πvλt)=Acos⁡2πλ(x−vt)+iAsin⁡2πλ(x−vt)</p><p>In typora, you could just press <mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="0.036ex" role="img" focusable="false" viewBox="0 0 16 16"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"></g></g></svg></mjx-container> and <code>Return</code> key to input a math block, in input mode, use Up/Down arrow key or <code>Command</code>/<code>Ctrl</code> + <code>Renturn</code> key to finish editing, or just click the ✓ button, or somewhere else.</p><h2 id="Inline-Math-1"><a href="#Inline-Math-1" class="headerlink" title="Inline Math"></a>Inline Math</h2><p>First of all, please enable <strong>inline math</strong> feature from preferences panels -&gt; <em>Markdown</em> section. Preferences panel can be opened From menu bar: <code>File</code> -&gt; <code>Preferences...</code>, or use shortcut key — <code>command</code>/<code>ctrl</code> + <code>,</code>. This settings will be applied after Typora restarts.</p><p><img src="http://support.typora.io/media/math/Snip20180818_2.png" alt="img"></p><p>Inline math use syntax like this <mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="0.036ex" role="img" focusable="false" viewBox="0 0 16 16"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"></g></g></svg></mjx-container>, e.g: <code>f = \frac{2 \pi}{T}$</code>.</p><h2 id="TeX-Commands-available-in-Typora"><a href="#TeX-Commands-available-in-Typora" class="headerlink" title="TeX Commands available in Typora"></a>TeX Commands available in Typora</h2><p>You could find the all supported TeX commands in <a href="http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands">http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands</a>.</p><p>You could add new commands using <code>\def</code> or<code>\newcommand</code>. For example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\def\bold#1</span><br><span class="line"></span><br><span class="line">\bold{this\ is\ now\ bold}</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h2 id="Chemistry-Expressions"><a href="#Chemistry-Expressions" class="headerlink" title="Chemistry Expressions"></a>Chemistry Expressions</h2><p>Typora has the built-in <a href="https://mhchem.github.io/MathJax-mhchem/">mhchem</a> extension, which can be used to render Chemistry Expressions, you could use like this:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\ce{CH4 + 2 $\left( \ce{O2 + 79/21 N2} \right)$}$</span><br></pre></td></tr></table></figure><p>Which will be rendered as<img src="http://support.typora.io/media/math/Snip20180815_1.png" alt="img"></p><p>For more details, please refer <a href="https://mhchem.github.io/MathJax-mhchem/">https://mhchem.github.io/MathJax-mhchem/</a>.</p><h2 id="Cross-Reference"><a href="#Cross-Reference" class="headerlink" title="Cross Reference"></a>Cross Reference</h2><p>Typora supports TeX-style reference syntax, for example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Here is a labeled equation:</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">x+1\over\sqrt{1-x^2}\label{ref1}</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">This is a referece : $\ref{ref1}$</span><br></pre></td></tr></table></figure><p>This is a simple example, however, when we want to cite a multilined equations, we should enter the following command</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#### case 1</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">\begin{equation}</span><br><span class="line">\begin{split}</span><br><span class="line">x^2&amp;=y+1\\&amp;=y+1</span><br><span class="line">\end{split}</span><br><span class="line">\end{equation}\label{one}</span><br><span class="line">$$</span><br><span class="line">reference : $\eqref{one}$</span><br></pre></td></tr></table></figure><h4 id="case-1"><a href="#case-1" class="headerlink" title="case 1"></a>case 1</h4><script type="math/tex; mode=display">\begin{equation}\begin{split}x^2&=y+1\\&=y+1\end{split}\end{equation}\label{one}</script><p>reference : <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2194 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><a href="#"><g data-mml-node="mrow" class=" MathJax_ref"><rect data-hitbox="true" fill="none" stroke="none" pointer-events="all" width="2194" height="1000" y="-250"></rect><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(389,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(861,0)"></path><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z" transform="translate(1333,0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(1805,0)"></path></g></g></a></g></g></svg></mjx-container>.</p><p>This was from the discussion in <a href="https://github.com/typora/typora-issues/issues/1623">Github</a></p><h2 id="Auto-Numbering"><a href="#Auto-Numbering" class="headerlink" title="Auto Numbering"></a>Auto Numbering</h2><p>Typora supports auto-numbering math blocks. To turn on this feature, please open preferences panel, and enable “Auto Numbering Math Equations” under “Markdown” section.</p><p><img src="http://support.typora.io/media/math/Snip20180818_4.png" alt="img"></p><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><h3 id="Force-Refresh"><a href="#Force-Refresh" class="headerlink" title="Force Refresh"></a>Force Refresh</h3><p>When Math rendering goes wrong, like output math too wild/narrow, or equation numbering becomes incorrect, you can triple force refresh for all math from <code>Edit</code> → <code>Math Tools</code> menu.</p><h2 id="Limitations"><a href="#Limitations" class="headerlink" title="Limitations"></a>Limitations</h2><ul><li>MathJax support a limited subsets of all LaTeX commands (references: <a href="http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands">http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands</a>).</li><li>Not all export formats supports math, and some commands/features of math/LaTeX would become unavailable after export.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>平面波在双层介质的传播学性质</title>
      <link href="/2020/02/26/E_%E7%89%A9%E7%90%86-%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%9C%A8%E5%8F%8C%E5%B1%82%E4%BB%8B%E8%B4%A8%E7%9A%84%E4%BC%A0%E6%92%AD%E5%AD%A6%E6%80%A7%E8%B4%A8/"/>
      <url>/2020/02/26/E_%E7%89%A9%E7%90%86-%E5%B9%B3%E9%9D%A2%E6%B3%A2%E5%9C%A8%E5%8F%8C%E5%B1%82%E4%BB%8B%E8%B4%A8%E7%9A%84%E4%BC%A0%E6%92%AD%E5%AD%A6%E6%80%A7%E8%B4%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Optics"><a href="#Optics" class="headerlink" title="Optics"></a>Optics</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>目前我们课题组的实验基本都是片上的一些实验，实际的实验中片上会有一些光学微纳元件，如量子点、金纳米颗粒等。我最近需要计算片上的散射、透射性质，为了增加结果的精度，背景场最好是输入解析的表达式。将解析表达式输入进去COMSOL也得格外注意。</p><h2 id="关系推导"><a href="#关系推导" class="headerlink" title="关系推导"></a>关系推导</h2><h3 id="边界条件以及平面波的基本性质"><a href="#边界条件以及平面波的基本性质" class="headerlink" title="边界条件以及平面波的基本性质"></a>边界条件以及平面波的基本性质</h3><p>对于任意的平面波，当其在介质表面发生透射、反射时，由于其偏振方向和入射面的方向的不同，可以分两种情况来讨论</p><ul><li>S偏振， 电场与入射面垂直，如下面的左图所示</li><li>P偏振，电场与入射面平行，如下面的右图所示</li></ul><p>注意下面的图的正方向规定。因为不同的规定最后的表达式会有正负号的区别，我接下来的所有推导都是按照下面的图来的。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200220133639360_19041.png" alt="不同偏振平面波入射示意图"></p><p>即任意的平面波<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.729ex" height="2.45ex" role="img" focusable="false" viewBox="0 -1083 764 1083"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(471.8,269) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container>可以写为S偏振和P偏振的合成</p><script type="math/tex; mode=display">\vec{E}=\vec{E}^{s}+\vec{E}^{p}</script><p>我们假设一平面波从介质1入射到介质2，我们规定<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.937ex" role="img" focusable="false" viewBox="0 -845 600 856"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(300,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container>的方向为由介质2指向介质1，则电场和磁场需要满足对应的边界条件</p><script type="math/tex; mode=display">\vec{n}\times (\vec{E}_{1}-\vec{E}_{2})=0</script><script type="math/tex; mode=display">\vec{n}\cdot (\vec{D}_{1}-\vec{D}_{2})=\sigma</script><script type="math/tex; mode=display">\vec{n}\times (\vec{H}_{1}-\vec{H}_{2})=\vec{K}</script><script type="math/tex; mode=display">\vec{n}\cdot (\vec{B}_{1}-\vec{B}_{2})=0</script><p>根据上图所示的定义，我们可以将场和波矢分别分解。无论是P偏振还是S偏振，都可以将波矢写为</p><script type="math/tex; mode=display">\vec{k}_{1}=(k_x,k_y,k_{z1})</script><script type="math/tex; mode=display">\vec{k}_{2}=(k_x,k_y,k_{z2})</script><p>横向的波矢<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="7.198ex" height="2.364ex" role="img" focusable="false" viewBox="0 -750 3181.6 1045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(554,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(1397.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1842.1,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(554,-150) scale(0.707)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2792.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>是连续的，可以定义一个横向的波数</p><script type="math/tex; mode=display">k_{t}=\sqrt{k_{x}^2+k_{y}^2}=k_{1}\sin{\theta_{1}}</script><p>为了得出地磁场的反射、透射性质，我们需要根据边界条件来分析。我们定义在介质1的入射电场为</p><script type="math/tex; mode=display">\vec{E}_{1}=\vec{E}_{1}^{\prime}e^{i\vec{k}\vec{r}-i\omega t}</script><p>另外，需要强调的是折射率的定义、速度的定义，平面波在介质中的传播速度为</p><script type="math/tex; mode=display">\nu=\sqrt{\frac{1}{\varepsilon\mu}}=c/n</script><p>即折射率可以表示为</p><script type="math/tex; mode=display">n=\sqrt{\varepsilon\mu}\cdot c</script><p>对于平面波来说，其电场和磁场的关系为</p><script type="math/tex; mode=display">E=B\nu=B\sqrt{\frac{1}{\varepsilon\mu}}</script><p>而平面波的功率密度可以表示为</p><script type="math/tex; mode=display">S=E\times H=E\cdot B/\mu=E^2\sqrt{\frac{\varepsilon}{\mu}}</script><p>平均功率密度可以表示为</p><script type="math/tex; mode=display">\langle S \rangle=\frac{1}{2}\text{Re}\{E\times H^{*}\}=\frac{1}{2}\sqrt{\frac{\varepsilon}{\mu}}|E|^2</script><h3 id="S偏振"><a href="#S偏振" class="headerlink" title="S偏振"></a>S偏振</h3><p>对于S偏振，首先是电场<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.729ex" height="2.45ex" role="img" focusable="false" viewBox="0 -1083 764 1083"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(471.8,269) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container>切向分量连续</p><script type="math/tex; mode=display">E_{1}+E_{1r}=E_{2}=E_{1t}</script><p>然后是磁场<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g></g></g></svg></mjx-container>切向分量连续</p><script type="math/tex; mode=display">-\frac{B_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{B_{1r}}{\mu_{1}}\cos(\theta_{1})=-\frac{B_{2}}{\mu_{2}}\cos(\theta_{2})=-\frac{B_{1t}}{\mu_{2}}\cos(\theta_{2})</script><p>根据电场、磁场的关系<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.865ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7012.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1041.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2097.6,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(2856.6,0)"><path data-c="1D708" d="M74 431Q75 431 146 436T219 442Q231 442 231 434Q231 428 185 241L137 51H140L150 55Q161 59 177 67T214 86T261 119T312 165Q410 264 445 394Q458 442 496 442Q509 442 519 434T530 411Q530 390 516 352T469 262T388 162T267 70T106 5Q81 -2 71 -2Q66 -2 59 -1T51 1Q45 5 45 11Q45 13 88 188L132 364Q133 377 125 380T86 385H65Q59 391 59 393T61 412Q65 431 74 431Z"></path></g><g data-mml-node="mo" transform="translate(3664.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4720.1,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(5479.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5912.1,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(6412.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>，（需要注意的是，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.712ex;" xmlns="http://www.w3.org/2000/svg" width="10.834ex" height="2.408ex" role="img" focusable="false" viewBox="0 -750 4788.6 1064.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1933.6,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2366.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="msqrt" transform="translate(2866.6,0)"><g transform="translate(853,0)"><g data-mml-node="mi"><path data-c="1D700" d="M190 -22Q124 -22 76 11T27 107Q27 174 97 232L107 239L99 248Q76 273 76 304Q76 364 144 408T290 452H302Q360 452 405 421Q428 405 428 392Q428 381 417 369T391 356Q382 356 371 365T338 383T283 392Q217 392 167 368T116 308Q116 289 133 272Q142 263 145 262T157 264Q188 278 238 278H243Q308 278 308 247Q308 206 223 206Q177 206 142 219L132 212Q68 169 68 112Q68 39 201 39Q253 39 286 49T328 72T345 94T362 105Q376 103 376 88Q376 79 365 62T334 26T275 -8T190 -22Z"></path></g><g data-mml-node="mi" transform="translate(466,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g></g><g data-mml-node="mo" transform="translate(0,-114.5)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="1069" height="60" x="853" y="625.5"></rect></g></g></g></svg></mjx-container>）我们可以将磁场的关系转化为电场的关系</p><script type="math/tex; mode=display">-\frac{E_{1}}{\mu_{1}\nu_{1}}\cos(\theta_{1})+\frac{E_{1r}}{\mu_{1}\nu_{1}}\cos(\theta_{1})=-\frac{E_{2}}{\mu_{2}\nu_{2}}\cos(\theta_{2})=-\frac{E_{1t}}{\mu_{1}\nu_{2}}\cos(\theta_{2})</script><script type="math/tex; mode=display">-\frac{E_{1}n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{E_{1r}n_{1}}{\mu_{1}}\cos(\theta_{1})=-\frac{E_{2}n_{2}}{\mu_{2}}\cos(\theta_{2})=-\frac{E_{1t}n_{2}}{\mu_{1}}\cos(\theta_{2})</script><p>综合可得，最后$E<em>{1},E</em>{1r},E_{1t}$的关系</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})-\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}</script><p>上面的表达式还可以进一步化为波矢表示的形式，，因为$k<em>{z1}=k</em>{1}\sin(\theta<em>{1}),k</em>{z2}=k<em>{2}\sin(\theta</em>{2})$,因此</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\mu_{2}k_{z1}-\mu_{1}k_{z2}}{\mu_{2}k_{z1}+\mu_{1}k_{z2}}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\mu_{2}k_{z1}}{\mu_{2}k_{z1}+\mu_{1}k_{z2}}</script><h3 id="P偏振"><a href="#P偏振" class="headerlink" title="P偏振"></a>P偏振</h3><p>对于P偏振，首先是切向的电场连续，即</p><script type="math/tex; mode=display">-E_{1}\cos(\theta_{1})+E_{1r}\cos(\theta_{1})=-E_{2}\cos(\theta_{2})=-E_{1t}\cos(\theta_{2})</script><p>然后是磁场切向连续</p><script type="math/tex; mode=display">-H_{1}-H_{1r}=-H_{2}=-H_{1t}</script><p>进一步转化</p><script type="math/tex; mode=display">\frac{E_{1}}{\nu_{1}\mu_{1}}+\frac{E_{1r}}{\nu_{1}\mu_{1}}=\frac{E_{2}}{\nu_{2}\mu_{2}}=\frac{E_{1t}}{\nu_{2}\mu_{2}}</script><script type="math/tex; mode=display">n_{1}E_{1}/\mu_{1}+n_{1}E_{1r}/\mu_{1}=n_{2}E_{2}/\mu_{2}=n_{2}E_{1t}/\mu_{2}</script><p>综合可得，最后$E<em>{1},E</em>{1r},E_{1t}$的关系</p><script type="math/tex; mode=display">\frac{E_{r}^{p}}{E_{1}^{p}}=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}=</script><script type="math/tex; mode=display">\frac{E_{t}^{p}}{E_{1}^{p}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}</script><p>上面的表达式还可以进一步化为波矢表示的形式，因为$k<em>{z1}=k</em>{1}\sin(\theta<em>{1}),k</em>{z2}=k<em>{2}\sin(\theta</em>{2})<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="3.268ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 1444.7 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">而</text></g></g></g></svg></mjx-container>k<em>{1}=k</em>{0}n<em>{1},k</em>{2}=k<em>{0}n</em>{2}$,因此</p><script type="math/tex; mode=display">\begin{aligned}\frac{E_{r}^{p}}{E_{1}^{p}}&=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{\frac{n_{2}}{\mu_{2}n_{1}}k_{z1}-\frac{n_{1}}{\mu_{1}n_{2}}k_{z2}}{\frac{n_{2}}{\mu_{2}n_{1}}k_{z1}+\frac{n_{1}}{\mu_{1}n_{2}}k_{z2}}\\&=\frac{n_{2}^2\mu_{1}k_{z1}-n_{1}^2\mu_{2}k_{z2}}{n_{2}^2\mu_{1}k_{z1}+n_{1}^2\mu_{2}k_{z2}}\\&=\frac{\varepsilon_{2} k_{z1}-\varepsilon_{1}k_{z2}}{\varepsilon_{2} k_{z1}+\varepsilon_{1}k_{z2}}\\\end{aligned}</script><p>按照同样的变换方式，我们可以得到</p><script type="math/tex; mode=display">\begin{aligned}\frac{E_{t}^{p}}{E_{1}^{p}}&=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{2\varepsilon_{2} k_{z1}}{\varepsilon_{2} k_{z1}+\varepsilon_{1}k_{z2}}\frac{n_{1}\mu_{2}}{n_{2}\mu_{1}}\\&=\frac{2\varepsilon_{2} k_{z1}}{\varepsilon_{2} k_{z1}+\varepsilon_{1}k_{z2}}\sqrt{\frac{\mu_{2}\varepsilon_{1}}{\mu_{1}\varepsilon_{2}}}\end{aligned}</script><p>此结果与书<em>Principle of Nano Optics</em>结果是一致的。结果此次推导，我算是更加熟悉了所谓的菲列尔公式了。需要注意的是，我们的推导都是基于特定的图写出来的，不同的图会有不同的符号。</p><p>::: alert-warning</p><p>Nonetheless, be aware that the literature is not standardized, and all possible sign variations have been labeled the Fresnel Equations. To avoid confusion they must be related to the specific field directions from which they were derived.</p><p>:::</p><h3 id="特殊情况-非磁性材料"><a href="#特殊情况-非磁性材料" class="headerlink" title="特殊情况-非磁性材料"></a>特殊情况-非磁性材料</h3><p>现实中大部分材料的磁性可以忽略，我们认为$\mu<em>{1}=\mu</em>{2}$，因此</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})-\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{n_{1}\cos(\theta_{1})-n_{2}\cos(\theta_{2})}{n_{1}\cos(\theta_{1})+n_{2}\cos(\theta_{2})}=-\frac{\sin(\theta_{1}-\theta_{2})}{\sin (\theta_{1}+\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{2n_{1}\cos(\theta_{1})}{n_{1}\cos(\theta_{1})+n_{2}\cos(\theta_{2})}=+\frac{2\sin(\theta_{2})\cos(\theta_{1})}{\sin (\theta_{1}+\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{r}^{p}}{E_{1}^{p}}=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}=\frac{n_{2}\cos(\theta_{1})-n_{1}\cos(\theta_{2})}{n_{2}\cos(\theta_{1})+n_{1}\cos(\theta_{2})}=+\frac{\tan(\theta_{1}-\theta_{2})}{\tan (\theta_{1}+\theta_{2})}</script><script type="math/tex; mode=display">\frac{E_{t}^{p}}{E_{1}^{p}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}=\frac{2n_{1}\cos(\theta_{1})}{n_{2}\cos(\theta_{1})+n_{1}\cos(\theta_{2})}=+\frac{2\sin(\theta_{2})\cos(\theta_{1})}{\sin (\theta_{1}+\theta_{2})\sin (\theta_{1}-\theta_{2})}</script><h3 id="特殊情况-垂直入射"><a href="#特殊情况-垂直入射" class="headerlink" title="特殊情况-垂直入射"></a>特殊情况-垂直入射</h3><p>S,P偏振在垂直入射时的情况将会一样，为了简便我们认为$\mu<em>{1}=\mu</em>{2}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="28.155ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 12444.7 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(1444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(2444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">可</text></g><g data-mml-node="mi" transform="translate(3444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">以</text></g><g data-mml-node="mi" transform="translate(4444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">验</text></g><g data-mml-node="mi" transform="translate(5444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">证</text></g><g data-mml-node="mi" transform="translate(6444.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(7444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">垂</text></g><g data-mml-node="mi" transform="translate(8444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">直</text></g><g data-mml-node="mi" transform="translate(9444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">入</text></g><g data-mml-node="mi" transform="translate(10444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">射</text></g><g data-mml-node="mi" transform="translate(11444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">即</text></g></g></g></svg></mjx-container>\theta<em>{1}=\theta</em>{2}=0$,此时</p><script type="math/tex; mode=display">\frac{E_{r}^{s}}{E_{1}^{s}}=\frac{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})-\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{n_{1}-n_{2}}{n_{1}+n_{2}}</script><script type="math/tex; mode=display">\frac{E_{t}^{s}}{E_{1}^{s}}=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})+\frac{n_{2}}{\mu_{2}}\cos(\theta_{2})}=\frac{2n_{1}}{n_{1}+n_{2}}</script><script type="math/tex; mode=display">\begin{aligned}\frac{E_{r}^{p}}{E_{1}^{p}}&=\frac{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})-\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{n_{2}-n_{1}}{n_{2}+n_{1}}\end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}\frac{E_{t}^{p}}{E_{1}^{p}}&=\frac{2\frac{n_{1}}{\mu_{1}}\cos(\theta_{1})}{\frac{n_{2}}{\mu_{2}}\cos(\theta_{1})+\frac{n_{1}}{\mu_{1}}\cos(\theta_{2})}\\&=\frac{2n_{1}}{n_{2}+n_{1}}\end{aligned}</script><p>我们发现s偏振和p偏振的反射刚好有一个负号，这是由与s和p偏振对于电场的正方向定义有区别。</p><ul><li>对于s偏振应该是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.576ex;" xmlns="http://www.w3.org/2000/svg" width="7.277ex" height="2.115ex" role="img" focusable="false" viewBox="0 -680 3216.4 934.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(986.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msubsup" transform="translate(1986.4,0)"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="TeXAtom" transform="translate(848.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(771,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container></li><li>对于p偏振应该是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.576ex;" xmlns="http://www.w3.org/2000/svg" width="7.277ex" height="2.115ex" role="img" focusable="false" viewBox="0 -680 3216.4 934.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(986.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(1986.4,0)"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="TeXAtom" transform="translate(848.3,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(771,-247) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container></li></ul><h3 id="特殊情况：全反射"><a href="#特殊情况：全反射" class="headerlink" title="特殊情况：全反射"></a>特殊情况：全反射</h3><p>根据菲涅尔公式，</p><script type="math/tex; mode=display">\sin(\theta_{2})n_{2}=\sin(\theta_{1})n_{1}\implies \sin(\theta_{2})=\frac{\sin(\theta_{1})n_{1}}{n_{2}}</script><p>考虑$n<em>{1}&gt;n</em>{2}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="5.531ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 2444.7 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">此</text></g><g data-mml-node="mi" transform="translate(1444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g></g></g></svg></mjx-container>\theta<em>{1}&lt;\theta</em>{2}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="89.241ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 39444.7 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">不</text></g><g data-mml-node="mi" transform="translate(1444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">断</text></g><g data-mml-node="mi" transform="translate(2444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(3444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">增</text></g><g data-mml-node="mi" transform="translate(4444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">加</text></g><g data-mml-node="mi" transform="translate(5444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">入</text></g><g data-mml-node="mi" transform="translate(6444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">射</text></g><g data-mml-node="mi" transform="translate(7444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">角</text></g><g data-mml-node="mi" transform="translate(8444.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(9444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">会</text></g><g data-mml-node="mi" transform="translate(10444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">存</text></g><g data-mml-node="mi" transform="translate(11444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(12444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(13444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(14444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">角</text></g><g data-mml-node="mi" transform="translate(15444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">度</text></g><g data-mml-node="mi" transform="translate(16444.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(17444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">使</text></g><g data-mml-node="mi" transform="translate(18444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">得</text></g><g data-mml-node="mi" transform="translate(19444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">透</text></g><g data-mml-node="mi" transform="translate(20444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">射</text></g><g data-mml-node="mi" transform="translate(21444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">角</text></g><g data-mml-node="mi" transform="translate(22444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">等</text></g><g data-mml-node="mi" transform="translate(23444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">于</text></g><g data-mml-node="mn" transform="translate(24444.7,0)"><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(25444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">度</text></g><g data-mml-node="mi" transform="translate(26444.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(27444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">这</text></g><g data-mml-node="mi" transform="translate(28444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(29444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">角</text></g><g data-mml-node="mi" transform="translate(30444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">度</text></g><g data-mml-node="mi" transform="translate(31444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">一</text></g><g data-mml-node="mi" transform="translate(32444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">般</text></g><g data-mml-node="mi" transform="translate(33444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">叫</text></g><g data-mml-node="mi" transform="translate(34444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">做</text></g><g data-mml-node="mi" transform="translate(35444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">临</text></g><g data-mml-node="mi" transform="translate(36444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">界</text></g><g data-mml-node="mi" transform="translate(37444.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">角</text></g><g data-mml-node="mi" transform="translate(38444.7,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g></g></g></svg></mjx-container>\theta<em>{c}=\arcsin(\frac{n</em>{1}}{n_{2}})$。再继续增加角度，透过界面后的波会沿着z方向指数衰减。</p><blockquote><p>although there must be a transmitted wave, it cannot, on the average, carry energy across the boundary.</p></blockquote><p>下面我们来分析光再全反射下的具体物理过程。将前面的透射、反射系数进一步表示为</p><script type="math/tex; mode=display">r^{s}=\frac{\cos\theta_{1}-\sqrt{(\frac{n_{2}^2}{n_{1}^2}-\sin^2\theta_{1})}}{\cos\theta_{1}+\sqrt{(\frac{n_{2}^2}{n_{1}^2}-\sin^2\theta_{1})}}</script><script type="math/tex; mode=display">r^{s}=\frac{\frac{n_{2}^2}{n_{1}^2}\cos\theta_{1}-\sqrt{(\frac{n_{2}}{n_{1}}-\sin^2\theta_{1})}}{\frac{n_{2}^2}{n_{1}^2}\cos\theta_{1}+\sqrt{(\frac{n_{2}}{n_{1}}-\sin^2\theta_{1})}}</script><p>在$\theta<em>{1}\ge\theta</em>{c}$时，根号里就是一个虚数。这样的话反射系数的分子分母只是一个复共轭的差别，但是模的平方等于1。即此时所有的能量其实是全部反射了的，当然，这不代表没有能量透过界面，只是透过之后在短距离衰减了。我们可以将透射的波写为</p><script type="math/tex; mode=display">\vec{\vec{E}_{2}}=\vec{\vec{E}_{02}}e^{i\vec{k}_{2}\cdot \vec{r}-i\omega t}</script><p>其中，$\vec{k}<em>{2}\cdot \vec{r}=k</em>{2x}x+k<em>{2z}z=k</em>{2}\sin\theta<em>{2}+k</em>{2}\cos\theta_{2}$，根据菲涅尔定律</p><script type="math/tex; mode=display">k_{2}\cos\theta_{2}=\pm k_{2}\sqrt{1-\frac{\sin^2\theta_{1}}{n_{2}^2/n_{1}^2}}=\pm ik_{2}\sqrt{\frac{\sin^2\theta_{1}}{n_{2}^2/n_{1}^2}-1}=\pm i\beta_{z}</script><p>而</p><script type="math/tex; mode=display">k_{2x}=\frac{k_{2}}{n_{2}/n_{1}}\sin\theta_{1}</script><p>即最终的场可以表示为</p><script type="math/tex; mode=display">\vec{\vec{E}_{2}}=\vec{\vec{E}_{02}}e^{\pm \beta_{z}z}e^{ik_{x}x\sin\theta_{1}n_{1}/n_{2}-i\omega t}</script><p>其中为了<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 778 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="B1" d="M56 320T56 333T70 353H369V502Q369 651 371 655Q376 666 388 666Q402 666 405 654T409 596V500V353H707Q722 345 722 333Q722 320 707 313H409V40H707Q722 32 722 20T707 0H70Q56 7 56 20T70 40H369V313H70Q56 320 56 333Z"></path></g></g></g></svg></mjx-container>的符号必须让最终的场衰减，即取<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.505ex" role="img" focusable="false" viewBox="0 -583 778 665"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g></g></g></svg></mjx-container>。</p>]]></content>
      
      
      <categories>
          
          <category> Physics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Optics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>由本征值计算本征向量</title>
      <link href="/2020/02/26/F_%E6%95%B0%E5%AD%A6-%E7%94%B1%E6%9C%AC%E5%BE%81%E5%80%BC%E8%AE%A1%E7%AE%97%E6%9C%AC%E5%BE%81%E7%9F%A2%E9%87%8F/"/>
      <url>/2020/02/26/F_%E6%95%B0%E5%AD%A6-%E7%94%B1%E6%9C%AC%E5%BE%81%E5%80%BC%E8%AE%A1%E7%AE%97%E6%9C%AC%E5%BE%81%E7%9F%A2%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h1><p>最近需要求解任意本征值的本征矢量，目前有两种方法计算本征值，一种是传统的方法，另外一种是陶哲轩<sup><a href="#fn_ref1" id="reffn_ref1">ref1</a></sup>去年提出的一种方法。后来证明这种方法不是他首次提出，但是确实是一种新的思路。本次笔记是为了展示如何用他的结论。例子也是他的论文找的。</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/taozhexuan.jpg" alt="陶哲轩"></p><h2 id="计算本征值"><a href="#计算本征值" class="headerlink" title="计算本征值"></a>计算本征值</h2><p>计算本征值很容易，例如对于矩阵<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.378ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 1051 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g></g></g></svg></mjx-container>, </p><script type="math/tex; mode=display">MX=\lambda X\implies (M-\lambda I)X=0\implies \det(M-\lambda I)=0</script><h2 id="方法简述"><a href="#方法简述" class="headerlink" title="方法简述"></a>方法简述</h2><h3 id="传统方法"><a href="#传统方法" class="headerlink" title="传统方法"></a>传统方法</h3><script type="math/tex; mode=display">(M-\lambda I)X=0</script><p>将计算的本征值带回原矩阵求一个代数方程即可。</p><h3 id="陶哲轩新方法"><a href="#陶哲轩新方法" class="headerlink" title="陶哲轩新方法"></a>陶哲轩新方法</h3><script type="math/tex; mode=display">|v_{i,j}|^2 \prod_{k=1,k\neqi}^{n}\left(λ_i(A)-λ_k(A)\right)=\prod_{k=1}^{n-1}\left(λ_i(A)-λ_k(M_j)\right)</script><p>其中</p><ul><li>$v<em>{i,j}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="9.05ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 4000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">特</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">征</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">值</text></g></g></g></svg></mjx-container>\lambda</em>{i}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="18.1ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 8000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">对</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">应</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">特</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">征</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">向</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g></g></g></svg></mjx-container>j$个元素</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.516ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2438 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(910,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2049,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>是矩<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.697ex" height="1.62ex" role="img" focusable="false" viewBox="0 -716 750 716"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></svg></mjx-container>的第<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>个特征向量（本征向量、本征矢）</li><li>$M<em>{j}<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="6.787ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 3000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">矩</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">阵</text></g></g></g></svg></mjx-container>A<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="4.525ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 2000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g></g></g></svg></mjx-container>j<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="11.312ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 5000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">个</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">余</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">子</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g></g></g></svg></mjx-container>\lambda</em>{k}(M_{j})<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="15.837ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 7000 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">是</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">该</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">余</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">子</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">式</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">第</text></g></g></g></svg></mjx-container>k$个特征值。</li></ul><p>这种方法的好处是直接带公式就可以，缺点是需要多计算几个本征值。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>我们令 </p><script type="math/tex; mode=display">M=\left[\begin{matrix}1 &1 &-1\\1 &3 &1\\-1 &1 &3\end{matrix}\right]</script><p>其本征值可以通过解方程得出，有三个，</p><script type="math/tex; mode=display">\lambda_{1}=0,\lambda_{2}=3,\lambda_{3}=4</script><h3 id="传统方法-1"><a href="#传统方法-1" class="headerlink" title="传统方法"></a>传统方法</h3><p>传统方法，求解本征矢，对于<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.467ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 2416.6 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(860.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1916.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>,我们有</p><script type="math/tex; mode=display">\left[\begin{matrix}1-0 &1 &-1\\1 &3-0 &1\\-1 &1 &3-0\end{matrix}\right]\cdot\left[\begin{matrix}x\\y\\z\end{matrix}\right]=0</script><script type="math/tex; mode=display">v_{1}=\frac{1}{\sqrt{6}}\left[\begin{matrix}2\\-1\\1\end{matrix}\right]</script><p>同样的做法，我们可以知道</p><script type="math/tex; mode=display">v_{2}=\frac{1}{\sqrt{3}}\left[\begin{matrix}1\\1\\-1\end{matrix}\right]</script><script type="math/tex; mode=display">v_{3}=\frac{1}{\sqrt{2}}\left[\begin{matrix}0\\1\\1\end{matrix}\right]</script><h3 id="陶哲轩方法"><a href="#陶哲轩方法" class="headerlink" title="陶哲轩方法"></a>陶哲轩方法</h3><p>按照陶哲轩的方法，首先将不同的余子式表示出来</p><script type="math/tex; mode=display">M_{1}=\left[\begin{matrix}3 &1\\1 &3\end{matrix}\right],\quad \lambda_{11}=4,\quad \lambda_{12}=2</script><script type="math/tex; mode=display">M_{2}=\left[\begin{matrix}1 &-1\\-1  &3\end{matrix}\right],\quad \lambda_{21}=2+\sqrt{2},\quad \lambda_{22}=2-\sqrt{2}</script><script type="math/tex; mode=display">M_{1}=\left[\begin{matrix}1 &1 \\1 &3 \\\end{matrix}\right],\quad \lambda_{21}=2+\sqrt{2},\quad \lambda_{22}=2-\sqrt{2}</script><p>这样就可以依次求出系数了，</p><script type="math/tex; mode=display">|v_{1,1}|^2=\frac{(0-2)(0-4)}{(0-3)(0-4)}=\frac{2}{3}</script><script type="math/tex; mode=display">|v_{1,2}|^2=\frac{(0-2-\sqrt{2})(0-2+\sqrt{2})}{(0-3)(0-4)}=\frac{1}{6}</script><script type="math/tex; mode=display">|v_{1,3}|^2=\frac{(0-2-\sqrt{2})(0-2+\sqrt{2})}{(0-3)(0-4)}=\frac{1}{6}</script><script type="math/tex; mode=display">|v_{2,1}|^2=\frac{(3-2)(3-4)}{(3-0)(3-4)}=\frac{1}{3}</script><script type="math/tex; mode=display">|v_{2,2}|^2=\frac{(3-2-\sqrt{2})(3-2+\sqrt{2})}{(3-0)(3-4)}=\frac{1}{3}</script><script type="math/tex; mode=display">|v_{2,3}|^2=\frac{(3-2-\sqrt{2})(3-2+\sqrt{2})}{(3-0)(3-4)}=\frac{1}{3}</script><script type="math/tex; mode=display">|v_{3,1}|^2=\frac{(4-2)(4-4)}{(4-0)(4-3)}=0</script><script type="math/tex; mode=display">|v_{3,2}|^2=\frac{(4-2-\sqrt{2})(4-2+\sqrt{2})}{(4-0)(4-3)}\frac{1}{2}</script><script type="math/tex; mode=display">|v_{3,3}|^2=\frac{(4-2-\sqrt{2})(4-2+\sqrt{2})}{(4-0)(4-3)}=\frac{1}{2}</script><p>可见该方法的不足是不能分辨正负。</p><blockquote id="fn_ref1"><sup>ref1</sup>. <a href="https://arxiv.org/abs/1908.03795">https://arxiv.org/abs/1908.03795</a><a href="#reffn_ref1" title="Jump back to footnote [ref1] in the text."> ↩</a></blockquote>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从COMSOL的log文件读取运算时间和内存并绘图</title>
      <link href="/2020/02/21/C_%E6%95%99%E7%A8%8B-%E4%BB%8ECOMSOL%E7%9A%84log%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E8%BF%90%E7%AE%97%E6%97%B6%E9%97%B4%E5%92%8C%E5%86%85%E5%AD%98/"/>
      <url>/2020/02/21/C_%E6%95%99%E7%A8%8B-%E4%BB%8ECOMSOL%E7%9A%84log%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E8%BF%90%E7%AE%97%E6%97%B6%E9%97%B4%E5%92%8C%E5%86%85%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Tools-Dataprocessing-COMSOL"><a href="#Python-Tools-Dataprocessing-COMSOL" class="headerlink" title="Python #Tools #Dataprocessing  #COMSOL"></a>Python #Tools #Dataprocessing  #COMSOL</h1><h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>目前对于python处理文字有了一些心得，刚好最近在用COMSOL做数值计算，需要参数扫描。我想分析每次计算COMSOL需要的计算内存和运算时间，防止计算内存爆掉了。</p><h1 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h1><p>COMSOL log文件信息详细记录了每一次扫描的一些进程，一般开头是这样的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*******************************************</span><br><span class="line">***COMSOL 5.4.0.225 progress output file***</span><br><span class="line">*******************************************</span><br><span class="line">Thu Feb 20 21:36:07 CST 2020</span><br><span class="line">&lt;---- Compile Equations: Wavelength Domain {st1} <span class="keyword">in</span> Study 1 {std1}/Solution 1</span><br><span class="line">      (sol1) {sol1} ------------------------------------------------------------</span><br><span class="line">Started at Feb 20, 2020 9:36:13 PM.</span><br><span class="line">Running on 4 x Intel(R) Xeon(R) Platinum 8163 CPU at 2.50 GHz.</span><br><span class="line">Using 4 sockets with 25 cores <span class="keyword">in</span> total on 4CPU.</span><br></pre></td></tr></table></figure><p>运算完毕之后，会有这样的字样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Memory: 106911/106911 151517/151517</span><br><span class="line">Iter      SolEst     Damping    Stepsize <span class="comment">#Res #Jac #Sol   LinErr   LinRes</span></span><br><span class="line">---------- Current Progress: 100 % - Solving linear system</span><br><span class="line">Memory: 115456/117206 149829/151541</span><br><span class="line">   1        0.79   1.0000000        0.79    1    1    1  2.2e-11  6.9e-12</span><br><span class="line">Solution time: 815 s. (13 minutes, 35 seconds)</span><br><span class="line">Physical memory: 122.42 GB</span><br><span class="line">Virtual memory: 156.74 GB</span><br><span class="line">Ended at Feb 20, 2020 9:50:10 PM.</span><br></pre></td></tr></table></figure><p>我需要的就是快计算完毕后的这些字段的信息，<code>Physical memory: 122.42 GB</code>,<code>Solution time: 815 s. (13 minutes, 35 seconds)</code>,<br>其实只需要依次读取log文件的每一行，判断是否有我需要的字段，如果有就将对应的字段提取出来。具体代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">changetext</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        lines_memo = []  <span class="comment"># 创建了一个空列表，里面没有元素</span></span><br><span class="line">        lines_time = []  <span class="comment"># 创建了一个空列表，里面没有元素</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Physical memory'</span> <span class="keyword">in</span> line:</span><br><span class="line">                memo = line[<span class="number">17</span>:-<span class="number">4</span>] <span class="comment"># 只读取有用字段</span></span><br><span class="line">                lines_memo.append(memo)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Solution time'</span> <span class="keyword">in</span> line:</span><br><span class="line">                memo = line[<span class="number">15</span>:<span class="number">19</span>] <span class="comment"># 只读取有用字段</span></span><br><span class="line">                lines_time.append(memo)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> lines_memo, lines_time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># 服务器一共有三个文件</span></span><br><span class="line">    dst_dir_1 = <span class="string">'../Log-File/20200220/comsol_progress_11.txt'</span></span><br><span class="line">    dst_dir_2 = <span class="string">'../Log-File/20200220/comsol_progress_21.txt'</span></span><br><span class="line">    dst_dir_3 = <span class="string">'../Log-File/20200220/comsol_progress_31.txt'</span></span><br><span class="line"></span><br><span class="line">    lines_memo_1, lines_time_1 = changetext(dst_dir_1)</span><br><span class="line">    lines_memo_2, lines_time_2 = changetext(dst_dir_2)</span><br><span class="line">    lines_memo_3, lines_time_3 = changetext(dst_dir_3)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(lines_time_1))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(lines_time_2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(lines_time_3))</span><br><span class="line"></span><br><span class="line">    num_1 = <span class="built_in">int</span>((<span class="built_in">len</span>(lines_time_1)-<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line">    num_2 = <span class="built_in">int</span>((<span class="built_in">len</span>(lines_time_2)-<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line">    num_3 = <span class="built_in">int</span>((<span class="built_in">len</span>(lines_time_3)-<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    x_1 = np.linspace(<span class="number">1</span>, num_1, num_1)</span><br><span class="line">    x_2 = np.linspace(<span class="number">1</span>, num_2, num_2)</span><br><span class="line">    x_3 = np.linspace(<span class="number">1</span>, num_3, num_3)</span><br><span class="line"></span><br><span class="line">    memo_mat_1 = np.zeros(num_1)</span><br><span class="line">    time_mat_1 = np.zeros(num_1)</span><br><span class="line"></span><br><span class="line">    memo_mat_2 = np.zeros(num_2)</span><br><span class="line">    time_mat_2 = np.zeros(num_2)</span><br><span class="line"></span><br><span class="line">    memo_mat_3 = np.zeros(num_3)</span><br><span class="line">    time_mat_3 = np.zeros(num_3)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(num_1):</span><br><span class="line">        memo_mat_1[l] = <span class="built_in">float</span>(lines_memo_1[<span class="number">3</span>*(l)+<span class="number">2</span>])</span><br><span class="line">        time_mat_1[l] = <span class="built_in">float</span>(lines_time_1[<span class="number">2</span>*(l)+<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(num_2):</span><br><span class="line">        memo_mat_2[l] = <span class="built_in">float</span>(lines_memo_2[<span class="number">3</span>*(l)+<span class="number">2</span>])</span><br><span class="line">        time_mat_2[l] = <span class="built_in">float</span>(lines_time_2[<span class="number">2</span>*(l)+<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(num_3):</span><br><span class="line">        memo_mat_3[l] = <span class="built_in">float</span>(lines_memo_3[<span class="number">3</span>*(l)+<span class="number">2</span>])</span><br><span class="line">        time_mat_3[l] = <span class="built_in">float</span>(lines_time_3[<span class="number">2</span>*(l)+<span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 绘图部分</span></span><br><span class="line">    fig1 = plt.figure(figsize=(<span class="number">6.4</span>*<span class="number">2</span>, <span class="number">4.8</span>))</span><br><span class="line">    plt.subplot(<span class="number">121</span>)</span><br><span class="line">    plt.plot(x_1, memo_mat_1, label=<span class="string">'4CPU 1'</span>)</span><br><span class="line">    plt.plot(x_2, memo_mat_2, label=<span class="string">'4CPU 2'</span>)</span><br><span class="line">    plt.plot(x_3, memo_mat_3, label=<span class="string">'Dell 1'</span>)</span><br><span class="line">    plt.xlabel(<span class="string">'Loop Counts'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">'Physical Memory (GB)'</span>)</span><br><span class="line">    plt.legend(loc=<span class="string">'best'</span>)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">122</span>)</span><br><span class="line">    plt.plot(x_1, time_mat_1, label=<span class="string">'4CPU 1'</span>)</span><br><span class="line">    plt.plot(x_2, time_mat_2, label=<span class="string">'4CPU 2'</span>)</span><br><span class="line">    plt.plot(x_3, time_mat_3, label=<span class="string">'Dell 1'</span>)</span><br><span class="line">    plt.xlabel(<span class="string">'Loop Counts'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">'Simulation Time (s)'</span>)</span><br><span class="line"></span><br><span class="line">    plt.legend(loc=<span class="string">'best'</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><p>绘制出来的图如下</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200221-simulation-time-memory.png" alt="实际的运算内存、所需时间与循环次数的关系"></p><p>可以看见，随着循环次数的增加，运算所需内存从120GB几乎是线性增加到了200GB。所以这种MATLAB Livelink的方法不太好的地方就是内存占用会不断增加。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本次是python编程的一个具体应用，还是一个很简单的例子，没有用到正则表达式。下次希望可以用正则表达式匹配来实现一些功能。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python对文件进行特定行操作</title>
      <link href="/2020/02/16/C_%E6%95%99%E7%A8%8B-Python%E5%AF%B9%E6%96%87%E4%BB%B6%E7%9A%84%E7%89%B9%E5%AE%9A%E8%A1%8C%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/02/16/C_%E6%95%99%E7%A8%8B-Python%E5%AF%B9%E6%96%87%E4%BB%B6%E7%9A%84%E7%89%B9%E5%AE%9A%E8%A1%8C%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Tools-Dataprocessing"><a href="#Python-Tools-Dataprocessing" class="headerlink" title="Python #Tools  #Dataprocessing"></a>Python #Tools  #Dataprocessing</h1><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>我们会有一些场景会需要对一些文件的某些行进行操作，比如删除、增加、修改一些字段。我自己的需求是，本网站的所有博客会有一些<code>font matter</code>字段，我需要将这些字段删除掉而将字段里面的标题提取出来作为标题。如下图所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 用python模糊匹配文件夹下的文件并复制文件到另外的文件夹</span><br><span class="line">date: 2020-02-16 00:25:30</span><br><span class="line">tags:</span><br><span class="line">- Python</span><br><span class="line">categories:</span><br><span class="line">- 技术</span><br><span class="line">mathjax: true</span><br><span class="line">cover: https://raw.githubusercontent.com/knifelees3/my_pictures/master/icons/PythonICON.jpg</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这是本片笔记的<code>font matter</code>,因此我们需要首先读取掉两个<code>---</code>，之后的就是我们的正文。另外还需要将<code>title:</code>后面的字段提取出来。作为第一行。下面是具体的实现方法</p><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><p>如何实现对文件的读取呢？用open函数即可，如下，其中第二个参数<code>r,w,a</code>分别代表只读、写（覆盖），写（补充）。打开之后，需要用<a href="https://www.w3schools.com/python/ref_file_readlines.asp">readlines</a>，来依次读取每一行的字符。读取后的字符是一个字符串，用几个<code>if</code>语句来讲我们要的结果筛选出来就行了。具体实现代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">changetext</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        lines = []  <span class="comment"># 创建了一个空列表，里面没有元素</span></span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="built_in">print</span>(counter)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'title'</span> <span class="keyword">in</span> line:</span><br><span class="line">                title = <span class="string">'#'</span>+<span class="string">' '</span>+line[<span class="number">7</span>:]</span><br><span class="line">                lines.append(title)</span><br><span class="line">            <span class="keyword">if</span> counter != <span class="number">0</span> <span class="keyword">and</span> counter != <span class="number">1</span>:</span><br><span class="line">                lines.append(line)</span><br><span class="line">            <span class="keyword">if</span> line == <span class="string">'---\n'</span>:</span><br><span class="line">                counter = counter+<span class="number">1</span></span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">            f.write(<span class="string">'%s\n'</span> % line)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'已经修改了文件： '</span> + filename)</span><br></pre></td></tr></table></figure><p>补充一下，<code>open</code>函数的使用</p><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">open</span>(file, mode=<span class="string">'r'</span>, buffering=-<span class="number">1</span>, encoding=<span class="literal">None</span>, errors=<span class="literal">None</span>, newline=<span class="literal">None</span>, closefd=<span class="literal">True</span>, opener=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure></blockquote><p>而该函数的<code>mode</code>字，有以下选项，</p><div class="table-container"><table><thead><tr><th style="text-align:center">Character</th><th style="text-align:center">Meaning</th></tr></thead><tbody><tr><td style="text-align:center"><code>r</code></td><td style="text-align:center">读（默认）</td></tr><tr><td style="text-align:center"><code>w</code></td><td style="text-align:center">open for writing, truncating the file first</td></tr><tr><td style="text-align:center"><code>x</code></td><td style="text-align:center">打开以进行独占创建，如果文件已经存在则失败</td></tr><tr><td style="text-align:center"><code>a</code></td><td style="text-align:center">打开进行写入，如果存在则追加到文件末尾</td></tr><tr><td style="text-align:center"><code>b</code></td><td style="text-align:center">二进制模式</td></tr><tr><td style="text-align:center"><code>t</code></td><td style="text-align:center">文字模式（默认）</td></tr><tr><td style="text-align:center"><code>+</code></td><td style="text-align:center">打开进行更新（读写）</td></tr></tbody></table></div><p><code>readlines</code>函数的使用</p><blockquote><p>Python文件方法<code>readline()</code>使用<code>readline()</code>读取直到EOF为止，并返回包含这些行的列表。 如果存在可选的<code>sizehint</code>参数，则读取的总行数大约为<code>sizehint</code>字节（可能在四舍五入为内部缓冲区大小之后），而不是读取EOF。 仅当立即遇到EOF时，才返回一个空字符串。</p></blockquote><p>而<code>sizehint</code>为要从文件读取的字节数。下面是一个读取的例子，假设有一个文件<code>foo.txt</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is 1st line</span><br><span class="line">This is 2nd line</span><br><span class="line">This is 3rd line</span><br><span class="line">This is 4th line</span><br><span class="line">This is 5th line</span><br></pre></td></tr></table></figure><p>然后书写如下的python文件<code>test.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open a file</span></span><br><span class="line">fo = <span class="built_in">open</span>(<span class="string">"foo.txt"</span>, <span class="string">"rw+"</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">"Name of the file: "</span>, fo.name</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assuming file has following 5 lines</span></span><br><span class="line"><span class="comment"># This is 1st line</span></span><br><span class="line"><span class="comment"># This is 2nd line</span></span><br><span class="line"><span class="comment"># This is 3rd line</span></span><br><span class="line"><span class="comment"># This is 4th line</span></span><br><span class="line"><span class="comment"># This is 5th line</span></span><br><span class="line"></span><br><span class="line">line = fo.readlines()</span><br><span class="line"><span class="built_in">print</span> <span class="string">"Read Line: %s"</span> % (line)</span><br><span class="line"></span><br><span class="line">line = fo.readlines(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">"Read Line: %s"</span> % (line)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Close opend file</span></span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><p>运行之后会有如下的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Name of the file:  foo.txt</span><br><span class="line">Read Line: [<span class="string">'This is 1st line\n'</span>, <span class="string">'This is 2nd line\n'</span>, <span class="string">'This is 3rd line\n'</span>, <span class="string">'This is 4th line\n'</span>, <span class="string">'This is 5th line'</span>]</span><br><span class="line">Read Line: []</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Nginx来部署静态博客</title>
      <link href="/2020/02/15/C_%E6%95%99%E7%A8%8B-%E4%BD%BF%E7%94%A8Nginx%E6%9D%A5%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/02/15/C_%E6%95%99%E7%A8%8B-%E4%BD%BF%E7%94%A8Nginx%E6%9D%A5%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Web-Blog"><a href="#Web-Blog" class="headerlink" title="Web #Blog"></a>Web #Blog</h1><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>以前一直不懂，我想做一个网页的时候，为啥要购买服务器？购买域名？有什么联系？实际上</p><ul><li>购买服务器是因为服务器稳定，如果你让自己的电脑作为服务器也是可以的。但是得有公网ip,不然别人的内网穿透之后，才能访问你的服务器。</li><li>要域名是因为域名便于记忆，也可以彰显个性。直接输入ip访问也是可以的。</li></ul><p>我想把静态网页部署在课题组的服务器上，局域网访问，网络上搜索一遍之后，采用了nginx,</p><blockquote><p>Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。<br>在高连接并发的情况下，Nginx是Apache服务器不错的替代品<br>nginx的用处很大，但是我只是拿它来部署我自己的静态网页。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1></blockquote><p>nginx不仅可以在Linux上使用，也可以在windows上使用，下面分别介绍安装,我们可以在这里下载：<a href="http://nginx.org/en/download.html">Nginx</a></p><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>windows下载下来是一个压缩包，不用安装，你可以将其拷贝到C盘的<code>program fiels</code>,但是修改配置文件会不方便，我建议还是放在其他位置，然后可以创建快捷方式到桌面，并且将其添加到环境变量。这样就可以在命令行使用了。直接运行<code>nginx.exe</code>文件即可。</p><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>ubuntu安装可以直接输入命令即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>查看nginx服务是否已经启动</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p>查看nginx版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><h1 id="配置并使用"><a href="#配置并使用" class="headerlink" title="配置并使用"></a>配置并使用</h1><p>无论是ubuntu还是windows，都只需要修改配置文件即可，配置文件也有讲究，你可以另外新建一个配置文件。我要实现的功能很简单，就直接修改<code>conf/nginx.conf</code>文件，主要是修改<code>http</code>大括号里面的<code>server</code>字段,如果没有<code>server</code>字段,自己添加也可以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server {</span><br><span class="line">    listen       <span class="number">80</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / {</span><br><span class="line">        <span class="comment"># root   C:\Users\xiail\OneDrive\Blog\Blog_Sphnix\build\html;</span></span><br><span class="line">        root C:\Users\xiail\AppData\Local\Programs\Python\Python37\Lib\site-packages\streamlit\static;</span><br><span class="line">        index  index.html;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure><p>我们需要修改的主要是两个：</p><ul><li><code>listen</code>: 端口号，默认是80，不需要修改</li><li><code>server_name</code>: 默认为<code>localhost</code>,你也可以改成你的电脑ip地址，这样至少局域网可以访问</li><li><code>root</code>: 主要是修改<code>root</code>后面的文件夹路径，这里就是你要部署的网页文件夹路径</li></ul><p>修改好了之后，就可以启动了。下面是一些常见的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload <span class="comment">#重新载入文件</span></span><br><span class="line">nginx -t <span class="comment">#检查文件有没有问题</span></span><br><span class="line">nginx -s stop <span class="comment"># 停止服务</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Sphinx来书写静态博客</title>
      <link href="/2020/02/15/C_%E6%95%99%E7%A8%8B-%E4%BD%BF%E7%94%A8Sphinx%E6%9D%A5%E4%B9%A6%E5%86%99%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/02/15/C_%E6%95%99%E7%A8%8B-%E4%BD%BF%E7%94%A8Sphinx%E6%9D%A5%E4%B9%A6%E5%86%99%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>Web #Blog</p><h1 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h1><p>学会了hexo发布静态博客以后，再也没有折腾博客的事情了，最近被疫情困在家里，想尝试下当初没有成功的sphinx。</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="安装包和主题"><a href="#安装包和主题" class="headerlink" title="安装包和主题"></a>安装包和主题</h2><p>这种步骤CSDN的教程很多都写的很烂，感觉还是知乎更加靠谱，这是知乎的一个教程：<a href="https://www.zhihu.com/search?type=content&amp;q=sphinx">用sphinx快速编写一份技术手册</a>。</p><p>首先是要安装好对应的软件和包。假设你已经安装好了python 3，pip,那么直接安装即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install sphinx</span><br></pre></td></tr></table></figure><p>然后需要安装一个主题，sphinx的主题可以从<a href="https://sphinx-themes.org/">https://sphinx-themes.org/</a>查看，种类很多，但是都很简朴，没有那么花里胡哨。安装也很简单，比如我们要安装主题sphinx_rtd_theme,直接使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install sphinx_rtd_theme</span><br></pre></td></tr></table></figure><p>该主题很多官方软件都在用，比如开源FDTD软件<a href="https://meep.readthedocs.io/en/latest/">MEEP</a>的说明文档,就是用这个。</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>安装好了之后，就得创建项目了。选择一个文件夹作为你的网页文件夹，在该文件夹打开命令行，然后输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sphinx-quickstart</span><br></pre></td></tr></table></figure><p>之后就会有一系列的确认的东西，有的是插件的添加，可以按照默认的选，也可以全选<code>y</code>,这样的话配置的会多一些，还有一些网页基本信息的输入，如<code>project name</code>等，需要自己填，全部弄好之后，会有如下的文件夹：</p><ul><li>build 目录：运行make命令后，生成的文件都在这个目录里面</li><li>source： 你的文档、图片啥的都在该文件夹下书写</li><li>make.bat： 批处理命令文件，不需要管</li><li>makefile： 也不需要管</li></ul><p>项目创建基本完成。在当前文件夹下打开命令行窗口，输入<code>make html</code>, 就可以生成html形式的文档。你可以在build文件夹打开<code>index.html</code>,就可以看见默认的页面了。</p><h2 id="个性化配置、修改"><a href="#个性化配置、修改" class="headerlink" title="个性化配置、修改"></a>个性化配置、修改</h2><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><p>配置文件名为source文件夹下的<code>conf.py</code>,将<code>html_theme='alabaster'</code>改为<code>html_theme='sphinx_rtd_theme'</code>.如果想添加插件，也是需要在该配置文件修改。</p><h3 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h3><p>sphinx的很多功能需要插件支持，插件可以分两类插件</p><ul><li>内置官方插件，使用方法可以从该网页查看<a href="https://www.sphinx-doc.org/en/master/usage/extensions/index.html">sphinx-extensions</a>，可以直接在配置文件添加。</li><li>开源非官方插件，可以从该网页下载安装<a href="https://bitbucket.org/birkenfeld/sphinx-contrib">sphinx-contrib</a>，安装方法可以参见如下支持markdown的例子。</li></ul><h3 id="添加插件例子：支持markdown"><a href="#添加插件例子：支持markdown" class="headerlink" title="添加插件例子：支持markdown"></a>添加插件例子：支持markdown</h3><p><a href="https://www.sphinx-doc.org/en/1.6/markdown.html">Markdown support</a><br>下面是安装顺序</p><blockquote><p><strong>Configuration</strong><br>To configure your Sphinx project for Markdown support, proceed as follows:<br>Install recommonmark:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;pip install recommonmark</span><br></pre></td></tr></table></figure><br>Add the Markdown parser to the source_parsers configuration variable in your Sphinx configuration file:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;source_parsers = {</span><br><span class="line">  <span class="string">'.md'</span>: <span class="string">'recommonmark.parser.CommonMarkParser'</span>,</span><br><span class="line">&gt;}</span><br></pre></td></tr></table></figure><br>You can replace .md with a filename extension of your choice.<br>Add the Markdown filename extension to the source_suffix configuration variable:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;source_suffix = [<span class="string">'.rst'</span>, <span class="string">'.md'</span>]</span><br><span class="line">&gt;You can further configure recommonmark to allow custom syntax that standard CommonMark doesn’t &gt;support. Read more <span class="keyword">in</span> the recommonmark documentation.</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>sphinx是一个广泛使用的网页生成软件，其可玩性也高，不仅适合做一些博客，也可作为静态网页存在本地，作为笔记来查阅、使用。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python虚拟环境是什么</title>
      <link href="/2020/02/11/C_%E6%95%99%E7%A8%8B_Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/2020/02/11/C_%E6%95%99%E7%A8%8B_Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Virtualenviroment"><a href="#Python-Virtualenviroment" class="headerlink" title="Python #Virtualenviroment"></a>Python #Virtualenviroment</h1><p>以前不理解Python虚拟环境，听名字觉得不明所以，查看<a href="https://docs.python.org/zh-cn/3/tutorial/venv.html">文档</a>后觉得非常简单。下面做一个记录</p><h2 id="虚拟环境和包"><a href="#虚拟环境和包" class="headerlink" title="虚拟环境和包"></a>虚拟环境和包</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Python应用程序通常会使用不在标准库内的软件包和模块。应用程序有时需要特定版本的库，因为应用程序可能需要修复特定的错误，或者可以使用库的过时版本的接口编写应用程序。</p><p>这意味着一个Python安装可能无法满足每个应用程序的要求。如果应用程序A需要特定模块的1.0版本但应用程序B需要2.0版本，则需求存在冲突，安装版本1.0或2.0将导致某一个应用程序无法运行。</p><p>这个问题的解决方案是创建一个 virtual environment，一个目录树，其中安装有特定Python版本，以及许多其他包。</p><p>然后，不同的应用将可以使用不同的虚拟环境。 要解决先前需求相冲突的例子，应用程序 A 可以拥有自己的 安装了 1.0 版本的虚拟环境，而应用程序 B 则拥有安装了 2.0 版本的另一个虚拟环境。 如果应用程序 B 要求将某个库升级到 3.0 版本，也不会影响应用程序 A 的环境。</p><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><p>用于创建和管理虚拟环境的模块称为 venv。venv 通常会安装你可用的最新版本的 Python。如果您的系统上有多个版本的 Python，您可以通过运行 python3 或您想要的任何版本来选择特定的Python版本。</p><p>要创建虚拟环境，请确定要放置它的目录，并将 venv 模块作为脚本运行目录路径:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv tutorial-env</span><br></pre></td></tr></table></figure><p>如果它不存在，这将创建 tutorial-env 目录，并在其中创建包含Python解释器，标准库和各种支持文件的副本的目录。</p><p>虚拟环境的常用目录位置是 .venv。 这个名称通常会令该目录在你的终端中保持隐藏，从而避免需要对所在目录进行额外解释的一般名称。 它还能防止与某些工具所支持的 .env 环境变量定义文件发生冲突。</p><p>创建虚拟环境后，您可以激活它。</p><ul><li>在Windows上，运行:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tutorial-env\Scripts\activate.bat</span><br></pre></td></tr></table></figure><ul><li>在Unix或MacOS上，运行:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source tutorial-env/<span class="built_in">bin</span>/activate</span><br><span class="line">（这个脚本是为bash shell编写的。如果你使用 csh 或 fish shell，你应该改用 activate.csh 或 activate.fish 脚本。）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Activating the virtual environment will change your shell’s prompt to show what virtual environment you’re using, and modify the environment so that running python will get you that particular version and installation of Python. For example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ source ~/envs/tutorial-env/<span class="built_in">bin</span>/activate</span><br><span class="line">(tutorial-env) $ python</span><br><span class="line">Python <span class="number">3.5</span><span class="number">.1</span> (default, May  <span class="number">6</span> <span class="number">2016</span>, <span class="number">10</span>:<span class="number">59</span>:<span class="number">36</span>)</span><br><span class="line">  ...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path</span><br><span class="line">[<span class="string">''</span>, <span class="string">'/usr/local/lib/python35.zip'</span>, ...,</span><br><span class="line"><span class="string">'~/envs/tutorial-env/lib/python3.5/site-packages'</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="使用pip管理包"><a href="#使用pip管理包" class="headerlink" title="使用pip管理包"></a>使用pip管理包</h3><p>你可以使用一个名为 pip 的程序来安装、升级和移除软件包。默认情况下 pip 将从 Python Package Index <a href="https://pypi.org">https://pypi.org</a> 安装软件包。你可以在浏览器中访问 Python Package Index 或是使用 pip 受限的搜索功能:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip search astronomy</span><br><span class="line">skyfield               - Elegant astronomy <span class="keyword">for</span> Python</span><br><span class="line">gary                   - Galactic astronomy <span class="keyword">and</span> gravitational dynamics.</span><br><span class="line">novas                  - The United States Naval Observatory NOVAS astronomy library</span><br><span class="line">astroobs               - Provides astronomy ephemeris to plan telescope observations</span><br><span class="line">PyAstronomy            - A collection of astronomy related tools <span class="keyword">for</span> Python.</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>pip 有许多子命令：“<code>search</code>”、“<code>install</code>”、“<code>uninstall</code>”、“<code>freeze</code>”等等。（请参阅 安装 Python 模块 指南以了解 pip 的完整文档。）</p><p>您可以通过指定包的名称来安装最新版本的包：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip install novas</span><br><span class="line">Collecting novas</span><br><span class="line">  Downloading novas-<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span>.tar.gz (136kB)</span><br><span class="line">Installing collected packages: novas</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> novas</span><br><span class="line">Successfully installed novas-<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span></span><br></pre></td></tr></table></figure><p>您还可以通过提供包名称后跟 == 和版本号来安装特定版本的包：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip install requests==<span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">Collecting requests==<span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">  Using cached requests-<span class="number">2.6</span><span class="number">.0</span>-py2.py3-none-<span class="built_in">any</span>.whl</span><br><span class="line">Installing collected packages: requests</span><br><span class="line">Successfully installed requests-<span class="number">2.6</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>如果你重新运行这个命令，pip 会注意到已经安装了所请求的版本并且什么都不做。您可以提供不同的版本号来获取该版本，或者您可以运行<code>pip install --upgrade</code> 将软件包升级到最新版本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip install --upgrade requests</span><br><span class="line">Collecting requests</span><br><span class="line">Installing collected packages: requests</span><br><span class="line">  Found existing installation: requests <span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">    Uninstalling requests-<span class="number">2.6</span><span class="number">.0</span>:</span><br><span class="line">      Successfully uninstalled requests-<span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">Successfully installed requests-<span class="number">2.7</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>pip uninstall 后跟一个或多个包名称将从虚拟环境中删除包。</p><p>pip show 将显示有关特定包的信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip show requests</span><br><span class="line">---</span><br><span class="line">Metadata-Version: <span class="number">2.0</span></span><br><span class="line">Name: requests</span><br><span class="line">Version: <span class="number">2.7</span><span class="number">.0</span></span><br><span class="line">Summary: Python HTTP <span class="keyword">for</span> Humans.</span><br><span class="line">Home-page: http://python-requests.org</span><br><span class="line">Author: Kenneth Reitz</span><br><span class="line">Author-email: me@kennethreitz.com</span><br><span class="line">License: Apache <span class="number">2.0</span></span><br><span class="line">Location: /Users/akuchling/envs/tutorial-env/lib/python3<span class="number">.4</span>/site-packages</span><br><span class="line">Requires:</span><br></pre></td></tr></table></figure><p><code>pip list</code> 将显示虚拟环境中安装的所有软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip list</span><br><span class="line">novas (3.1.1.3)</span><br><span class="line">numpy (1.9.2)</span><br><span class="line">pip (7.0.3)</span><br><span class="line">requests (2.7.0)</span><br><span class="line">setuptools (16.0)</span><br></pre></td></tr></table></figure><p>pip freeze` 将生成一个类似的已安装包列表，但输出使用 pip install 期望的格式。一个常见的约定是将此列表放在 requirements.txt 文件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip freeze &gt; requirements.txt</span><br><span class="line">(tutorial-env) $ <span class="built_in">cat</span> requirements.txt</span><br><span class="line">novas==3.1.1.3</span><br><span class="line">numpy==1.9.2</span><br><span class="line">requests==2.7.0</span><br></pre></td></tr></table></figure><p>然后可以将 requirements.txt 提交给版本控制并作为应用程序的一部分提供。然后用户可以使用 install -r 安装所有必需的包：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(tutorial-env) $ pip install -r requirements.txt</span><br><span class="line">Collecting novas==<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span> (<span class="keyword">from</span> -r requirements.txt (line <span class="number">1</span>))</span><br><span class="line">  ...</span><br><span class="line">Collecting numpy==<span class="number">1.9</span><span class="number">.2</span> (<span class="keyword">from</span> -r requirements.txt (line <span class="number">2</span>))</span><br><span class="line">  ...</span><br><span class="line">Collecting requests==<span class="number">2.7</span><span class="number">.0</span> (<span class="keyword">from</span> -r requirements.txt (line <span class="number">3</span>))</span><br><span class="line">  ...</span><br><span class="line">Installing collected packages: novas, numpy, requests</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> novas</span><br><span class="line">Successfully installed novas-<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span> numpy-<span class="number">1.9</span><span class="number">.2</span> requests-<span class="number">2.7</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>pip 有更多选择。有关 pip 的完整文档，请参阅 安装 <a href="https://docs.python.org/zh-cn/3/installing/index.html#installing-index">Python 模块 指南</a>。当您编写一个包并希望在 Python 包索引中使它可用时，请参考 <a href="https://docs.python.org/zh-cn/3/distributing/index.html#distributing-index">分发 Python 模块</a> 指南。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python矩阵使用小结</title>
      <link href="/2020/02/08/C_%E6%95%99%E7%A8%8B_Python%E7%9F%A9%E9%98%B5%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/02/08/C_%E6%95%99%E7%A8%8B_Python%E7%9F%A9%E9%98%B5%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Dataprocessing"><a href="#Python-Dataprocessing" class="headerlink" title="Python #Dataprocessing"></a>Python #Dataprocessing</h1><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>对于我个人而言，无论是用MATLAB，或者是python,我都没有系统的学习过。喜欢在网络上搜索一个别人的代码，拿来改一改，就直接用，不明白背后的机理。实际自己编程时候，不去网络上搜索就寸步难行。为了改变这种状况，我决定对于编程进行一些定期的专题总结。<br>python的numpy库可以很好的支持矩阵的一些运算，对于数值计算以及数据处理非常方便，但是自己在使用的过程中发现有很多特性需要着重总结一下，避免后续写程序的时候做一些无用功。本篇笔记主要是想详细讨论矩阵这一元素的基本操作以及可视化规律。首先应该插入对应的包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><h3 id="矩阵的初始化"><a href="#矩阵的初始化" class="headerlink" title="矩阵的初始化"></a>矩阵的初始化</h3><p> 矩阵初始化有好几种形式，也有一些特殊的函数来初始化，我们要分清矩阵的形状如何。是行矩阵还是列矩阵，首先是默认的初始化化行和列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(A,A.shape)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1 2 3] (3,)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">B=np.array([[<span class="number">1</span>],[<span class="number">2</span>],[<span class="number">3</span>]])</span><br><span class="line"><span class="built_in">print</span>(B,B.shape)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[1]</span><br><span class="line"> [2]</span><br><span class="line"> [3]] (3, 1)</span><br></pre></td></tr></table></figure><p>上面两种不同的创建方式所形成的矩阵的形状是不一样的，如果直接输入“[1,2,3]”，则是一 个（3,）形状的矩阵，即是一个一维矩阵，第二个维度是没有的，用中括号括起来之后，则是(3,1)的矩阵，可以是一个二维矩阵，矩阵只有一列。关于“,”的用法还不是很熟悉。<br> 接下来看如何定义一个二维矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"><span class="built_in">print</span>(C)</span><br><span class="line"><span class="built_in">print</span>(C.shape)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[1 2 3]</span><br><span class="line"> [4 5 6]]</span><br><span class="line">(2, 3)</span><br></pre></td></tr></table></figure><p> 这种方法创建的矩阵，每一个中括号构成了矩阵的一行。，最终形状为(2,3)，代表有两行三列。初始化矩阵还可以用一些特殊函数，和MATLAB一样，有”ones”,”zeros”,”eye”,”rand”,”identity”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ones_mat=np.ones((<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'for ones'</span>)</span><br><span class="line"><span class="built_in">print</span>(ones_mat)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for ones</span><br><span class="line">[[1. 1. 1.]</span><br><span class="line"> [1. 1. 1.]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zeros_mat=np.zeros((<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'for zeros'</span>)</span><br><span class="line"><span class="built_in">print</span>(zeros_mat)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for zeros</span><br><span class="line">[[0. 0. 0.]</span><br><span class="line"> [0. 0. 0.]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eye_mat=np.eye(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'for eys'</span>)</span><br><span class="line"><span class="built_in">print</span>(eye_mat)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for eys</span><br><span class="line">[[1. 0. 0.]</span><br><span class="line"> [0. 1. 0.]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">identity_mat=np.identity(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'for indentity'</span>)</span><br><span class="line"><span class="built_in">print</span>(identity_mat)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for indentity</span><br><span class="line">[[1. 0. 0.]</span><br><span class="line"> [0. 1. 0.]</span><br><span class="line"> [0. 0. 1.]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rand_mat=np.random.rand(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'for rand'</span>)</span><br><span class="line"><span class="built_in">print</span>(rand_mat)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for rand</span><br><span class="line">[[0.99397064 0.5067113  0.29838922]</span><br><span class="line"> [0.09256186 0.58608547 0.71958337]]</span><br></pre></td></tr></table></figure><h3 id="矩阵的索引与切片"><a href="#矩阵的索引与切片" class="headerlink" title="矩阵的索引与切片"></a>矩阵的索引与切片</h3><p>我们非常常见的操作是选取矩阵的某一些元素，比如某一行，某一列，第几行到第几列等。还是以上面创建的矩阵为例子，我们要选取矩阵C的第二列的话</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(C[:,<span class="number">1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[2 5]</span><br></pre></td></tr></table></figure><p>第二行的话</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(C[<span class="number">1</span>,:])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[4 5 6]</span><br></pre></td></tr></table></figure><p>与MATLAB的用法一样，除了括号变为方括号,序数从0开始没有什么差别，接下里要选取C的前两列，MATLAB怎么选呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C(1:2,:)</span><br></pre></td></tr></table></figure><p>但是python却不一样，python的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C[0:1,:]</span><br></pre></td></tr></table></figure><p>只是第一列而已，我们可以验证</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(C[:,<span class="number">0</span>:<span class="number">1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[1]</span><br><span class="line"> [4]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(C[:,<span class="number">0</span>:<span class="number">2</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[1 2]</span><br><span class="line"> [4 5]]</span><br></pre></td></tr></table></figure><p>这是一个非常不同的点，我开始想当然认为与MATLAB一样，导致出现了一些错误。</p><h3 id="网格矩阵"><a href="#网格矩阵" class="headerlink" title="网格矩阵"></a>网格矩阵</h3><p>我们的一种操作是网格矩阵，因为需要再二维或者三维空间描述数据。在此之前，我需要介绍几个特殊的矩阵操作函数。首先是reshae函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C_reshape=np.reshape(C,<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(C_reshape)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1 2 3 4 5 6]</span><br></pre></td></tr></table></figure><p>我们不难发现，python是第一行第一列第一个元素、第二个元素…第二行第一个元素这样的顺序来访问数组元素。第二个函数是ravel函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C_ravel=np.ravel(C)</span><br><span class="line"><span class="built_in">print</span>(C_ravel)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1 2 3 4 5 6]</span><br></pre></td></tr></table></figure><p>结果也是一样。这好像于MATLAB是反的？即使这样，索引的第一个参数是第几行，第二个参数是第几列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(C[<span class="number">1</span>,<span class="number">0</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>为了查看网格矩阵的产生，我们需要两个一维矩阵。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=np.linspace(<span class="number">0</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">y=np.linspace(<span class="number">4</span>,<span class="number">10</span>,<span class="number">7</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[0. 1. 2. 3. 4. 5.]</span><br><span class="line">[ 4.  5.  6.  7.  8.  9. 10.]</span><br></pre></td></tr></table></figure><p>我们来测试下两种不同的方式产生grid</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1_grid,y1_grid=np.meshgrid(x,y)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(x1_grid)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[[0. 1. 2. 3. 4. 5.]</span><br><span class="line"> [0. 1. 2. 3. 4. 5.]</span><br><span class="line"> [0. 1. 2. 3. 4. 5.]</span><br><span class="line"> [0. 1. 2. 3. 4. 5.]</span><br><span class="line"> [0. 1. 2. 3. 4. 5.]</span><br><span class="line"> [0. 1. 2. 3. 4. 5.]</span><br><span class="line"> [0. 1. 2. 3. 4. 5.]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(y1_grid)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[[ 4.  4.  4.  4.  4.  4.]</span><br><span class="line"> [ 5.  5.  5.  5.  5.  5.]</span><br><span class="line"> [ 6.  6.  6.  6.  6.  6.]</span><br><span class="line"> [ 7.  7.  7.  7.  7.  7.]</span><br><span class="line"> [ 8.  8.  8.  8.  8.  8.]</span><br><span class="line"> [ 9.  9.  9.  9.  9.  9.]</span><br><span class="line"> [10. 10. 10. 10. 10. 10.]]</span><br></pre></td></tr></table></figure><p>对于函数，np.meshgrid(x,y),x的长度作为列数，y的长度作为行数，x作为特殊行复制变成x_grid,y作为特殊列复制变成有grid。</p><p>接下来分析更加复杂的网格，分析其性质。我们有首先创造三个一维矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">m_1=np.linspace(<span class="number">0</span>,<span class="number">9</span>,<span class="number">49</span>)</span><br><span class="line">m_2=np.linspace(<span class="number">0</span>,<span class="number">10</span>,<span class="number">50</span>)</span><br><span class="line">m_3=np.linspace(<span class="number">0</span>,<span class="number">11</span>,<span class="number">51</span>)</span><br><span class="line">m1_grid,m2_grid,m3_grid=np.meshgrid(m_1,m_2,m_3)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z_3d=np.cos(m1_grid)*(m2_grid)**<span class="number">2</span>*np.sin(m3_grid)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fig=plt.figure(figsize=(<span class="number">6.4</span>*<span class="number">3</span>,<span class="number">4.8</span>))</span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.imshow(z_3d[:,:,<span class="number">15</span>],cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.imshow(z_3d[:,<span class="number">0</span>,:],cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.imshow(z_3d[<span class="number">15</span>,:,:],cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200208_output_39_0.png" alt="图1"></p><p>以上是一些矩阵的切片。我现在想的是在将上面的矩阵变成一维矩阵之后，如何reshape回来？即</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">z_1d=np.cos(np.ravel(m1_grid))*(np.ravel(m2_grid))**<span class="number">2</span>*np.sin(np.ravel(m3_grid))</span><br><span class="line">z_3d_re=np.reshape(z_1d,(<span class="number">50</span>,<span class="number">49</span>,<span class="number">51</span>))</span><br><span class="line">fig=plt.figure(figsize=(<span class="number">6.4</span>*<span class="number">3</span>,<span class="number">4.8</span>))</span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.imshow(z_3d_re[:,:,<span class="number">15</span>],cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.imshow(z_3d_re[:,<span class="number">0</span>,:],cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.imshow(z_3d_re[<span class="number">15</span>,:,:],cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200208_output_41_0.png" alt="图41"></p><p>还是可以回来的，因此原来是什么样子，还是可以变回来。</p><h3 id="绘图函数"><a href="#绘图函数" class="headerlink" title="绘图函数"></a>绘图函数</h3><p>另外需要注意的是绘图函数对于矩阵的操作。我们有一个二维矩阵，绘图之后，觉得与自己想的不符合，就转置一下，这样很容易浪费时间，因此我希望在此总结下。首先是用前面的矩阵创造一个二维分布数组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x2=np.linspace(-<span class="number">2</span>,<span class="number">2</span>,<span class="number">100</span>)</span><br><span class="line">y2=np.linspace(-<span class="number">2</span>,<span class="number">2</span>,<span class="number">100</span>)</span><br><span class="line">x2_grid,y2_grid=np.meshgrid(x2,y2)</span><br><span class="line">z_color=(x2_grid**<span class="number">2</span>+y2_grid**<span class="number">2</span>)*np.sin(x2_grid)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fig1=plt.figure()</span><br><span class="line">plt.imshow(z_color,cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200208_output_46_0.png" alt="图46"></p><p>上面是将行作为横序数坐标，列序数作为纵坐标。而其他的函数呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig2=plt.figure(figsize=(<span class="number">13</span>,<span class="number">4.8</span>))</span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">plt.pcolormesh(z_color,cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">plt.pcolormesh(x2_grid,y2_grid,z_color,cmap=<span class="string">'jet'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200208_output_48_0.png" alt="图4"></p><p>对于矩阵的形状不变，但是pcolormesh与imshow再x,y坐标的开始方面是不一样的。imshow的y轴从上至下是正方向，而x轴从左至右是正方向。pcolormeh在y轴上是反的，更加符合通常的思路。这一点要注意。这细枝末节，很容易造成错误。</p><h3 id="高纬度矩阵的转置"><a href="#高纬度矩阵的转置" class="headerlink" title="高纬度矩阵的转置"></a>高纬度矩阵的转置</h3><p>还想提到的是高纬度矩阵的转置，有时候我们有一个三维的数据，我们绘图时候希望某一个特殊的轴作为z轴、x轴等，这就需要我们对三维矩阵在三维空间翻转。需要用到转置函数，需要用到的函数时transpose函数，其用法为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.transpose(a, axes=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>axes是轴的序数，默认顺序是0，1，2,….，如果我们要交换某个矩阵，只需要更改顺序即可，下面是使用实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(z_3d.shape)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">50</span>, <span class="number">49</span>, <span class="number">51</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z_3d_1=np.transpose(z_3d,(<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(z_3d_1.shape)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">49</span>, <span class="number">50</span>, <span class="number">51</span>)</span><br></pre></td></tr></table></figure><p>所以用法一目了然.</p><p><strong>注意矩阵转置时，与MATLAB有本质的不同，MATLAB是从列开始的，而python是通过行来检索的。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How To Embed Animation Into Jupyter Notebook</title>
      <link href="/2020/02/02/A_En_HowToEmbedAnimationIntoJupyterNotebook/"/>
      <url>/2020/02/02/A_En_HowToEmbedAnimationIntoJupyterNotebook/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Plot"><a href="#Python-Plot" class="headerlink" title="Python #Plot"></a>Python #Plot</h1><p>Recently I struggled to choose the right way to write python. I’m not willing to use bloatware such as spyder to write. Since I want to feel very free when I want to start to write. This could be done via text eidter such as sublime text or vs code. However, my another demand is to write the note and code in the same file. This demand could be best solved via jupyter notebook when you want to solve something and show how you solve it. </p><p>I have tested the way of animating the plot by using the package Matplotlib. A more natural idea is that can the animated plot be shown in jupyter notebook. After searching in the web I know this couldn’t be solved directly. Different people offer different solutions. I choose the most simple and direct solution (at least in my mind). This is the <a href="https://www.numfys.net/howto/animations/">solution</a>.</p><p>Here is a simple examle from this <a href="https://www.numfys.net/howto/animations/">web</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> animation</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> HTML</span><br><span class="line"></span><br><span class="line"><span class="comment"># First set up the figure, the axis, and the plot element we want to animate</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = plt.axes(xlim=(<span class="number">0</span>, <span class="number">1</span>), ylim=(-<span class="number">6</span>, <span class="number">10</span>))</span><br><span class="line">line, = ax.plot([], [], lw=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialization function: plot the background of each frame</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line">    line.set_data([], [])</span><br><span class="line">    <span class="keyword">return</span> line,</span><br><span class="line"></span><br><span class="line"><span class="comment"># Animation function which updates figure data.  This is called sequentially</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">animate</span>(<span class="params">i</span>):</span><br><span class="line">    line.set_data(x, u[i,:])</span><br><span class="line">    <span class="keyword">return</span> line,</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call the animator.  blit=True means only re-draw the parts that have changed.</span></span><br><span class="line">anim = animation.FuncAnimation(fig, animate, init_func=init,</span><br><span class="line">                               frames=Nt, interval=<span class="number">20</span>, blit=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">plt.close(anim._fig)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call function to display the animation</span></span><br><span class="line">HTML(anim.to_html5_video())</span><br></pre></td></tr></table></figure><p>I want tp try this method and I hope to use one of my original program which shows the difference between the actual case and harmonic oscillator approximation when <a href="https://knifelees3.github.io/2019/07/23/A_En_Python_PlotStudy1_SemiCircle_OscilatorApprox/">a sphere slides down from a semi-circle</a>. I want show show the plot displyed in the jupyter notebook and can be controled via some buttons. This can be realized by directly adding two extra lines into the original program.  To show the animation like a video in the jupyter notebook, </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> HTML</span><br><span class="line">HTML(anim.to_html5_video())</span><br></pre></td></tr></table></figure><p>Then you will see the following animated video in the explorer<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200202_HarmonicJupyterBook.gif" alt="The animated plot"></p><p>If you want to control the animated plot, you could type</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTML(anim.to_jshtml())</span><br></pre></td></tr></table></figure><p>then you can control the animated plot by hand.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20200202_HarmonicJupyterBookInterac.gif" alt="Interactive plot"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python模糊匹配文件夹下的文件并复制文件到另外的文件夹</title>
      <link href="/2020/01/13/C_%E6%95%99%E7%A8%8B_Python%E5%A4%8D%E5%88%B6%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8D%95%E7%8B%AC%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2020/01/13/C_%E6%95%99%E7%A8%8B_Python%E5%A4%8D%E5%88%B6%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8D%95%E7%8B%AC%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Tools"><a href="#Python-Tools" class="headerlink" title="Python #Tools"></a>Python #Tools</h1><h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>自己目前在用<a href="https://github.com/tamlok/vnote">VNote</a>写笔记，这个笔记软件非常便于我们管理本地Markdown文件，具体的用法后续会单独介绍，今天我要记录的是，怎么用python来复制特定的文件。</p><p>我的Hexo博客文件夹是Onedrive同步的，单独的文件夹。博客笔记要更新或者修改，我一般不直接对Hexo的文件操作，而是有一个单独的笔记本文件夹，觉得可以分享到网络上的笔记，我会复制到Hexo文件夹下的<code>_post</code>文件目录。这样的缺点是有时候会不小心直接在Hexo文件夹下改，而原来的本地文件夹的文件没有修改，造成版本混乱。而且手动复制也很麻烦。有没有更加自动化的操作呢?</p><p>用过Linux的都知道，Linux下有通过<code>*</code>来模糊匹配的方法，并且有<code>cp</code>命令来进行文件的复制。windows我不太清楚，打算通过python来实现，也算是一个学习python的机会。这是本片笔记的目的</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>通过<a href="https://stackoverflow.com/questions/3964681/find-all-files-in-a-directory-with-extension-txt-in-python">网络上查询</a>，知道了可以通过<a href="https://docs.python.org/3/library/os.html">os</a>，<a href="https://docs.python.org/3/library/shutil.html">shutil</a>包来操作文件，具体的</p><ul><li><code>os.listdir()</code> 可以展示某一个文件夹下的文件以及文件夹。缺点是只能展示一级文件夹。</li><li><code>os.walk()</code> 可以遍历某一个文件夹下的所有文件以及文件夹，其返回值根据该<a href="https://www.geeksforgeeks.org/os-walk-python/">介绍</a><blockquote><p>OS.walk() generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the tree rooted at directory top (including top itself), it yields a 3-tuple (<code>dirpath</code>, <code>dirnames</code>, <code>filenames</code>).</p></blockquote></li></ul><p>即<code>os.walk()</code>返回值有三个，其中</p><pre><code> * `dirpath` 是目标路径下所有文件的路径 * `dirnames` 是目标路径的所有目录名称 * `dilenames` 是各个路径下的文件名称列表.</code></pre><ul><li><code>shutil.copy</code> 复制文件从一个文件夹到另外一个文件夹，但是文件的时间都是新的。</li><li><code>shutil.copy2</code> 复制文件从一个文件夹到另外一个文件夹，但是文件的时间保留以前的。</li></ul><p>具体的用法google以下就行，不在此赘述。</p><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><p>具体实现时，首先插入所需要的包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> shutil <span class="keyword">import</span> copy2</span><br></pre></td></tr></table></figure><p>然后定义好要操作的文件夹<code>rootdir</code>以及目标文件夹<code>dstdir</code>，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rootdir = <span class="string">r'C:\Users\...'</span></span><br><span class="line">dstdir = <span class="string">r'C:\Users\...'</span></span><br><span class="line"><span class="comment"># 我这里缺省掉了，具体的得替换自己的文件夹即可</span></span><br></pre></td></tr></table></figure><p>然后需要定义一个函数来遍历文件，复制文件，其定义如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_files</span>(<span class="params">rootdir, dstdir</span>):</span><br><span class="line">    counter = <span class="number">0</span> <span class="comment">#用来计数一共复制了多少个文件</span></span><br><span class="line">    <span class="keyword">for</span> filepath, dirnames, filenames <span class="keyword">in</span> os.walk(rootdir): <span class="comment">#遍历文件夹</span></span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames: <span class="comment">#遍历文件</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'A_En'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'B_随笔'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'C_教程'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'D_收集'</span> <span class="keyword">in</span> filename <span class="keyword">and</span> filename.endswith(<span class="string">'.md'</span>): </span><br><span class="line">            <span class="comment">#设置条件，文件含有“A_En”或'B_随笔'...并且以“.md”文件结尾</span></span><br><span class="line">                counter = counter+<span class="number">1</span></span><br><span class="line">                <span class="comment"># 结合文件夹和文件生成完整的绝对的路径</span></span><br><span class="line">                long_name = os.path.join(filepath, filename) </span><br><span class="line">                <span class="comment">#f复制文件</span></span><br><span class="line">                copy2(long_name, dstdir)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">'已经复制了文件： '</span>+long_name)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'一共复制了'</span>+<span class="built_in">str</span>(counter) + <span class="string">'个文件'</span>)</span><br></pre></td></tr></table></figure><p>注释已经写的很详细，就不再这里多讲了。</p><h1 id="完整的代码"><a href="#完整的代码" class="headerlink" title="完整的代码"></a>完整的代码</h1><p>最后，附上完整代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> shutil <span class="keyword">import</span> copy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_files</span>(<span class="params">rootdir, dstdir</span>):</span><br><span class="line">    counter = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> filepath, dirnames, filenames <span class="keyword">in</span> os.walk(rootdir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'A_En'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'B_随笔'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'C_教程'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'D_收集'</span> <span class="keyword">in</span> filename <span class="keyword">and</span> filename.endswith(<span class="string">'.md'</span>):</span><br><span class="line">                counter = counter+<span class="number">1</span></span><br><span class="line">                long_name = os.path.join(filepath, filename)</span><br><span class="line">                copy2(long_name, dstdir)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">'已经复制了文件： '</span>+long_name)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'一共复制了'</span>+<span class="built_in">str</span>(counter) + <span class="string">'个文件'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    rootdir = <span class="string">r'C:Users\test1\'</span></span><br><span class="line"><span class="string">    dstdir = r'</span>C:\Users\test\<span class="string">'</span></span><br><span class="line"><span class="string">    get_files(rootdir, dstdir)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inkscape常见基础操作与设置</title>
      <link href="/2020/01/08/C_%E6%95%99%E7%A8%8B_Inkscape%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/01/08/C_%E6%95%99%E7%A8%8B_Inkscape%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Inkscape-Draw"><a href="#Inkscape-Draw" class="headerlink" title="Inkscape #Draw"></a>Inkscape #Draw</h1><h2 id="Inkscape基础操作"><a href="#Inkscape基础操作" class="headerlink" title="Inkscape基础操作"></a>Inkscape基础操作</h2><ul><li><p>F1 拾取器(Selector)<br>按下<code>Ctrl</code>来进行水平或竖直移动<br>再次在矩形上单击，控制器会发生变化<br>按下<code>Ctrl</code>以保持旋转的角度为15度的整数倍<br>按下<code>Ctrl</code>以保持扭曲(倾斜)的角度为15度的整数倍。</p></li><li><p>群组<br>选择一个或多个对象后，按<code>Ctrl+G</code>可以将它们组合在一起<br>选中一个或多个群组后，按<code>Ctrl+U</code>可以解散组合</p></li><li><p>填充与轮廓- <code>Shift+Ctrl+W</code></p></li></ul><ul><li><p>填充和笔刷-<code>shift+Ctrl+F</code><br>设置：颜色+透明度+填充+轮廓</p></li><li><p>再制、对齐和分布<br>再制duplicating-(<code>Ctrl+D</code>）<br>对齐对话框-(<code>Ctrl+Shift+A</code>)</p></li><li><p>叠放次序Z-order<br>置顶-<code>Home</code>键<br>置底-<code>End</code>键<br>上升-<code>PgUp</code>键<br>下降-<code>PgDn</code>键<br>如果没有选择任何对象，按Tab将会选择最底层的对象<br><code>Shift+Tab</code>的选择方向则相反，从最顶层开始，往底层逐次选择</p></li><li><p>选择下面的对象并移动<br><code>Alt+click</code>–实现从顶层到底层的循环选择</p></li><li><p>文本工具<br>切换到文本工具 -<code>F8</code><br>文本和字体对话框-`Shift+Ctrl+T</p></li><li><p>如何改变叠放次序?没有小键盘的时候</p><blockquote><p>z-order指的是绘图中对象的叠放次序，例如，某个对象在最上层，盖住了其它的对象。对象(Object)菜单中的两个命令，置顶(Raise to Top,对应Home键)与置底(Lower to Botton,End键)，将使所选对象置于当前图层叠放次序(Z方向)的顶部或底部。另外两个命令上升(Raise，PgUp键)与下降(Lower，PgDn键)，将使被选择对象上升或下将一个位次，例如，可以将当前对象移动到它上面一个图形的上面。(如果所选对象与其它对象都不重叠，上移和下移分别等同于置顶和置底。)</p></blockquote></li></ul><p>可以在下面的图形上练习改变叠放次序，让最左边的椭圆位于最上层，而最右边的椭圆位于最下层：</p><ul><li>有时候发现无论如何也不能把某一个物体移动到另外一个物体的上方？</li></ul><p>这种bug一般存在于从另外一个文件复制粘贴的时候，最简单的解决方法是将所有的文件group一下，然后ungroup，就可以了。</p><h2 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h2><p>设s</p>]]></content>
      
      
      
        <tags>
            
            <tag> Inkscape </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blender新手常见问题汇总</title>
      <link href="/2020/01/07/C_%E6%95%99%E7%A8%8B_Blender%E9%87%8D%E8%A6%81%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2020/01/07/C_%E6%95%99%E7%A8%8B_Blender%E9%87%8D%E8%A6%81%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Blender-Darw"><a href="#Blender-Darw" class="headerlink" title="Blender #Darw"></a>Blender #Darw</h1><h1 id="Blender新手常见问题汇总"><a href="#Blender新手常见问题汇总" class="headerlink" title="Blender新手常见问题汇总"></a>Blender新手常见问题汇总</h1><h2 id="如何让摄像头跟随自己的当前屏幕的视角？"><a href="#如何让摄像头跟随自己的当前屏幕的视角？" class="headerlink" title="如何让摄像头跟随自己的当前屏幕的视角？"></a>如何让摄像头跟随自己的当前屏幕的视角？</h2><p>按住0键会来到摄像机视角，而按住<code>ctrl+alt+0</code>  会将摄像机视角跟随过来</p><h2 id="笔记本没有小键盘怎么破？"><a href="#笔记本没有小键盘怎么破？" class="headerlink" title="笔记本没有小键盘怎么破？"></a>笔记本没有小键盘怎么破？</h2><p>可以在设置里面更改，点 Edie&gt;Preference&gt;Input ,然后勾选</p><ul><li>[X] Emulate Numpad</li></ul><h2 id="如何设置背景为透明？"><a href="#如何设置背景为透明？" class="headerlink" title="如何设置背景为透明？"></a>如何设置背景为透明？</h2><p><img src="_v_images/20200107091705072_12598.png" alt="修改背景图片的设置"><br>勾选Render&gt;Film&gt;Alpha,选择为transparent</p><h2 id="改变世界背景"><a href="#改变世界背景" class="headerlink" title="改变世界背景"></a>改变世界背景</h2><h2 id="曲线移动的时候只能移动原点？"><a href="#曲线移动的时候只能移动原点？" class="headerlink" title="曲线移动的时候只能移动原点？"></a>曲线移动的时候只能移动原点？</h2><p>![[Z_Attachment/Pasted image 20241115103855.png]]</p><p>注意这里要框选一下</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blender </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优秀的线上网站推荐</title>
      <link href="/2020/01/05/D_%E6%94%B6%E9%9B%86_%E5%90%84%E7%A7%8D%E6%9C%89%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99%E6%B1%87%E6%80%BB/"/>
      <url>/2020/01/05/D_%E6%94%B6%E9%9B%86_%E5%90%84%E7%A7%8D%E6%9C%89%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Collection-Web"><a href="#Collection-Web" class="headerlink" title="Collection #Web"></a>Collection #Web</h1><h1 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h1><ul><li><a href="https://ezgif.com/">ezgif</a>  线上的gif编辑工具</li><li><a href="https://www.zybuluo.com/mdeditor">CMD Markdown</a> 在线的Markdown编辑器</li><li><a href="https://docsmall.com/gif-compress">docsmall</a> 在线gif格式文件压缩工具</li><li><a href="http://latex2png.com/">latex2png</a> 在线生成latex的公式的PNG图片，对于需要做PPT时，可能有用</li><li><a href="http://www.tohttp.com/">GotoHttp</a> 在线的基于浏览器的在线远程控制软件</li><li><a href="https://www.overleaf.com/">overleaf</a> 在线Latex书写工具，同时也有很多教程，比如<a href="https://www.overleaf.com/learn/latex/List_of_Greek_letters_and_math_symbols">数学表达式的表达</a>,<a href="https://www.overleaf.com/learn/latex/Hyperlinks">引用的用法</a></li></ul><h1 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h1><ul><li><a href="https://bt.byr.cn/">北邮人</a> BT软件站，北邮出品</li><li><a href="https://hudbt.hust.edu.cn/">蝴蝶</a> BT软件站, 华科出品</li><li><a href="https://b-ok.cc/">bokcc</a> 英文书籍搜索资源网站 I</li><li><a href="http://gen.lib.rus.ec/">Library Genesis</a> 英文书籍搜索资源网站 II</li><li><a href="https://bookfere.com/">书伴</a> Kindle电子书资源网站 I</li><li><a href="https://sobooks.cc/">So Books</a> Kindle电子书资源网站 II</li><li><a href="http://www.foxebook.net/">foxebook</a> 电子书资源网站 III (英文IT类)</li><li><a href="http://www.allitebooks.org/">allitebboks</a> 电子书资源网站IIII (英文IT类)</li></ul><h1 id="学术主页"><a href="#学术主页" class="headerlink" title="学术主页"></a>学术主页</h1><ul><li><a href="https://www.mpg.de/154942/physik_des_lichts">Max Planck Institute for the Science of Light</a> Vahid 教授所在组</li><li><a href="https://web.stanford.edu/group/fan/">Shanhui Fan</a> 范汕洄教授所在组</li><li><a href="https://www.lp2n.institutoptique.fr/equipes-de-recherche-du-lp2n/light-complex-nanostructures">Light in complex nanostructures</a> Philippe LALANNE 课题组</li></ul><h1 id="杂志官网"><a href="#杂志官网" class="headerlink" title="杂志官网"></a>杂志官网</h1><ul><li><a href="https://arxiv.org/">arxiv</a></li><li><a href="https://www.osapublishing.org/oe/home.cfm">OSA</a></li><li><a href="https://journals.aps.org/">APS</a></li><li><a href="http://www.nature.com/">Nature</a></li><li><a href="https://www.sciencemag.org/">Science</a></li></ul><h1 id="在线知识库"><a href="#在线知识库" class="headerlink" title="在线知识库"></a>在线知识库</h1><ul><li><a href="https://support.lumerical.com/hc/en-us/articles/360034917213">FDTD Lumerical Example</a> FDTD的一些官方例子</li><li><p><a href="https://refractiveindex.info/">RefactiveIndexOnline</a> 在线的光学折射率查询</p><h1 id="一些个人博客"><a href="#一些个人博客" class="headerlink" title="一些个人博客"></a>一些个人博客</h1></li><li><p><a href="https://marcosnietoblog.wordpress.com/">Macro Nieto</a> 一个程序员的博客，先码一下</p></li></ul><h1 id="有用课程"><a href="#有用课程" class="headerlink" title="有用课程"></a>有用课程</h1><ul><li><p><a href="https://www.youtube.com/watch?v=xnt2xSNRNn0">Quantum Physics -Geek’s Lesson</a></p></li><li><p><a href="https://www.youtube.com/user/MIT">MIT Open Course</a></p></li><li><a href="https://empossible.net/academics/emp5337/">EMPossible</a>：关于各种电磁学算法的课程。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Visualization Via MATLAB (3 dimensional data)</title>
      <link href="/2019/12/30/A_En_MATLAB_PlotSummary2_3dContourPlots/"/>
      <url>/2019/12/30/A_En_MATLAB_PlotSummary2_3dContourPlots/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-Plot"><a href="#MATLAB-Plot" class="headerlink" title="MATLAB  #Plot"></a>MATLAB  #Plot</h1><h2 id="Data-Visualization-Via-MATLAB-3-dimensional-data"><a href="#Data-Visualization-Via-MATLAB-3-dimensional-data" class="headerlink" title="Data Visualization Via MATLAB (3 dimensional data)"></a>Data Visualization Via MATLAB (3 dimensional data)</h2><p>The three dimensinal data are composed of <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="7.287ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 3220.9 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1100.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(1600.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2422.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(2922.9,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g></svg></mjx-container>  matrix. Its data also has the position matrix. (x,y,z). We can plot the isosurface, contourlines, slice plots etc for this kind of data.</p><h3 id="3d-Contour-Surface-Plots"><a href="#3d-Contour-Surface-Plots" class="headerlink" title="3d Contour Surface Plots"></a>3d Contour Surface Plots</h3><p>We should extract the contour data via the function <code>isosurface</code>. Though I have completed the figure, I can’t understand the reason. I will give issulation later.</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% As a study of 3D data visualization using MATLAB</span></span><br><span class="line"><span class="comment">% Author Zhaohua Tian</span></span><br><span class="line"><span class="comment">% Email:knifelees3@gmail.com</span></span><br><span class="line"><span class="comment">% The figures in the Ref: "Quantum photonic node for on-chip state transfer" (https://arxiv.org/abs/1908.03683)</span></span><br><span class="line">A=dlmread(<span class="string">'../3D_Animation/BigRangeSweep3Cav.txt'</span>);</span><br><span class="line">num_J12=<span class="number">199</span>;</span><br><span class="line">num_J23=<span class="number">200</span>;</span><br><span class="line">num_kappa=<span class="number">201</span>;</span><br><span class="line">max_sym=<span class="built_in">reshape</span>(A,[num_J12,num_J23,num_kappa]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">J12_mat=<span class="built_in">linspace</span>(<span class="number">1</span>,<span class="number">9</span>,num_J12);</span><br><span class="line">J23_mat=<span class="built_in">linspace</span>(<span class="number">1</span>,<span class="number">10</span>,num_J23);</span><br><span class="line">kappa_mat=<span class="built_in">linspace</span>(<span class="number">1</span>,<span class="number">28</span>,num_kappa);</span><br><span class="line">[xx,yy,zz]=<span class="built_in">meshgrid</span>(J23_mat,J12_mat,kappa_mat);</span><br><span class="line"></span><br><span class="line"><span class="comment">%%</span></span><br><span class="line"><span class="comment">%get the figures</span></span><br><span class="line">h=<span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line">ax = axes(<span class="string">'Parent'</span>,h);</span><br><span class="line">p1 = patch(isosurface(xx,yy,zz,max_sym,<span class="number">0.8</span>));</span><br><span class="line">isonormals(xx,yy,zz,max_sym,p1)</span><br><span class="line">p1.FaceAlpha=<span class="number">0.15</span>;</span><br><span class="line">p1.FaceColor=[<span class="number">0</span>,<span class="number">0.3</span> <span class="number">0.3</span>];</span><br><span class="line">p1.EdgeColor=<span class="string">'none'</span>;</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"></span><br><span class="line">p2 = patch(isosurface(xx,yy,zz,max_sym,<span class="number">0.9</span>));</span><br><span class="line">isonormals(xx,yy,zz,max_sym,p2)</span><br><span class="line">p2.FaceAlpha=<span class="number">0.3</span>;</span><br><span class="line">p2.FaceColor=[<span class="number">0</span> <span class="number">0.7</span> <span class="number">0.7</span>];</span><br><span class="line">p2.EdgeColor=<span class="string">'none'</span>;</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"></span><br><span class="line">p3 = patch(isosurface(xx,yy,zz,max_sym,<span class="number">0.97</span>));</span><br><span class="line">isonormals(xx,yy,zz,max_sym,p3)</span><br><span class="line">p3.FaceAlpha=<span class="number">0.4</span>;</span><br><span class="line">p3.FaceColor=[<span class="number">0</span> <span class="number">0</span> <span class="number">0.8</span>];</span><br><span class="line">p3.EdgeColor=<span class="string">'none'</span>;</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="comment">%daspect([1 1 1])</span></span><br><span class="line">view(<span class="number">135</span>,<span class="number">20</span>); </span><br><span class="line">axis tight</span><br><span class="line"><span class="comment">%camlight('headlight','infinite')</span></span><br><span class="line">lighting(<span class="string">'flat'</span>)</span><br><span class="line">box(<span class="string">'on'</span>)</span><br><span class="line">lighting gouraud</span><br><span class="line">xlabel(<span class="string">'J_{12}/g'</span>)</span><br><span class="line">ylabel(<span class="string">'J_{23}/g'</span>)</span><br><span class="line">zlabel(<span class="string">'Kappa/g'</span>)</span><br><span class="line">print(<span class="string">'./sym_distri_static_MATLAB.png'</span>, <span class="string">'-dpng'</span>, <span class="string">'-r600'</span>)</span><br><span class="line"><span class="comment">% axis('off')</span></span><br><span class="line"><span class="comment">% print('../Figures/BigRangePureFig.png', '-dpng', '-r600')</span></span><br><span class="line"><span class="comment">% axis('on')</span></span><br><span class="line"><span class="comment">% p1.FaceColor='none';</span></span><br><span class="line"><span class="comment">% p2.FaceColor='none';</span></span><br><span class="line"><span class="comment">% p3.FaceColor='none';</span></span><br><span class="line"><span class="comment">% print('../Figures/BigRangeFrame.eps', '-depsc', '-r600')</span></span><br></pre></td></tr></table></figure><p>The generated plot are as follows</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/sym_distri_static_MATLAB.png" alt="Generated 3D contour plots"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D contour plot via Mayavi</title>
      <link href="/2019/12/30/A_En_Python_PlotStudy5_Contour3dPlots/"/>
      <url>/2019/12/30/A_En_Python_PlotStudy5_Contour3dPlots/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Plot"><a href="#Python-Plot" class="headerlink" title="Python #Plot"></a>Python #Plot</h1><p>Recently I am interested in the data visualization and I have try different plots.  Previously in my <a href="https://arxiv.org/abs/1908.03683">research work</a>  I ploted a 3d contour figure via MATLAB. Since the frequently used Python package Matplotlib has poor support on this kind of 3d data visualization. I also tried the Mayavi package before and I didn’t learn it well. </p><p>After reading a lot of examples I begin to control the skill of using Mayavi. I try to replot the original plots via python.</p><p>  Here is the process. We first need import the necessary package</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> mayavi <span class="keyword">import</span> mlab</span><br></pre></td></tr></table></figure><p>Then the 3d data should be prepared. The data are calculated via parameter sweep and store with txt format. We need load it </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %% Load the data</span></span><br><span class="line">dis_tri = np.loadtxt(<span class="string">'../3D_Animation/BigRangeSweep3Cav.txt'</span>)</span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">num_J12 = <span class="number">199</span></span><br><span class="line">num_J23 = <span class="number">200</span></span><br><span class="line">num_kappa = <span class="number">201</span></span><br><span class="line">J12_mat = np.linspace(<span class="number">1</span>, <span class="number">9</span>, num_J12)</span><br><span class="line">J23_mat = np.linspace(<span class="number">1</span>, <span class="number">10</span>, num_J23)</span><br><span class="line">kappa_mat = np.linspace(<span class="number">1</span>, <span class="number">14</span>, num_kappa)</span><br><span class="line"></span><br><span class="line">xx, yy, zz = np.mgrid[<span class="number">1</span>:<span class="number">14</span>:<span class="number">201j</span>, <span class="number">1</span>:<span class="number">10</span>:<span class="number">200j</span>, <span class="number">1</span>:<span class="number">9</span>:<span class="number">199j</span>]</span><br><span class="line">sym_mat = np.reshape(dis_tri, (num_kappa, num_J23, num_J12))</span><br></pre></td></tr></table></figure><p>We need  transpose the matrix since I need kappa to be the z axi</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sym_mat_tr = sym_mat.transpose(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">xx_tr, yy_tr, zz_tr = np.mgrid[<span class="number">1</span>:<span class="number">10</span>:<span class="number">200j</span>, <span class="number">1</span>:<span class="number">9</span>:<span class="number">199j</span>, <span class="number">1</span>:<span class="number">14</span>:<span class="number">201j</span>]</span><br></pre></td></tr></table></figure><p>Then we can plot the 3d data</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">fig_extent = [<span class="number">1</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">14</span>]</span><br><span class="line">fig1 = mlab.figure(size=(<span class="number">1000</span>, <span class="number">800</span>), bgcolor=(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), fgcolor=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">s = mlab.contour3d(xx_tr, yy_tr, zz_tr, sym_mat_tr, color=(<span class="number">0</span>, <span class="number">0.7</span>, <span class="number">0.7</span>), contours=[</span><br><span class="line">    <span class="number">0.8</span>], transparent=<span class="literal">True</span>, opacity=<span class="number">0.15</span>)  <span class="comment"># ,extent=fig_extent)</span></span><br><span class="line">mlab.contour3d(xx_tr, yy_tr, zz_tr, sym_mat_tr, color=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), contours=[</span><br><span class="line">               <span class="number">0.9</span>], transparent=<span class="literal">True</span>, opacity=<span class="number">0.3</span>)  <span class="comment"># ,extent=fig_extent)</span></span><br><span class="line">mlab.contour3d(xx_tr, yy_tr, zz_tr, sym_mat_tr, color=(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), contours=[</span><br><span class="line">               <span class="number">0.97</span>], transparent=<span class="literal">True</span>, opacity=<span class="number">0.4</span>)  <span class="comment"># ,extent=fig_extent)</span></span><br><span class="line">mlab.outline(extent=fig_extent)</span><br><span class="line">mlab.xlabel(<span class="string">'J23/g'</span>)</span><br><span class="line">mlab.ylabel(<span class="string">'J12/g'</span>)</span><br><span class="line">mlab.zlabel(<span class="string">'K/2g'</span>)</span><br><span class="line">mlab.view(<span class="number">180</span> + <span class="number">45</span>, -<span class="number">70</span>, <span class="number">42</span>, [<span class="number">5.5</span>, <span class="number">5</span>, <span class="number">7.5</span>])</span><br><span class="line">mlab.axes(color=(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), nb_labels=<span class="number">5</span>)</span><br><span class="line">mlab.savefig(<span class="string">'sym_distri_static_Python.png'</span>)</span><br><span class="line">mlab.show()</span><br></pre></td></tr></table></figure><p>I have used the function <code>contour3d</code> and its usage can be found in the mayavi  doc web.</p><p>The following is the figure I plotted.</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/sym_distri_static_Python.png" alt="3d Contour plots"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A rotated 3D contour plot via Mayavi</title>
      <link href="/2019/12/30/A_En_Python_PlotStudy4_RotatedContour3dPlots/"/>
      <url>/2019/12/30/A_En_Python_PlotStudy4_RotatedContour3dPlots/</url>
      
        <content type="html"><![CDATA[<p>This figure is the Fig2 of my <a href="https://arxiv.org/abs/1908.03683">research work</a> and I let it rotated.</p><p>This time I try o plot the 3d animated distribution via python package <a href="http://docs.enthought.com/mayavi/mayavi/">Mayavi</a></p><p>Different from the animated operation via using the Matplotlib, This 3d data visualization is more powerful.</p><p><del>I only upload the figure this time and I will write a complete note latterly.</del></p><p>The data are calculated via parameter sweep and store with txt format. We need load it </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %% Load the data</span></span><br><span class="line">dis_tri = np.loadtxt(<span class="string">'../3D_Animation/BigRangeSweep3Cav.txt'</span>)</span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line">num_J12 = <span class="number">199</span></span><br><span class="line">num_J23 = <span class="number">200</span></span><br><span class="line">num_kappa = <span class="number">201</span></span><br><span class="line">J12_mat = np.linspace(<span class="number">1</span>, <span class="number">9</span>, num_J12)</span><br><span class="line">J23_mat = np.linspace(<span class="number">1</span>, <span class="number">10</span>, num_J23)</span><br><span class="line">kappa_mat = np.linspace(<span class="number">1</span>, <span class="number">14</span>, num_kappa)</span><br><span class="line"></span><br><span class="line">xx, yy, zz = np.mgrid[<span class="number">1</span>:<span class="number">14</span>:<span class="number">201j</span>, <span class="number">1</span>:<span class="number">10</span>:<span class="number">200j</span>, <span class="number">1</span>:<span class="number">9</span>:<span class="number">199j</span>]</span><br><span class="line">sym_mat = np.reshape(dis_tri, (num_kappa, num_J23, num_J12))</span><br></pre></td></tr></table></figure><p>We need transpose the matrix since I need kappa to be the z axi</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sym_mat_tr = sym_mat.transpose(<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">xx_tr, yy_tr, zz_tr = np.mgrid[<span class="number">1</span>:<span class="number">10</span>:<span class="number">200j</span>, <span class="number">1</span>:<span class="number">9</span>:<span class="number">199j</span>, <span class="number">1</span>:<span class="number">14</span>:<span class="number">201j</span>]</span><br></pre></td></tr></table></figure><p>Then we can plot the 3d data.  The static plot could be plotted first</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fig_extent = [<span class="number">1</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">14</span>]</span><br><span class="line">fig1 = mlab.figure(size=(<span class="number">800</span>, <span class="number">800</span>), bgcolor=(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), fgcolor=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">mlab.contour3d(xx, yy, zz, sym_mat, color=(<span class="number">0</span>, <span class="number">0.3</span>, <span class="number">0.3</span>), contours=[</span><br><span class="line">    <span class="number">0.8</span>], transparent=<span class="literal">True</span>, opacity=<span class="number">0.15</span>)  <span class="comment"># ,extent=fig_extent)</span></span><br><span class="line">mlab.contour3d(xx, yy, zz, sym_mat, color=(<span class="number">0</span>, <span class="number">0.7</span>, <span class="number">0.7</span>), contours=[</span><br><span class="line">               <span class="number">0.9</span>], transparent=<span class="literal">True</span>, opacity=<span class="number">0.3</span>)  <span class="comment"># ,extent=fig_extent)</span></span><br><span class="line">mlab.contour3d(xx, yy, zz, sym_mat, color=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.8</span>), contours=[</span><br><span class="line">               <span class="number">0.97</span>], transparent=<span class="literal">True</span>, opacity=<span class="number">0.4</span>)  <span class="comment"># ,extent=fig_extent)</span></span><br><span class="line">mlab.outline(extent=fig_extent)</span><br><span class="line">mlab.axes(color=(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), nb_labels=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>then we should define a animated function. Since in this case we only need update the view rather than the data. So the code is a little bit  diffeent</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">make_frame</span>(<span class="params">t</span>):</span><br><span class="line">    <span class="comment"># camera angle</span></span><br><span class="line">    mlab.view(azimuth=<span class="number">360</span> * t / duration, elevation=-<span class="number">70</span>, distance=<span class="number">42</span>, focalpoint=[<span class="number">5.5</span>, <span class="number">5</span>, <span class="number">7.5</span>])</span><br><span class="line">    <span class="keyword">return</span> mlab.screenshot(antialiased=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">duration = <span class="number">5</span></span><br><span class="line">animation = mpy.VideoClip(make_frame, duration=duration).resize(<span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># # Video generation takes 10 seconds, GIF generation takes 25s</span></span><br><span class="line"><span class="comment"># #animation.write_videofile("Rotated_sym_distri_static_Python.mp4", fps=20)</span></span><br><span class="line">animation.write_gif(<span class="string">"Rotated_sym_distri_static_Python.gif"</span>, fps=<span class="number">20</span>)</span><br><span class="line">mlab.close(fig1)</span><br></pre></td></tr></table></figure><p>The view’s  azimuth angle will update each frame. If we want to handle the data, we should use the “mlab.source”  to update the arguement as is shown in the <a href="http://docs.enthought.com/mayavi/mayavi/mlab_animating.html?highlight=animation">offical example</a></p><p> We finally export the gif file and I learned this from this <a href="http://zulko.github.io/blog/archives/">Blog</a></p><p>The figure is a little big and we can compress this gif file in the <a href="https://docsmall.com/gif-compress">online web</a></p><p>The following is the figure we obtain</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Rotated_sym_distri_static_Python.gif" alt="The rotated 3d contour plots"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime的安装及使用究极总结</title>
      <link href="/2019/12/28/C_%E6%95%99%E7%A8%8B_Sublime_%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E7%A9%B6%E6%9E%81%E6%80%BB%E7%BB%93/"/>
      <url>/2019/12/28/C_%E6%95%99%E7%A8%8B_Sublime_%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E7%A9%B6%E6%9E%81%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Sublime"><a href="#Sublime" class="headerlink" title="Sublime"></a>Sublime</h1><h1 id="Sublime-Text-3-的安装及使用"><a href="#Sublime-Text-3-的安装及使用" class="headerlink" title="Sublime Text 3 的安装及使用"></a>Sublime Text 3 的安装及使用</h1><p>目前的编辑器非常多，比如Sublime，Atom, Vs Code等，都各有优劣。目前来看VS Code应该是份额最高、功能最全的。即使这样，也还有其不如人意的地方，比如一般开启比较慢。Sublime Text 3 是我大三时候经朋友推荐开始使用的，一直用到了现在博三（2019 12 28），用这款编辑器写过MATLAB, Python, Bash脚本, Markdown, Latex等，对其特性还是比较了解的，本片笔记将会从安装开始，详细写下Sublime Text 3 的安装及配置以及一些插件的使用。</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h3><p>直接去Sublime Text 3 <a href="https://www.sublimetext.com/3">官网</a>下载对应的版本，最好选<a href="https://download.sublimetext.com/Sublime Text Build 3211 Setup.exe">Windows</a>的exe版本而不是<a href="https://download.sublimetext.com/Sublime Text Build 3211.zip">portable version</a>。下载好后一路点击安装确定就好了。</p><h3 id="Linux-平台"><a href="#Linux-平台" class="headerlink" title="Linux 平台"></a>Linux 平台</h3><p><a href="http://www.sublimetext.com/docs/3/linux_repositories.html">官网</a>也有安装教程，以Ubuntu为例</p><p>Install the GPG key:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>Ensure apt is set up to work with https sources:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https</span><br></pre></td></tr></table></figure><p>Select the channel to use:</p><ul><li>Stable</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://download.sublimetext.com/ apt/stable/"</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/sublime-text.list </span><br></pre></td></tr></table></figure><ul><li>Dev</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://download.sublimetext.com/ apt/dev/"</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/sublime-text.list </span><br></pre></td></tr></table></figure><p>Update apt sources and install Sublime Text</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sublime-text</span><br></pre></td></tr></table></figure><h2 id="Package-Control-安装及使用"><a href="#Package-Control-安装及使用" class="headerlink" title="Package Control 安装及使用"></a>Package Control 安装及使用</h2><p>后续使用就会知道，这个Sublime的功能的丰富都依赖于各种插件，而安装插件都是通过<a href="https://packagecontrol.io/installation">Package Control</a></p><p>来控制的。安装Package Control的方法在其原网站<a href="https://packagecontrol.io/installation">Package Control</a>, 其实就是</p><p>按快捷键”ctrl+`”调出命令窗口,或者打开Sublime的“View”栏然后点击“Show Console”，将下面这一段复制到窗口里面运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(by).hexdigest(); <span class="built_in">print</span>(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure><p>运行完之后，按快捷键“ctrl+shift+P”，在弹出来的框里面输入“package”就可以看到对应的package control的相关操作了。或者点View&gt;Package Control，在弹出来的列表里面有各种操作，要安装插件点“install package”即可</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/PackageControlUsage.gif" alt="PackageControl使用"></p><h2 id="相关插件推荐"><a href="#相关插件推荐" class="headerlink" title="相关插件推荐"></a>相关插件推荐</h2><p>Sublime的插件有很多，可以在该<a href="https://packagecontrol.io/browse">网页</a>查询，</p><h3 id="功能的增强与完善"><a href="#功能的增强与完善" class="headerlink" title="功能的增强与完善"></a>功能的增强与完善</h3><ul><li><strong>SFTP</strong> 连接远程服务器并且浏览、新建、下载或者上传文件</li><li><p><strong>SideBarEnhancements</strong> 增强侧边栏的功能</p></li><li><p><strong>Terminal</strong> 在当前位置打开终端 </p></li><li><p><strong>ConvertToUTF8</strong> 解决Sublime不支持GBK、GB2312编码的问题，支持打开GBK编码的文件 在Sublime中安装 ConvertToUTF8 插件</p></li><li><strong>BracketHighlighter</strong> 括号匹配高亮显示</li></ul><h3 id="Markdown-语法支持"><a href="#Markdown-语法支持" class="headerlink" title="Markdown 语法支持"></a>Markdown 语法支持</h3><ul><li><p><strong>MarkdownEditing</strong> 编辑markdown时高亮显示</p></li><li><p><strong>Markdown Preview</strong> 在浏览器中预览生成的HTML文件 </p></li></ul><h3 id="Python环境配置"><a href="#Python环境配置" class="headerlink" title="Python环境配置"></a>Python环境配置</h3><ul><li><strong>Anaconda</strong>  Python语法的补全、高亮、提示等</li><li><strong>AutopPep8</strong> 自动格式化Python代码</li><li><strong>Hermes</strong> 支持向Jupyter notebook一样运行程序</li><li><strong>SublimeREPL</strong> 支持交互式编程</li></ul><h3 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h3><ul><li><strong>A File Icon</strong></li><li><strong>Boxy Theme</strong></li></ul><h3 id="Latex相关"><a href="#Latex相关" class="headerlink" title="Latex相关"></a>Latex相关</h3><ul><li><strong>LatexTools</strong> 写Latex就靠它了</li></ul><h2 id="Latex环境配置"><a href="#Latex环境配置" class="headerlink" title="Latex环境配置"></a>Latex环境配置</h2><p>Sublime是可以用来写Latex的，我们要实现的是基本的书写时的命令补全、纠错，编译，预览，正、反向搜索。下面是具体过程。</p><h3 id="安装Latex编译器"><a href="#安装Latex编译器" class="headerlink" title="安装Latex编译器"></a>安装Latex编译器</h3><p>安装Latex编译器有两种方式，</p><h4 id="Miktex安装"><a href="#Miktex安装" class="headerlink" title="Miktex安装"></a>Miktex安装</h4><p>一种是<a href="https://miktex.org/download">Miktex</a>, 其优点是体积小，不会占用太大内存。缺点是包不是很全，当使用了没有安装的包时可以自动下载。个人不是很推荐这种方式，断网的时候就没有办法下载所需要的包，有时候下载安装包会出错。</p><p>将下载好的文件双击安装一路确认即可。</p><h4 id="Texlive安装"><a href="#Texlive安装" class="headerlink" title="Texlive安装"></a>Texlive安装</h4><p>另外一种是<a href="https://www.tug.org/texlive/">Texlive</a>, 该包体积大，相关包齐全，推荐这种方式安装。由于体积较大，直接从官网下载比较慢，可以通过<a href="https://link.zhihu.com/?target=http%3A//ftp.yzu.edu.tw/CTAN/systems/texlive/Images/">清华镜像</a>或者<a href="https://link.zhihu.com/?target=https%3A//mirrors.ustc.edu.cn/CTAN/systems/texlive/Images/">中科大镜像</a>.下载好iso文件后，以管理员权限运行”install-tl-advance.bat”文件，然后一路默认设置就好了。</p><h3 id="安装Sumatra-PDF"><a href="#安装Sumatra-PDF" class="headerlink" title="安装Sumatra PDF"></a>安装Sumatra PDF</h3><p>为了可以快速预览PDF文件，需要一个PDF阅读器，推荐使用<a href="https://www.sumatrapdfreader.org/free-pdf-reader.html">Sumatra PDF</a>，其体积小，打开、关闭迅速，没有各种收费服务、广告等，最重要的是还能设置Latex反向搜索。</p><h3 id="Latex-Tools安装及配置"><a href="#Latex-Tools安装及配置" class="headerlink" title="Latex Tools安装及配置"></a>Latex Tools安装及配置</h3><p>第一步是安装插件，Latex Tools，通过前面介绍的Package Control方法安装即可。配置时可参考<a href="https://latextools.readthedocs.io/en/latest/settings/">官方文件</a>,里面有详细的说明。</p><p>将 LaTeXTools 的默认配置全部复制到 User 中，再修改路径设置部分，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// ------------------------------------------------------------------</span><br><span class="line">// Platform settings: adapt as needed <span class="keyword">for</span> your machine</span><br><span class="line">// ------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="string">"osx"</span>: {</span><br><span class="line">// Path used when invoking tex &amp; friends; MUST include <span class="variable">$PATH</span></span><br><span class="line"><span class="string">"texpath"</span> : <span class="string">"<span class="variable">$PATH</span>:/Library/TeX/texbin:/usr/texbin:/usr/local/bin:/opt/local/bin"</span></span><br><span class="line">// Path to PDF viewer, <span class="keyword">if</span> needed</span><br><span class="line">// TODO think about it. Also, maybe configure it here!</span><br><span class="line">},</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"windows"</span>: {</span><br><span class="line">// Path used when invoking tex &amp; friends; <span class="string">""</span> is fine <span class="keyword">for</span> MiKTeX</span><br><span class="line">// For TeXlive 2011 (or other years) use</span><br><span class="line">// <span class="string">"texpath"</span> : <span class="string">"C:\\texlive\\2011\\bin\\win32;<span class="variable">$PATH</span>"</span>,</span><br><span class="line"><span class="string">"texpath"</span> : <span class="string">""</span>,</span><br><span class="line">// TeX distro: <span class="string">"miktex"</span> or <span class="string">"texlive"</span></span><br><span class="line"><span class="string">"distro"</span> : <span class="string">"TeXlive"</span>,</span><br><span class="line">// Command to invoke Sumatra. If blank, <span class="string">"SumatraPDF.exe"</span> is used (it has to be on your PATH)</span><br><span class="line"><span class="string">"sumatra"</span>: <span class="string">""</span>,</span><br><span class="line">// Command to invoke Sublime Text. Used <span class="keyword">if</span> the keep_focus toggle is <span class="literal">true</span>.</span><br><span class="line">// If blank, <span class="string">"subl.exe"</span> or <span class="string">"sublime_text.exe"</span> will be used.</span><br><span class="line"><span class="string">"sublime_executable"</span>: <span class="string">""</span>,</span><br><span class="line">// how long (<span class="keyword">in</span> seconds) to <span class="built_in">wait</span> after the jump_to_pdf <span class="built_in">command</span> completes</span><br><span class="line">// before switching focus back to Sublime Text. This may need to be</span><br><span class="line">// adjusted depending on your machine and configuration.</span><br><span class="line"><span class="string">"keep_focus_delay"</span>: 0.5</span><br><span class="line">},</span><br></pre></td></tr></table></figure><p>根据安装的时Texlive还是Miktex的不同，选择不同的设置，记住选择好<code>"distro" : "TeXlive",</code>或者”distro” : “Miktex”,Sumatra PDF的路径也需要填，没有的话就需要将Sumatra PDF添加到环境变量。</p><h3 id="SumatraPDF反向搜索"><a href="#SumatraPDF反向搜索" class="headerlink" title="SumatraPDF反向搜索"></a>SumatraPDF反向搜索</h3><p>打开命令提示符（win+R），执行以下命令：（将其中的安装路径替换成你实际的安装路径）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sumatrapdf.exe -inverse-search “\”C:\Program Files\Sublime Text 3\sublime_text.exe\” \”%f:%l\”“</span><br></pre></td></tr></table></figure><p>或者打开Sumatra PDF&gt;设置选项，在最下面的“请键入双击Sumatra PDF时，应运行的命令“，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">”C:\Program Files\Sublime Text 3\sublime_text.exe\” \”%f:%l\”</span><br></pre></td></tr></table></figure><p><strong>20220514更新</strong></p><p>现在貌似得输入<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"C:\Program Files\Sublime Text\sublime_text.exe"  "%f:%l"</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-29_14-35-45.png" alt="反向搜索设置"></p><p>我的Sumatra PDF设置的是VScode反向搜索。所以设置的时VS Code路径。</p><h3 id="简单测试"><a href="#简单测试" class="headerlink" title="简单测试"></a>简单测试</h3><p>此时打开一个简单的tex文件，没有的话创建一个，如下：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[UTF8]{article}</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>{document}</span><br><span class="line">This is the context of the article.</span><br><span class="line">  </span><br><span class="line"><span class="keyword">\title</span>{Title}</span><br><span class="line"><span class="keyword">\author</span>{Your Name}</span><br><span class="line"><span class="keyword">\maketitle</span>{}</span><br><span class="line"><span class="keyword">\section</span>{Introduction}</span><br><span class="line"></span><br><span class="line">This is where you will write your content.</span><br><span class="line">  </span><br><span class="line"><span class="built_in">$</span><span class="keyword">\sum</span><span class="keyword">\limits</span><span class="built_in">_</span>{i=1}<span class="built_in">^</span>{n}{X<span class="built_in">_</span>i}<span class="built_in">$</span></span><br><span class="line"><span class="keyword">\end</span>{document}</span><br></pre></td></tr></table></figure><p>之后在 Sublime Text3 中新建文件，保存为.tex格式，写完之后保存，然后按下快捷键”Ctrl+B“，Sublime Text3 就会自动调用 LaTeXTools 的 build 系统来进行编译，然后自动打开 SumatraPDF 进行预览。之后每次修改后只要Ctrl+B 一下，SumatraPDF 里的内容就会自动更新。</p><h3 id="公式预览"><a href="#公式预览" class="headerlink" title="公式预览"></a>公式预览</h3><p>当将鼠标悬停在对应的公式区域，会有公式的预览生成，如果不能生成，可以点击<strong>(check system)</strong>, 查看系统缺少哪些项，安装即可，比如需要<a href="https://www.baidu.com/link?url=oVIIuvoIQOeK72q6cjBqOhCQ0tcVN9Bxe4OA-S2HwlTeb3KgS0wWz7T0pm9voMOT&amp;wd=&amp;eqid=f4c80b72002c55e3000000065e084f28">Ghost Script</a>,下载安装即可，注意需要添加到环境变量。</p><h2 id="Python-环境配置"><a href="#Python-环境配置" class="headerlink" title="Python 环境配置"></a>Python 环境配置</h2><p>假设你电脑已经装好了Python，Python在windows的安装及配置可以参见另外一篇博客<a href="https://knifelees3.github.io/2020/01/01/C_%E6%95%99%E7%A8%8B_Python_Windowns%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">windows下python环境配置</a></p><p>首先安装一些必要的插件</p><ul><li><strong>Anaconda</strong>  Python语法的补全、高亮、提示等</li><li><strong>AutopPep8</strong> 自动格式化Python代码</li><li><strong>Hermes</strong> 支持向Jupyter notebook一样运行程序</li><li><strong>SublimeREPL</strong> 支持交互式编程</li></ul><p>具体使用自己可以去<a href="https://packagecontrol.io/">插件网页</a>搜索其用法。这里不再赘述了。</p><p>另外诸如Markdwon,MATLAB,Fortan的环境配置，也需要下载对应的插件，进行简单的配置，后续有需要再更新。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Latex </tag>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A rotated flower plotted via python (animated)</title>
      <link href="/2019/12/25/A_En_Python_PlotStudy3_RotatedFlower/"/>
      <url>/2019/12/25/A_En_Python_PlotStudy3_RotatedFlower/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Plot"><a href="#Python-Plot" class="headerlink" title="Python #Plot"></a>Python #Plot</h1><p><strong>All the python study code can be found in my <a href="https://github.com/knifelees3/Study_Python">own repository</a>.</strong></p><p>As a study of Python data visualization, I plot a 3D follower and let it rotated horizontally. The packages I used are</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> animation</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">from</span> matplotlib.ticker <span class="keyword">import</span> LinearLocator</span><br></pre></td></tr></table></figure><p>The follower is defined via the following data</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[x, t] = np.meshgrid(np.array(<span class="built_in">range</span>(<span class="number">25</span>))/<span class="number">24.0</span>,</span><br><span class="line">                     np.arange(<span class="number">0</span>, <span class="number">575.5</span>, <span class="number">0.5</span>)/<span class="number">575</span>*<span class="number">17</span>*np.pi-<span class="number">2</span>*np.pi)</span><br><span class="line"></span><br><span class="line">p = (np.pi/<span class="number">2</span>)*np.exp(-t/(<span class="number">8</span>*np.pi))</span><br><span class="line"></span><br><span class="line">u = <span class="number">1</span>-(<span class="number">1</span>-np.mod(<span class="number">3.6</span>*t, <span class="number">2</span>*np.pi)/np.pi)**<span class="number">4</span>/<span class="number">2</span></span><br><span class="line"></span><br><span class="line">y = <span class="number">2</span>*(x**<span class="number">2</span>-x)**<span class="number">2</span>*np.sin(p)</span><br><span class="line"></span><br><span class="line">r = u*(x*np.sin(p)+y*np.cos(p))</span><br></pre></td></tr></table></figure><p>and the init function is as follows</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line"></span><br><span class="line">    surf = ax.plot_surface(r*np.cos(t), r*np.sin(t), u*(x*np.cos(p)-y*np.sin(p)),</span><br><span class="line">                           rstride=<span class="number">1</span>, cstride=<span class="number">1</span>, cmap=cm.gist_rainbow_r, linewidth=<span class="number">0</span>, antialiased=<span class="literal">True</span>)</span><br><span class="line">    plt.axis(<span class="string">'off'</span>)</span><br><span class="line">    <span class="keyword">return</span> fig,</span><br></pre></td></tr></table></figure><p>An animate function</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">animate</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="comment"># azimuth angle : 0 deg to 360 deg</span></span><br><span class="line">    ax.view_init(elev=<span class="number">10</span>, azim=i*<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">return</span> fig,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>plot and save<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="string">'rotate_azimuth_angle_3d_flower'</span></span><br><span class="line"><span class="comment"># ani.save(fn+'.mp4',writer='ffmpeg',fps=1000/50)</span></span><br><span class="line">ani.save(fn+<span class="string">'.gif'</span>, writer=<span class="string">'imagemagick'</span>, fps=<span class="number">1000</span>/<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">cmd = <span class="string">'magick convert %s.gif -fuzz 5%% -layers Optimize %s_r.gif'</span> % (fn, fn)</span><br><span class="line">subprocess.check_output(cmd)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">'animation.html'</span>] = <span class="string">'html5'</span></span><br><span class="line">ani</span><br></pre></td></tr></table></figure></p><p>The generated flowers are as follows<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/rotate_azimuth_angle_3d_flower_r.gif" alt="Flowers"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Useful Git Command</title>
      <link href="/2019/12/25/A_En_Git_CommandSummary/"/>
      <url>/2019/12/25/A_En_Git_CommandSummary/</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="Simple-use"><a href="#Simple-use" class="headerlink" title="Simple use"></a>Simple use</h2><p>In this note I will summarize the simple use of Git. How can we create new repository and upload the local folders to remote？ Or after we changes or add new files, how can we update the changes？</p><h3 id="1-Create-new-repository"><a href="#1-Create-new-repository" class="headerlink" title="1. Create new repository"></a>1. Create new repository</h3><p>We should create new repository in the remote.  Then we clone the remote repository into local folder. We can make changes on the folder and update the changes via</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commmit -m <span class="string">"changes"</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>”-u“ is for the first update.</p><h3 id="2-Update-changes-each-time"><a href="#2-Update-changes-each-time" class="headerlink" title="2. Update changes each time"></a>2. Update changes each time</h3><p>If the repository has been create in the remote and the local folder has push history. You can fetch changes from remote repository.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p>add new files to remote repository</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commmit -m <span class="string">"changes"</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>More details will be added if needed.</p><h3 id="3-how-do-I-fork-an-older-version-of-a-github-project"><a href="#3-how-do-I-fork-an-older-version-of-a-github-project" class="headerlink" title="3. how do I fork an older version of a github project?"></a>3. how do I fork an older version of a github project?</h3><p>from<br><a href="https://stackoverflow.com/questions/39542634/how-do-i-fork-an-older-version-of-a-github-project">how do I fork an older version of a github project?</a></p><ol><li>Fork the repo.</li><li>Clone it locally: <code>git clone &lt;github name&gt;</code></li><li>Find the commit you want to go back to.</li><li>Reset to that commit’s SHA: <code>git reset &lt;SHA&gt;</code></li><li>Get rid of changes: <code>git add . &amp;&amp; git stash</code></li><li>Push removal of changes to repo: <code>git push --force</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inkscape安装插件textext出错的解决办法</title>
      <link href="/2019/12/21/C_%E6%95%99%E7%A8%8B_inkscape%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6textext%E5%87%BA%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2019/12/21/C_%E6%95%99%E7%A8%8B_inkscape%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6textext%E5%87%BA%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Inkscape-Darw"><a href="#Inkscape-Darw" class="headerlink" title="Inkscape #Darw"></a>Inkscape #Darw</h1><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决:"></a>问题解决:</h2><p>是因为自己的插件版本于inkscape版本不一致造成的。</p><h2 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h2><p>近几日要画一些带公式的矢量图，发现inkscape非常好用，尝试安装插件<a href="https://github.com/textext/textext">textext</a>时，却出了问题，我直接在该网站下载了最新版，根据<a href="https://textext.github.io/textext/#installation-toc">官方教程</a>安装了<a href="https://inkscape.org/release/">inkscape0.92.4</a>以及推荐的<a href="https://github.com/textext/pdf2svg/releases (32-bit, 64-bit">pdf2svg</a>)</p><p>安装好后，开始运行该软件的依赖测试文件 ，接下来就是一连串错误。</p><p><strong>No module named elements or inkex.elements</strong></p><p>当我运行 “setup_win.bat”时，出现以下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Trying to find Inkscape...</span><br><span class="line">Trying registry root HKLM...</span><br><span class="line">Trying registry root HKCU...</span><br><span class="line">Inkscape found as C:\Program Files\Inkscape\inkscape.exe</span><br><span class="line"></span><br><span class="line">Trying to detect Python interpreter <span class="keyword">in</span> Inkscape installation directory...</span><br><span class="line">Success</span><br><span class="line"></span><br><span class="line">Trying to run <span class="string">"C:\Program Files\Inkscape\\python.exe"</span> setup.py --inkscape-executable=<span class="string">"C:\Program Files\Inkscape\\inkscape.exe"</span> ...</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"setup.py"</span>, line 19, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from requirements_check import \</span><br><span class="line">  File <span class="string">"extension\textext/requirements_check.py"</span>, line 689, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    defaults = WindowsDefaults()</span><br><span class="line">  File <span class="string">"extension\textext/requirements_check.py"</span>, line 83, <span class="keyword">in</span> __init__</span><br><span class="line">    import win_app_paths as wap</span><br><span class="line">  File <span class="string">"extension\textext/win_app_paths.py"</span>, line 10, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import winreg as _wr</span><br><span class="line">ImportError: No module named winreg</span><br></pre></td></tr></table></figure><p>在网络上找了一遍解决办法之后，我把”win_app_paths.py”文件里面的语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import winreg</span><br></pre></td></tr></table></figure><p>改为了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import _winreg</span><br></pre></td></tr></table></figure><p>然后重新开始运行”setup_win.bat”文件，得到如下错误</p><p><strong>[Fail] GTK3 is not found</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Trying to find Inkscape...</span><br><span class="line">Trying registry root HKLM...</span><br><span class="line">Trying registry root HKCU...</span><br><span class="line">Inkscape found as C:\Program Files\Inkscape\inkscape.exe</span><br><span class="line"></span><br><span class="line">Trying to detect Python interpreter <span class="keyword">in</span> Inkscape installation directory...</span><br><span class="line">Success</span><br><span class="line"></span><br><span class="line">Trying to run <span class="string">"C:\Program Files\Inkscape\\python.exe"</span> setup.py --inkscape-executable=<span class="string">"C:\Program Files\Inkscape\\inkscape.exe"</span> ...</span><br><span class="line"></span><br><span class="line">[TexText][INFO    ]: Using `inkscape-executable` = `C:\Program Files\Inkscape\\inkscape.exe`</span><br><span class="line">[TexText][CRITICAL]: + [Fail] TexText requirements</span><br><span class="line">[TexText][CRITICAL]: /-and-* [Fail] Detect inkscape&gt;=1.0</span><br><span class="line">[TexText][CRITICAL]: |      inkscape&gt;=1.0 is not found (but inkscape=0.92 is found)</span><br><span class="line">[TexText][CRITICAL]: |      Please follow installation instructions at</span><br><span class="line">[TexText][CRITICAL]: |             https://textext.github.io/textext/install/windows.html<span class="comment">#windows-install-inkscape</span></span><br><span class="line">[TexText][CRITICAL]: |      If inkscape is installed <span class="keyword">in</span> custom location, specify it via</span><br><span class="line">[TexText][CRITICAL]: |             --inkscape-executable=&lt;path-to-inkscape&gt;</span><br><span class="line">[TexText][CRITICAL]: |      and run setup.py again</span><br><span class="line">[TexText][SUCCESS ]: /-and-+ [Succ] Detect *latex</span><br><span class="line">[TexText][SUCCESS ]: |     /--or-* [Succ] `pdflatex.exe` is found at `C:\texlive\2019\bin\win32`</span><br><span class="line">[TexText][SUCCESS ]: |     |      `pdflatex.exe` is found at `C:\texlive\2019\bin\win32`</span><br><span class="line">[TexText][SUCCESS ]: |     /--or-* [Succ] `lualatex.exe` is found at `C:\texlive\2019\bin\win32`</span><br><span class="line">[TexText][SUCCESS ]: |     |      `lualatex.exe` is found at `C:\texlive\2019\bin\win32`</span><br><span class="line">[TexText][SUCCESS ]: |     /--or-* [Succ] `xelatex.exe` is found at `C:\texlive\2019\bin\win32`</span><br><span class="line">[TexText][SUCCESS ]: |            `xelatex.exe` is found at `C:\texlive\2019\bin\win32`</span><br><span class="line">[TexText][SUCCESS ]: /-and-+ [Succ] Detect GUI library</span><br><span class="line">[TexText][INFO    ]:       /--or-* [Fail] GTK3 is not found</span><br><span class="line">[TexText][INFO    ]:       |      Please follow installation instructions at</span><br><span class="line">[TexText][INFO    ]:       |             https://textext.github.io/textext/install/windows.html<span class="comment">#windows-install-pygtk2</span></span><br><span class="line">[TexText][SUCCESS ]:       /--or-* [Succ] TkInter is found</span><br><span class="line">[TexText][ERROR   ]: Automatic requirements check found issue</span><br><span class="line">[TexText][ERROR   ]: Follow instruction above and run install script again</span><br><span class="line">[TexText][ERROR   ]: To bypass requirement check pass `--skip-requirements-check` to setup.py</span><br></pre></td></tr></table></figure><p>也不清楚问题是否解决，我直接将插件的文件夹“extension”手动复制安装到对应目录”C:\Program Files\Inkscape\share\extensions”，尝试在inkscape运行textext,发现如下错误</p><p><strong>No module named elements </strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[TexText][ERROR   ]: No module named elements</span><br><span class="line">[TexText][ERROR   ]: Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"__init__.py"</span>, line 110, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import inkex.elements</span><br><span class="line">ImportError: No module named elements</span><br><span class="line"></span><br><span class="line">[TexText][INFO    ]: TexText finished with error, please run extension again</span><br><span class="line">[TexText][INFO    ]: If problem persists, please file a bug https://github.com/textext/textext/issues/new</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我打算向github的作者求助了就在我码完上面的问题描述之后，还有一个选项时要确定各种版本，如下</p><p><strong>System information</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- TexText version: </span><br><span class="line">- Inkscape version:</span><br><span class="line">- Operating system: [e.g. Windows 10, 1803, 32-bit]</span><br><span class="line">- SVG-converter installed (pstoedit+ghostscript or pdf2svg):</span><br><span class="line">- GUI framework installed (PyGTK, PyGTK+PyGTK-Sourceview, TkInter):</span><br><span class="line">- Windows only: LaTeX-distribution (MiKTeX, TeX-Live):</span><br><span class="line">- Windows only: TexText installed via batch script or installer file:</span><br></pre></td></tr></table></figure><p>我才发现我安装的版本时最新的inkscape&gt;1的，我需要安装的textext版本为<a href="https://github.com/textext/textext/releases/tag/0.11.0">0.11.0</a>.</p><p>问题终于解决了，希望以后仔细阅读说明。。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Inkscape </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务器常见命令</title>
      <link href="/2019/12/16/C_%E6%95%99%E7%A8%8B_Ubuntu_%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/12/16/C_%E6%95%99%E7%A8%8B_Ubuntu_%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>首先是一些基本的命令，这些命令是最常用到的。</p><h3 id="切换文件夹"><a href="#切换文件夹" class="headerlink" title="切换文件夹"></a>切换文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;folder name&gt; <span class="comment"># 移动到某一文件夹</span></span><br><span class="line"><span class="built_in">cd</span> &lt;./folder name&gt; <span class="comment"># 移动到当前某一文件夹</span></span><br><span class="line"><span class="built_in">cd</span> &lt;../folder name&gt; <span class="comment"># 移动到上一层目录的某一文件夹</span></span><br></pre></td></tr></table></figure><h3 id="显示文件夹信息"><a href="#显示文件夹信息" class="headerlink" title="显示文件夹信息"></a>显示文件夹信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> <span class="comment"># 列出当前文件夹下所有文件、文件夹</span></span><br><span class="line">ll <span class="comment"># 列出当前文件夹下的文件、文件夹以及权限信息</span></span><br><span class="line"><span class="built_in">ls</span> -lrth <span class="comment"># 按时间顺序列出当前文件夹下的所有文件、文件夹的大小、可执行权限</span></span><br><span class="line"><span class="built_in">ls</span> &lt;folder name&gt; <span class="comment">#列出某一文件夹下的文件信息</span></span><br><span class="line"><span class="built_in">pwd</span> <span class="comment">#显示当前文件夹</span></span><br></pre></td></tr></table></figure><h3 id="复制、删除、重命名文件"><a href="#复制、删除、重命名文件" class="headerlink" title="复制、删除、重命名文件"></a>复制、删除、重命名文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> &lt;file name&gt; <span class="comment">#删除某一文件</span></span><br><span class="line"><span class="built_in">rm</span> -r &lt;foler name&gt; <span class="comment"># 删除某一文件夹</span></span><br><span class="line"><span class="built_in">rm</span> ./* <span class="comment">#删除当前文件夹下所有文件</span></span><br><span class="line"><span class="built_in">rm</span> ./*.sh <span class="comment">#删除当前文件夹下以 .sh结尾的所有文件,这是一种模糊匹配的方式，非常高效</span></span><br><span class="line"><span class="built_in">cp</span> &lt;current file&gt; &lt;destination folder&gt; <span class="comment"># 复制文件到目标文件夹,</span></span><br><span class="line"><span class="built_in">cp</span> -r &lt;current folder&gt; &lt;destination folder&gt; <span class="comment"># 同样的，加上-r表示对文件夹的操作</span></span><br><span class="line"><span class="built_in">mv</span> &lt;file name&gt; &lt;new file name&gt; <span class="comment"># 重命名文件</span></span><br></pre></td></tr></table></figure><h3 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi &lt;file name&gt; <span class="comment"># 用来查看、修改文件内容，当然该命令不是那么容易用，需要了解vi命令</span></span><br><span class="line">nano &lt;file name&gt; <span class="comment">#用来查看、修改文件内容，比vi简单</span></span><br><span class="line">gedit &lt;file name&gt;  <span class="comment">#用来查看、修改文件内容，需要图形界面</span></span><br></pre></td></tr></table></figure><h3 id="脚本文件的书写、运行"><a href="#脚本文件的书写、运行" class="headerlink" title="脚本文件的书写、运行"></a>脚本文件的书写、运行</h3><p>脚本文件一般格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="built_in">command</span> 1&gt; &amp;&amp; <span class="comment"># 有两个&amp;代表运行完该命令之后再执行后面的命令</span></span><br><span class="line">&lt;<span class="built_in">command</span> 2&gt; &amp; <span class="comment"># 一个&amp;代表依次执行，不管命令是否允许完毕</span></span><br><span class="line">&lt;<span class="built_in">command</span> 2&gt; &amp;</span><br></pre></td></tr></table></figure><p>赋予文件可执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x &lt;file name&gt;</span><br></pre></td></tr></table></figure><p>运行脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;file name&gt;</span><br></pre></td></tr></table></figure><p>如果想后台运行，可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> &lt;file name&gt; &amp;</span><br></pre></td></tr></table></figure><h2 id="服务器管理员重要命令"><a href="#服务器管理员重要命令" class="headerlink" title="服务器管理员重要命令"></a>服务器管理员重要命令</h2><h3 id="远程重启或者关机"><a href="#远程重启或者关机" class="headerlink" title="远程重启或者关机"></a>远程重启或者关机</h3><p>立即远程重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo shutdown -r now</span><br></pre></td></tr></table></figure><p>立即远程关机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo shutdown -h now</span><br></pre></td></tr></table></figure><h3 id="添加或者删除用户"><a href="#添加或者删除用户" class="headerlink" title="添加或者删除用户"></a>添加或者删除用户</h3><p>添加用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser &lt;username&gt;</span><br></pre></td></tr></table></figure><p>然后按照提示输入密码等信息即可。此种方法创建用户之后，可以在home目录生成一个和用户名同名字的文件夹。</p><p>删除用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo userdel -r &lt;username&gt;</span><br></pre></td></tr></table></figure><p>此种方法删除用户之后，home目录和用户名同名字的文件夹也会删。</p><h3 id="查看服务器的硬盘大小"><a href="#查看服务器的硬盘大小" class="headerlink" title="查看服务器的硬盘大小"></a>查看服务器的硬盘大小</h3><p>查看运行内存大小, 以Gb为单位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -g </span><br></pre></td></tr></table></figure><p>或者是<code>free -m</code>（以m为单位），<code>cat /proc/meminfo</code>（详细信息）</p><p>查看磁盘占用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -hl </span><br></pre></td></tr></table></figure><p>查看当前文件夹的大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> --max-depth=1 -h</span><br></pre></td></tr></table></figure><p>查看单个文件夹或目录大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -sh &lt;folername&gt;</span><br></pre></td></tr></table></figure><p>以下是一些运行结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">root@hwsrv-645334:~<span class="comment"># free -g</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:              0           0           0           0           0           0</span><br><span class="line">Swap:             0           0           0</span><br><span class="line">root@hwsrv-645334:~<span class="comment"># free -m</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            992          46         178          10         767         733</span><br><span class="line">Swap:             0           0           0</span><br><span class="line">root@hwsrv-645334:~<span class="comment"># cat /proc/meminfo</span></span><br><span class="line">MemTotal:        1016012 kB</span><br><span class="line">MemFree:          182528 kB</span><br><span class="line">MemAvailable:     750804 kB</span><br><span class="line">Buffers:          145532 kB</span><br><span class="line">Cached:           471356 kB</span><br><span class="line">SwapCached:            0 kB</span><br><span class="line">Active:           427940 kB</span><br><span class="line">Inactive:         217128 kB</span><br><span class="line">Active(anon):      31112 kB</span><br><span class="line">Inactive(anon):    10340 kB</span><br><span class="line">Active(file):     396828 kB</span><br><span class="line">Inactive(file):   206788 kB</span><br><span class="line">Unevictable:        3660 kB</span><br><span class="line">Mlocked:            3660 kB</span><br><span class="line">SwapTotal:             0 kB</span><br><span class="line">SwapFree:              0 kB</span><br><span class="line">Dirty:                16 kB</span><br><span class="line">Writeback:             0 kB</span><br><span class="line">AnonPages:         31876 kB</span><br><span class="line">Mapped:            22608 kB</span><br><span class="line">Shmem:             10848 kB</span><br><span class="line">Slab:             169512 kB</span><br><span class="line">SReclaimable:     148692 kB</span><br><span class="line">SUnreclaim:        20820 kB</span><br><span class="line">KernelStack:        1920 kB</span><br><span class="line">PageTables:         2444 kB</span><br><span class="line">NFS_Unstable:          0 kB</span><br><span class="line">Bounce:                0 kB</span><br><span class="line">WritebackTmp:          0 kB</span><br><span class="line">CommitLimit:      508004 kB</span><br><span class="line">Committed_AS:     259952 kB</span><br><span class="line">VmallocTotal:   34359738367 kB</span><br><span class="line">VmallocUsed:           0 kB</span><br><span class="line">VmallocChunk:          0 kB</span><br><span class="line">HardwareCorrupted:     0 kB</span><br><span class="line">AnonHugePages:      4096 kB</span><br><span class="line">CmaTotal:              0 kB</span><br><span class="line">CmaFree:               0 kB</span><br><span class="line">HugePages_Total:       0</span><br><span class="line">HugePages_Free:        0</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:       2048 kB</span><br><span class="line">DirectMap4k:       46960 kB</span><br><span class="line">DirectMap2M:     1001472 kB</span><br><span class="line">DirectMap1G:           0 kB</span><br><span class="line">root@hwsrv-645334:~<span class="comment"># df -hl</span></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            487M     0  487M   0% /dev</span><br><span class="line">tmpfs           100M   11M   89M  11% /run</span><br><span class="line">/dev/sda1        30G  2.1G   27G   7% /</span><br><span class="line">tmpfs           497M     0  497M   0% /dev/shm</span><br><span class="line">tmpfs           5.0M     0  5.0M   0% /run/lock</span><br><span class="line">tmpfs           497M     0  497M   0% /sys/fs/cgroup</span><br><span class="line">tmpfs           100M     0  100M   0% /run/user/0</span><br></pre></td></tr></table></figure><h3 id="查看服务器的核心数等"><a href="#查看服务器的核心数等" class="headerlink" title="查看服务器的核心数等"></a>查看服务器的核心数等</h3><p>查看CPU个数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cpuinfo |grep <span class="string">"physical id"</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span>|<span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>查看每个物理CPU含有的核心个数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cpuinfo |grep <span class="string">"cpu cores"</span>|<span class="built_in">uniq</span>|<span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>查看每个CPU核心含有的线程数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cpuinfo |grep <span class="string">"processor"</span>|<span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>那么cpu支持的线程数为 cpu数目 <em> 每个cpu含有的核心数目</em> 每个核心含有的线程数</p><h3 id="重启服务器网络"><a href="#重启服务器网络" class="headerlink" title="重启服务器网络"></a>重启服务器网络</h3><p>可以输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/network restart</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/network restart</span><br></pre></td></tr></table></figure><h3 id="给某一用户管理员权限"><a href="#给某一用户管理员权限" class="headerlink" title="给某一用户管理员权限"></a>给某一用户管理员权限</h3><p>只需要修改<code>/etc/sudousers</code>文件即可，该文件默认是不可编辑的，首先得更改其权限为可写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +w /etc/sudoers</span><br></pre></td></tr></table></figure><p>读、写、执行权限可以通过<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 778 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="B1" d="M56 320T56 333T70 353H369V502Q369 651 371 655Q376 666 388 666Q402 666 405 654T409 596V500V353H707Q722 345 722 333Q722 320 707 313H409V40H707Q722 32 722 20T707 0H70Q56 7 56 20T70 40H369V313H70Q56 320 56 333Z"></path></g></g></g></svg></mjx-container><code>rwx</code>来控制，其文件内容大致如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">Defaults        env_reset</span><br><span class="line">Defaults        mail_badpass</span><br><span class="line">Defaults        secure_path=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Host alias specification</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User alias specification</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cmnd alias specification</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User privilege specification</span></span><br><span class="line"></span><br><span class="line">root    ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Members of the admin group may gain root privileges</span></span><br><span class="line"></span><br><span class="line">%admin ALL=(ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow members of group sudo to execute any command</span></span><br><span class="line"></span><br><span class="line">%sudo   ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># See sudoers(5) for more information on "#include" directives:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#includedir /etc/sudoers.d</span></span><br></pre></td></tr></table></figure><p>只需要在 <code>root    ALL=(ALL:ALL) ALL</code>一行下按照同样的方式输入对应的用户名即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;username&gt; ALL=(ALL:ALL) ALL </span><br></pre></td></tr></table></figure><p>保存退出以后，将文件更改问只读</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> -w /etc/sudoers</span><br></pre></td></tr></table></figure><h3 id="修改用户的密码"><a href="#修改用户的密码" class="headerlink" title="修改用户的密码"></a>修改用户的密码</h3><p>自己修改自己的，输入<code>passwd</code>之后，输入新密码即可。如果时要通过root用户该其他人的密码，则需要</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd &lt;username&gt;</span><br></pre></td></tr></table></figure><p>输入root密码之后，即可修改对应用户的密码了。</p><h3 id="添加到环境变量的方法"><a href="#添加到环境变量的方法" class="headerlink" title="添加到环境变量的方法"></a>添加到环境变量的方法</h3><p>为了可以在命令行使用，还需要将安装的软件执行文件添加到环境变量。给某个用户和给所有用户添加环境变量是不一样的。</p><h4 id="A-用于当前用户："><a href="#A-用于当前用户：" class="headerlink" title="A.用于当前用户："></a>A.用于当前用户：</h4><p>在对应用户主目录下有一个 .bashrc 隐藏文件，可以在此文件中加入 PATH 的设置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/local/MATLAB/R2018a/bin/:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>如果要加入多个路径，只要：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=&lt;你要加入的路径1&gt;:&lt;你要加入的路径2&gt;: ...... :<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>当中每个路径要以冒号分隔。这样每次登录都会生效，此时还需要注销再登录或者使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p> 使得更改生效</p><h4 id="B-用于所有用户："><a href="#B-用于所有用户：" class="headerlink" title="B.用于所有用户："></a>B.用于所有用户：</h4><p>如果需要环境变量更改对所有用户有效，那么需要更改“/etc/profile”文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/profile</span><br></pre></td></tr></table></figure><p>在其中加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=&lt;你要加入的路径&gt;:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>终端输入：echo $PATH 可以查看环境变量此时还需要注销再登录或者使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>使得更改生效。</p><h3 id="安装多个版本软件"><a href="#安装多个版本软件" class="headerlink" title="安装多个版本软件"></a>安装多个版本软件</h3><p> 有时候我们可能需要安装COMSOL或者MATLAB的多个版本，多个版本软件的安装目录默认是不冲突的，如MATLAB在“/usr/local/MATLAB”下会有“R2018a”或者“R2018b”来区分，COMSOL在“/usr/local/”下有“comsol51”和“comsol54”加以区分。当我们将安装路径加入环境变量之后，由于启动的文件名相同，比如都是“comsol”，为了区别出到底是想启动COMSOL的哪个版本。我们可以将文件名做更改，比如将comsol5.4版本的bin目录下的comsol文件改名为comsol54:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> /usr/local/comsol54/multiphysics/bin/comsol /usr/local/comsol54/multiphysics/bin/comsol54</span><br></pre></td></tr></table></figure><p>这样我们在命令行输入“comsol54”就可以指定启动COMSOL5.4版本了。其他软件的做法也类似。</p><h3 id="安装或者卸载软件-（ubuntu）"><a href="#安装或者卸载软件-（ubuntu）" class="headerlink" title="安装或者卸载软件 （ubuntu）"></a>安装或者卸载软件 （ubuntu）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install</span></span><br><span class="line">sudo dpkg -i &lt;package name&gt;</span><br><span class="line"><span class="comment"># uninstall</span></span><br><span class="line">sudo apt-get purge &lt;package name&gt;</span><br></pre></td></tr></table></figure><h3 id="挂载ISO文件到磁盘"><a href="#挂载ISO文件到磁盘" class="headerlink" title="挂载ISO文件到磁盘"></a>挂载ISO文件到磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount</span></span><br><span class="line">mount -o loop /filename.iso /mnt/tmp</span><br><span class="line"><span class="comment"># umount</span></span><br><span class="line">umount /mnt/tmp</span><br></pre></td></tr></table></figure><h3 id="查看不同用户执行脚本"><a href="#查看不同用户执行脚本" class="headerlink" title="查看不同用户执行脚本"></a>查看不同用户执行脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep bash</span><br></pre></td></tr></table></figure><h3 id="等待某一程序运行完毕之后接着运行"><a href="#等待某一程序运行完毕之后接着运行" class="headerlink" title="等待某一程序运行完毕之后接着运行"></a>等待某一程序运行完毕之后接着运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> ps -p 123455</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">sleep</span> 5m</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">bash comsolscript.sh</span><br></pre></td></tr></table></figure><h3 id="更改某文件夹的拥有者"><a href="#更改某文件夹的拥有者" class="headerlink" title="更改某文件夹的拥有者"></a>更改某文件夹的拥有者</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R &lt;username&gt; &lt;groupname&gt; &lt;folder name&gt;</span><br></pre></td></tr></table></figure><h3 id="让文件夹只允许自己访问"><a href="#让文件夹只允许自己访问" class="headerlink" title="让文件夹只允许自己访问"></a>让文件夹只允许自己访问</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 &lt;foldername&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统MATLAB远程桌面使用时报错的问题</title>
      <link href="/2019/12/01/C_%E6%95%99%E7%A8%8B_MATLAB_%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2019/12/01/C_%E6%95%99%E7%A8%8B_MATLAB_%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-RemoteDesktop"><a href="#MATLAB-RemoteDesktop" class="headerlink" title="MATLAB #RemoteDesktop"></a>MATLAB #RemoteDesktop</h1><p>windows自带的远程桌面系统非常好用，比一些第三方的软件比如team viewer 要好用一些，因为其实现方式不同，导致也会有一些新的问题。今天要解决的就是MATLAB远程桌面不能使用报错的问题，这是由于MATLAB激活时选择的license文件时stand alone版本，不是服务器版本。在网络上搜索之后，知道如下解决方案：</p><p><a href="https://blog.csdn.net/wcx1293296315/article/details/88738119">https://blog.csdn.net/wcx1293296315/article/details/88738119</a></p><p>需要手动修改“C:\Program Files\MATLAB\R2018b\licenses\license*.lic”文件的内容(实际位置和文件需要根据自己的MATLAB版本和位置修改)，在该文件的每一行最后都加上一个“TS_OK”, 前两行如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INCREMENT Aerospace_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=0D8A1582514C TS_OK</span><br><span class="line">INCREMENT Aerospace_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=13FDDFF8C36C TS_OK</span><br></pre></td></tr></table></figure><p>如果手动一行一行的加太麻烦了，可以选择用正则表达式的方法来查找替换，一般的编辑器都是支持的，我用的时sublime, 输入“ctrl+f+h”，查找<code>([^\\])($)</code>,替换为<code>\1 TS_OK</code>,即可.</p><p>另外需要注意的是，正确的操作方式是将这个lic文件复制出来修改好了再复制回去原来的文件夹替换掉原来的文件，此时需要我们的管理员权限，因直接修改这个文件是保存不成功的。</p><p><strong>也有遇到过情况，在“licenses”文件夹下没有“lic”文件，这时候就需要自己手动创建一个即可。</strong></p><p>我这里附上一些lic文件内容，自己创建一个“.lic”文件，复制粘贴内容，替换原文件即可</p><h2 id="MATLAB-R2018b"><a href="#MATLAB-R2018b" class="headerlink" title="MATLAB R2018b"></a>MATLAB R2018b</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line">INCREMENT Aerospace_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=0D8A1582514C TS_OK</span><br><span class="line">INCREMENT Aerospace_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=13FDDFF8C36C TS_OK</span><br><span class="line">INCREMENT Antenna_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=2A01DAAA9886 TS_OK</span><br><span class="line">INCREMENT Audio_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E025BF62EAD8 TS_OK</span><br><span class="line">INCREMENT Automated_Driving_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=C318246C14E2 TS_OK</span><br><span class="line">INCREMENT Bioinformatics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=358194AE1548 TS_OK</span><br><span class="line">INCREMENT Cert_Kit_IEC MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=60C2E6F826CE TS_OK</span><br><span class="line">INCREMENT Communication_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=CF5D32DAABBA TS_OK</span><br><span class="line">INCREMENT Communication_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=253B4EECBE48 TS_OK</span><br><span class="line">INCREMENT Compiler MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=2DD1C464FD06 TS_OK</span><br><span class="line">INCREMENT Control_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E0D5C4184FB6 TS_OK</span><br><span class="line">INCREMENT Curve_Fitting_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=583BAC2E0F7A TS_OK</span><br><span class="line">INCREMENT Data_Acq_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=48ECF5F6B11E TS_OK</span><br><span class="line">INCREMENT Database_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E9929C7A187A TS_OK</span><br><span class="line">INCREMENT DATAFEED_TOOLBOX MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=9876C540CA8E TS_OK</span><br><span class="line">INCREMENT Dial_and_Gauge_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=EFBA589A1810 TS_OK</span><br><span class="line">INCREMENT Distrib_Computing_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=D995C292E03A TS_OK</span><br><span class="line">INCREMENT Econometrics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=D1EC25D000D8 TS_OK</span><br><span class="line">INCREMENT eda_simulator_link MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=DE5E67B09746 TS_OK</span><br><span class="line">INCREMENT Embedded_IDE_Link MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=FB290E548926 TS_OK</span><br><span class="line">INCREMENT Excel_Link MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E6527A880B26 TS_OK</span><br><span class="line">INCREMENT Filter_Design_HDL_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=44F6103EBB0E TS_OK</span><br><span class="line">INCREMENT Filter_Design_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=58CB0596F32E TS_OK</span><br><span class="line">INCREMENT Fin_Derivatives_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=9E9A2B0020BA TS_OK</span><br><span class="line">INCREMENT Fin_Instruments_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=325A84A84E4A TS_OK</span><br><span class="line">INCREMENT Financial_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=698F9FC2DDDE TS_OK</span><br><span class="line">INCREMENT Fixed_Income_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=75BBDA60AC74 TS_OK</span><br><span class="line">INCREMENT Fixed_Point_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=BF695EBE4514 TS_OK</span><br><span class="line">INCREMENT Fixed-Point_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=22A5B32025E6 TS_OK</span><br><span class="line">INCREMENT Fuzzy_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=90FDC43A584E TS_OK</span><br><span class="line">INCREMENT GADS_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=38C864060ECE TS_OK</span><br><span class="line">INCREMENT GPU_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=D24A7C12C544 TS_OK</span><br><span class="line">INCREMENT Identification_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=2620D11C4600 TS_OK</span><br><span class="line">INCREMENT Image_Acquisition_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=43B59340F0FC TS_OK</span><br><span class="line">INCREMENT Image_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=23C1BC2A0B00 TS_OK</span><br><span class="line">INCREMENT Instr_Control_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=C33239E4EABA TS_OK</span><br><span class="line">INCREMENT LTE_HDL_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=CBEB4DC65DDE TS_OK</span><br><span class="line">INCREMENT LTE_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=DF335124FDAE TS_OK</span><br><span class="line">INCREMENT MAP_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E927B964E6F2 TS_OK</span><br><span class="line">INCREMENT MATLAB MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E3D729D0929E TS_OK</span><br><span class="line">INCREMENT MATLAB_Builder_for_dot_Net MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=8E84260A9402 TS_OK</span><br><span class="line">INCREMENT MATLAB_Builder_for_Java MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=4B91BD1ADD80 TS_OK</span><br><span class="line">INCREMENT MATLAB_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=BF825F68BD62 TS_OK</span><br><span class="line">INCREMENT MATLAB_Distrib_Comp_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=73FB1C30B022 TS_OK</span><br><span class="line">INCREMENT MATLAB_Excel_Builder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=03A16FD44AC0 TS_OK</span><br><span class="line">INCREMENT MATLAB_Production_Server MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=589050B05868 TS_OK</span><br><span class="line">INCREMENT MATLAB_Report_Gen MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=07D4A3BCE4E4 TS_OK</span><br><span class="line">INCREMENT MBC_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E894A736918E TS_OK</span><br><span class="line">INCREMENT MPC_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=FFF734022FC8 TS_OK</span><br><span class="line">INCREMENT Neural_Network_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=442F9C9A894E TS_OK</span><br><span class="line">INCREMENT OPC_Data_Access_Explorer MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=F5731D84D732 TS_OK</span><br><span class="line">INCREMENT OPC_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=447FAF1A275A TS_OK</span><br><span class="line">INCREMENT Optimization_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=C6097A7C2F30 TS_OK</span><br><span class="line">INCREMENT PDE_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=F38F1B86FC82 TS_OK</span><br><span class="line">INCREMENT Phased_Array_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=70481D26033A TS_OK</span><br><span class="line">INCREMENT PolySpace_Bug_Finder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=58A863F8AECC TS_OK</span><br><span class="line">INCREMENT PolySpace_Bug_Finder_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=96E1E2EA2112 TS_OK</span><br><span class="line">INCREMENT PolySpace_Client_ADA MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=A3C8672ED368 TS_OK</span><br><span class="line">INCREMENT PolySpace_Code_Prover MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=DDC6A7807CA6 TS_OK</span><br><span class="line">INCREMENT PolySpace_Code_Prover_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=039FE14A2750 TS_OK</span><br><span class="line">INCREMENT PolySpace_Server_ADA MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=CEFF5262D7A6 TS_OK</span><br><span class="line">INCREMENT PolySpace_Server_C_CPP MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=D706AB3A3B4A TS_OK</span><br><span class="line">INCREMENT PolySpace_Server_C_CPP MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=D706AB3A3B4A TS_OK</span><br><span class="line">INCREMENT Power_System_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=5811DD6EC3C4 TS_OK</span><br><span class="line">INCREMENT Powertrain_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=055FE1169600 TS_OK</span><br><span class="line">INCREMENT Pred_Maintenance_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=7B78C1FA14F8 TS_OK</span><br><span class="line">INCREMENT Qual_Kit_DO MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=AABBCFFCC244 TS_OK</span><br><span class="line">INCREMENT Real-Time_Win_Target MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=ED23164E5034 TS_OK</span><br><span class="line">INCREMENT Real-Time_Workshop MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=10134088DF18 TS_OK</span><br><span class="line">INCREMENT RF_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=10EBAB54B378 TS_OK</span><br><span class="line">INCREMENT RF_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=51C81DAE9152 TS_OK</span><br><span class="line">INCREMENT Risk_Management_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=4E0C5A02015A TS_OK</span><br><span class="line">INCREMENT Robotics_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=C2B6D5602A3E TS_OK</span><br><span class="line">INCREMENT Robust_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=DF9325BC7A28 TS_OK</span><br><span class="line">INCREMENT RTW_Embedded_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=2CD84F6A6D06 TS_OK</span><br><span class="line">INCREMENT Sensor_Array_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=87B58F5885E6 TS_OK</span><br><span class="line">INCREMENT Signal_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=76EE54D62094 TS_OK</span><br><span class="line">INCREMENT Signal_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=EFEAED44A1A2 TS_OK</span><br><span class="line">INCREMENT SimBiology MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=5EDB2ED64CD4 TS_OK</span><br><span class="line">INCREMENT SimDriveline MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=0EDCEC946F44 TS_OK</span><br><span class="line">INCREMENT SimElectronics MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=9EA692CAB216 TS_OK</span><br><span class="line">INCREMENT SimEvents MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=3941FB06D5B2 TS_OK</span><br><span class="line">INCREMENT SimHydraulics MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=590243A0E584 TS_OK</span><br><span class="line">INCREMENT SimMechanics MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=A7F43486F422 TS_OK</span><br><span class="line">INCREMENT Simscape MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=013B45668C66 TS_OK</span><br><span class="line">INCREMENT SIMULINK MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E837A9006D3E TS_OK</span><br><span class="line">INCREMENT Simulink_Code_Inspector MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=29154C324D06 TS_OK</span><br><span class="line">INCREMENT Simulink_Control_Design MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=79FA200447C4 TS_OK</span><br><span class="line">INCREMENT simulink_coverage MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=2CD191585516 TS_OK</span><br><span class="line">INCREMENT Simulink_Design_Optim MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=25259A54C4C4 TS_OK</span><br><span class="line">INCREMENT Simulink_Design_Verifier MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=82BFAC1CEA46 TS_OK</span><br><span class="line">INCREMENT Simulink_HDL_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=D5963DCACF42 TS_OK</span><br><span class="line">INCREMENT Simulink_PLC_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=CCFBF574CE16 TS_OK</span><br><span class="line">INCREMENT SIMULINK_Report_Gen MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=9813820C19D4 TS_OK</span><br><span class="line">INCREMENT Simulink_Requirements MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=AE15C81AA9EC TS_OK</span><br><span class="line">INCREMENT Simulink_Test MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=0B94EC30C1E6 TS_OK</span><br><span class="line">INCREMENT sl_coverage MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=B7FE4748A9F2 TS_OK</span><br><span class="line">INCREMENT sl_verification_validation MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=D924FEA8C050 TS_OK</span><br><span class="line">INCREMENT Stateflow MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=C62F7A988096 TS_OK</span><br><span class="line">INCREMENT Stateflow_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E86A8B1A92BE TS_OK</span><br><span class="line">INCREMENT Statistics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=666DA9489C32 TS_OK</span><br><span class="line">INCREMENT Symbolic_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=21FD3CF6B092 TS_OK</span><br><span class="line">INCREMENT SystemTest MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=A52ECE3EB50C TS_OK</span><br><span class="line">INCREMENT Target_Support_Package MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=183AD8C25500 TS_OK</span><br><span class="line">INCREMENT Text_Analytics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=C93274BE2C50 TS_OK</span><br><span class="line">INCREMENT TRADING_TOOLBOX MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=4033F00CA592 TS_OK</span><br><span class="line">INCREMENT Vehicle_Dynamics_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=53545E2475D6 TS_OK</span><br><span class="line">INCREMENT Vehicle_Network_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=06FD33A6500C TS_OK</span><br><span class="line">INCREMENT Video_and_Image_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=AFC4F95EF97C TS_OK</span><br><span class="line">INCREMENT Virtual_Reality_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=E18982E05F76 TS_OK</span><br><span class="line">INCREMENT Vision_HDL_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=B7CBEE12E6DE TS_OK</span><br><span class="line">INCREMENT Wavelet_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=5620DE4E8E1A TS_OK</span><br><span class="line">INCREMENT WLAN_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=0617D9360522 TS_OK</span><br><span class="line">INCREMENT XPC_Embedded_Option MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=3D79201A5002 TS_OK</span><br><span class="line">INCREMENT XPC_Target MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=968398 SIGN=316E1E6C5434 TS_OK</span><br><span class="line"> TS_OK</span><br></pre></td></tr></table></figure><h2 id="MATLAB-2019a"><a href="#MATLAB-2019a" class="headerlink" title="MATLAB 2019a"></a>MATLAB 2019a</h2><p>文件夹在“C:\Program Files\Polyspace\R2019a\licenses”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br></pre></td><td class="code"><pre><span class="line">INCREMENT Aerospace_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=0D8A1582514C TS_OK</span><br><span class="line">INCREMENT Aerospace_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=13FDDFF8C36C TS_OK</span><br><span class="line">INCREMENT Antenna_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=2A01DAAA9886 TS_OK</span><br><span class="line">INCREMENT Audio_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E025BF62EAD8 TS_OK</span><br><span class="line">INCREMENT Automated_Driving_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=C318246C14E2 TS_OK</span><br><span class="line">INCREMENT Bioinformatics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=358194AE1548 TS_OK</span><br><span class="line">INCREMENT Cert_Kit_IEC MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=60C2E6F826CE TS_OK</span><br><span class="line">INCREMENT Communication_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=CF5D32DAABBA TS_OK</span><br><span class="line">INCREMENT Communication_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=253B4EECBE48 TS_OK</span><br><span class="line">INCREMENT Compiler MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=2DD1C464FD06 TS_OK</span><br><span class="line">INCREMENT Control_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E0D5C4184FB6 TS_OK</span><br><span class="line">INCREMENT Curve_Fitting_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=583BAC2E0F7A TS_OK</span><br><span class="line">INCREMENT Data_Acq_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=48ECF5F6B11E TS_OK</span><br><span class="line">INCREMENT Database_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E9929C7A187A TS_OK</span><br><span class="line">INCREMENT DATAFEED_TOOLBOX MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=9876C540CA8E TS_OK</span><br><span class="line">INCREMENT Dial_and_Gauge_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=EFBA589A1810 TS_OK</span><br><span class="line">INCREMENT Distrib_Computing_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=D995C292E03A TS_OK</span><br><span class="line">INCREMENT Econometrics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=D1EC25D000D8 TS_OK</span><br><span class="line">INCREMENT eda_simulator_link MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=DE5E67B09746 TS_OK</span><br><span class="line">INCREMENT Embedded_IDE_Link MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=FB290E548926 TS_OK</span><br><span class="line">INCREMENT Excel_Link MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E6527A880B26 TS_OK</span><br><span class="line">INCREMENT Filter_Design_HDL_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=44F6103EBB0E TS_OK</span><br><span class="line">INCREMENT Filter_Design_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=58CB0596F32E TS_OK</span><br><span class="line">INCREMENT Fin_Derivatives_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=9E9A2B0020BA TS_OK</span><br><span class="line">INCREMENT Fin_Instruments_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=325A84A84E4A TS_OK</span><br><span class="line">INCREMENT Financial_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=698F9FC2DDDE TS_OK</span><br><span class="line">INCREMENT Fixed_Income_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=75BBDA60AC74 TS_OK</span><br><span class="line">INCREMENT Fixed_Point_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=BF695EBE4514 TS_OK</span><br><span class="line">INCREMENT Fixed-Point_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=22A5B32025E6 TS_OK</span><br><span class="line">INCREMENT Fuzzy_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=90FDC43A584E TS_OK</span><br><span class="line">INCREMENT GADS_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=38C864060ECE TS_OK</span><br><span class="line">INCREMENT GPU_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=D24A7C12C544 TS_OK</span><br><span class="line">INCREMENT Identification_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=2620D11C4600 TS_OK</span><br><span class="line">INCREMENT Image_Acquisition_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=43B59340F0FC TS_OK</span><br><span class="line">INCREMENT Image_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=23C1BC2A0B00 TS_OK</span><br><span class="line">INCREMENT Instr_Control_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=C33239E4EABA TS_OK</span><br><span class="line">INCREMENT LTE_HDL_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=CBEB4DC65DDE TS_OK</span><br><span class="line">INCREMENT LTE_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=DF335124FDAE TS_OK</span><br><span class="line">INCREMENT MAP_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E927B964E6F2 TS_OK</span><br><span class="line">INCREMENT MATLAB MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E3D729D0929E TS_OK</span><br><span class="line">INCREMENT MATLAB_Builder_for_dot_Net MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=8E84260A9402 TS_OK</span><br><span class="line">INCREMENT MATLAB_Builder_for_Java MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=4B91BD1ADD80 TS_OK</span><br><span class="line">INCREMENT MATLAB_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=BF825F68BD62 TS_OK</span><br><span class="line">INCREMENT MATLAB_Distrib_Comp_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=73FB1C30B022 TS_OK</span><br><span class="line">INCREMENT MATLAB_Excel_Builder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=03A16FD44AC0 TS_OK</span><br><span class="line">INCREMENT MATLAB_Production_Server MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=589050B05868 TS_OK</span><br><span class="line">INCREMENT MATLAB_Report_Gen MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=07D4A3BCE4E4 TS_OK</span><br><span class="line">INCREMENT MBC_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E894A736918E TS_OK</span><br><span class="line">INCREMENT MPC_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=FFF734022FC8 TS_OK</span><br><span class="line">INCREMENT Neural_Network_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=442F9C9A894E TS_OK</span><br><span class="line">INCREMENT OPC_Data_Access_Explorer MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=F5731D84D732 TS_OK</span><br><span class="line">INCREMENT OPC_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=447FAF1A275A TS_OK</span><br><span class="line">INCREMENT Optimization_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=C6097A7C2F30 TS_OK</span><br><span class="line">INCREMENT PDE_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=F38F1B86FC82 TS_OK</span><br><span class="line">INCREMENT Phased_Array_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=70481D26033A TS_OK</span><br><span class="line">INCREMENT PolySpace_Bug_Finder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=58A863F8AECC TS_OK</span><br><span class="line">INCREMENT PolySpace_Bug_Finder_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=96E1E2EA2112 TS_OK</span><br><span class="line">INCREMENT PolySpace_Client_ADA MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=A3C8672ED368 TS_OK</span><br><span class="line">INCREMENT PolySpace_Code_Prover MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=DDC6A7807CA6 TS_OK</span><br><span class="line">INCREMENT PolySpace_Code_Prover_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=039FE14A2750 TS_OK</span><br><span class="line">INCREMENT PolySpace_Server_ADA MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=CEFF5262D7A6 TS_OK</span><br><span class="line">INCREMENT PolySpace_Server_C_CPP MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=D706AB3A3B4A TS_OK</span><br><span class="line">INCREMENT PolySpace_Server_C_CPP MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=D706AB3A3B4A TS_OK</span><br><span class="line">INCREMENT Power_System_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=5811DD6EC3C4 TS_OK</span><br><span class="line">INCREMENT Powertrain_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=055FE1169600 TS_OK</span><br><span class="line">INCREMENT Pred_Maintenance_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=7B78C1FA14F8 TS_OK</span><br><span class="line">INCREMENT Qual_Kit_DO MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=AABBCFFCC244 TS_OK</span><br><span class="line">INCREMENT Real-Time_Win_Target MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=ED23164E5034 TS_OK</span><br><span class="line">INCREMENT Real-Time_Workshop MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=10134088DF18 TS_OK</span><br><span class="line">INCREMENT RF_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=10EBAB54B378 TS_OK</span><br><span class="line">INCREMENT RF_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=51C81DAE9152 TS_OK</span><br><span class="line">INCREMENT Risk_Management_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=4E0C5A02015A TS_OK</span><br><span class="line">INCREMENT Robotics_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=C2B6D5602A3E TS_OK</span><br><span class="line">INCREMENT Robust_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=DF9325BC7A28 TS_OK</span><br><span class="line">INCREMENT RTW_Embedded_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=2CD84F6A6D06 TS_OK</span><br><span class="line">INCREMENT Sensor_Array_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=87B58F5885E6 TS_OK</span><br><span class="line">INCREMENT Signal_Blocks MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=76EE54D62094 TS_OK</span><br><span class="line">INCREMENT Signal_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=EFEAED44A1A2 TS_OK</span><br><span class="line">INCREMENT SimBiology MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=5EDB2ED64CD4 TS_OK</span><br><span class="line">INCREMENT SimDriveline MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=0EDCEC946F44 TS_OK</span><br><span class="line">INCREMENT SimElectronics MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=9EA692CAB216 TS_OK</span><br><span class="line">INCREMENT SimEvents MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=3941FB06D5B2 TS_OK</span><br><span class="line">INCREMENT SimHydraulics MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=590243A0E584 TS_OK</span><br><span class="line">INCREMENT SimMechanics MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=A7F43486F422 TS_OK</span><br><span class="line">INCREMENT Simscape MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=013B45668C66 TS_OK</span><br><span class="line">INCREMENT SIMULINK MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E837A9006D3E TS_OK</span><br><span class="line">INCREMENT Simulink_Code_Inspector MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=29154C324D06 TS_OK</span><br><span class="line">INCREMENT Simulink_Control_Design MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=79FA200447C4 TS_OK</span><br><span class="line">INCREMENT simulink_coverage MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=2CD191585516 TS_OK</span><br><span class="line">INCREMENT Simulink_Design_Optim MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=25259A54C4C4 TS_OK</span><br><span class="line">INCREMENT Simulink_Design_Verifier MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=82BFAC1CEA46 TS_OK</span><br><span class="line">INCREMENT Simulink_HDL_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=D5963DCACF42 TS_OK</span><br><span class="line">INCREMENT Simulink_PLC_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=CCFBF574CE16 TS_OK</span><br><span class="line">INCREMENT SIMULINK_Report_Gen MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=9813820C19D4 TS_OK</span><br><span class="line">INCREMENT Simulink_Requirements MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=AE15C81AA9EC TS_OK</span><br><span class="line">INCREMENT Simulink_Test MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=0B94EC30C1E6 TS_OK</span><br><span class="line">INCREMENT sl_coverage MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=B7FE4748A9F2 TS_OK</span><br><span class="line">INCREMENT sl_verification_validation MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=D924FEA8C050 TS_OK</span><br><span class="line">INCREMENT Stateflow MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=C62F7A988096 TS_OK</span><br><span class="line">INCREMENT Stateflow_Coder MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E86A8B1A92BE TS_OK</span><br><span class="line">INCREMENT Statistics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=666DA9489C32 TS_OK</span><br><span class="line">INCREMENT Symbolic_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=21FD3CF6B092 TS_OK</span><br><span class="line">INCREMENT SystemTest MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=A52ECE3EB50C TS_OK</span><br><span class="line">INCREMENT Target_Support_Package MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=183AD8C25500 TS_OK</span><br><span class="line">INCREMENT Text_Analytics_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=C93274BE2C50 TS_OK</span><br><span class="line">INCREMENT TRADING_TOOLBOX MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=4033F00CA592 TS_OK</span><br><span class="line">INCREMENT Vehicle_Dynamics_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=53545E2475D6 TS_OK</span><br><span class="line">INCREMENT Vehicle_Network_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=06FD33A6500C TS_OK</span><br><span class="line">INCREMENT Video_and_Image_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=AFC4F95EF97C TS_OK</span><br><span class="line">INCREMENT Virtual_Reality_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E18982E05F76 TS_OK</span><br><span class="line">INCREMENT Vision_HDL_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=B7CBEE12E6DE TS_OK</span><br><span class="line">INCREMENT Wavelet_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=5620DE4E8E1A TS_OK</span><br><span class="line">INCREMENT WLAN_System_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=0617D9360522 TS_OK</span><br><span class="line">INCREMENT XPC_Embedded_Option MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=3D79201A5002 TS_OK</span><br><span class="line">INCREMENT XPC_Target MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=316E1E6C5434 TS_OK</span><br><span class="line">INCREMENT MATLAB_5G_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=8583DC1EA636 TS_OK</span><br><span class="line">INCREMENT Sensor_Fusion_and_Tracking MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=E372A00ACE84 TS_OK</span><br><span class="line">INCREMENT PolySpace_BF MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=844010F4F9A0 TS_OK</span><br><span class="line">INCREMENT PolySpace_BF_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=8862A3D6D7DC TS_OK</span><br><span class="line">INCREMENT PolySpace_BF_Server MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=818517DE5E88 TS_OK</span><br><span class="line">INCREMENT PolySpace_CP MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=7C2CCEC42EB0 TS_OK</span><br><span class="line">INCREMENT PolySpace_CP_Engine MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=9C0B926A356C TS_OK</span><br><span class="line">INCREMENT PolySpace_CP_Server MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=48F649303232 TS_OK</span><br><span class="line">INCREMENT AUTOSAR_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=F59CD894C358 TS_OK</span><br><span class="line">INCREMENT System_Composer MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=64A67D287C12 TS_OK</span><br><span class="line">INCREMENT SoC_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=5080646CB4CA TS_OK</span><br><span class="line">INCREMENT SerDes_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=A76AB9C02DEA TS_OK</span><br><span class="line">INCREMENT Reinforcement_Learn_Toolbox MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=667F745271E6 TS_OK</span><br><span class="line">INCREMENT Mixed_Signal_Blockset MLM 369 permanent uncounted \</span><br><span class="line">VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \</span><br><span class="line">HOSTID=ANY SN=123456 SIGN=06EEE99C143E TS_OK</span><br><span class="line"> TS_OK</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用shadowsocks搭建自己的代理服务教程</title>
      <link href="/2019/11/27/C_%E6%95%99%E7%A8%8B_SS%E9%AD%94%E6%B3%95%E5%8A%9E%E6%B3%95/"/>
      <url>/2019/11/27/C_%E6%95%99%E7%A8%8B_SS%E9%AD%94%E6%B3%95%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="ScientificSurf"><a href="#ScientificSurf" class="headerlink" title="ScientificSurf"></a>ScientificSurf</h1><h2 id="服务器的购买"><a href="#服务器的购买" class="headerlink" title="服务器的购买"></a>服务器的购买</h2><p>关于购买何种服务器，有比较多的人讨论，因为最近很多服务器涨价，以及很多服务器的ip被封，曾经大家非常推崇的搬瓦工目前已经不太能用了，我是在看了<a href="https://zhuanlan.zhihu.com/p/70025050">该介绍</a>之后，按照<a href="https://www.vps234.com/hostwinds-purchase-tutorial/">该方法</a>购买了<a href="https://www.hostwinds.com/">hostwinds</a>一个服务器，选择的是最便宜的版本，安装了ubuntu 16.04. 选择hostwind而不是搬瓦工等其他的，是基于</p><p>(1) 并且hostwind有24小时在线的客服，有啥问题可以直接问</p><p>(2) hostwind有针对ip被封的解决办法，我最开始填的地址在美国，导致分配的ip地址中国ping不了，在和客服说了以后更改了位置并且重启网络部署之后，ip就可以访问了。</p><h1 id="shadowsocks的安装"><a href="#shadowsocks的安装" class="headerlink" title="shadowsocks的安装"></a>shadowsocks的安装</h1><p>有了一台国外的远程服务器，接下来就可以用其作为代理了。需要下载并且安装shadowsocks，我是根据<a href="https://www.2cto.com/kf/201808/774027.html">该教程</a>，下载并且安装部署好了shadowsocks，一切都比较顺利~</p><h1 id="本地登录"><a href="#本地登录" class="headerlink" title="本地登录"></a>本地登录</h1><p>本地登录需要首先有一个shadowsocks客户端，自己去github搜索下载即可，虽然原本的<a href="https://github.com/shadowsocks/shadowsocks">shadowsocks</a>已经被删除了，但其实还有很多的备份，比如<a href="https://github.com/ziggear/shadowsocks">这个</a>,下载安装windows版本之后，就可以输入自己部署的ip，密码，端口，然后科学上网了。</p><h2 id="IOS设备使用代理"><a href="#IOS设备使用代理" class="headerlink" title="IOS设备使用代理"></a>IOS设备使用代理</h2><p>Windows,安卓平台都有Shadows Socks客户端，而IOS商店中国区是没有该软件的，需要自己租界或者购买一个海外的IOS账户，安装使用即可。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 梯子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Useful python web and sources</title>
      <link href="/2019/11/18/A_En_Python_UsefulWeb/"/>
      <url>/2019/11/18/A_En_Python_UsefulWeb/</url>
      
        <content type="html"><![CDATA[<h1 id="Collection-Python"><a href="#Collection-Python" class="headerlink" title="Collection #Python"></a>Collection #Python</h1><h2 id="Useful-package-and-corresponding-web-page"><a href="#Useful-package-and-corresponding-web-page" class="headerlink" title="Useful package and corresponding web page"></a>Useful package and corresponding web page</h2><ul><li><a href="https://docs.sympy.org/latest/modules/solvers/solveset.html">Solveset</a>  Solve the equations better than solve</li><li><a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.griddata.html">scipy.interpolate.griddata</a> interpolate the data with ununiform grid</li><li><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.interp.html">scipy.interpolate.interp</a> interpolate the 1d data</li><li><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.interp2d.html">scipy.interpolate.interp2d</a>  interpolate the 1d data</li><li><a href="https://pypi.org/project/odeintw/">odeintw</a> provides a wrapper of “scipy.integrate.odeint” that allows it to handle complex and matrix differential equations. That is, it can solve equations of the form.</li><li><a href="https://github.com/t-makaro/animatplot">animatplot</a> could let the animated plot easier and provide interactive choices.</li><li><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">python package source file</a> When some packages can’t be compile, we can download them from this web and directly install them.</li><li><a href="https://scipy-cookbook.readthedocs.io/index.html">SciPy Cookbook</a> Scipy数值计算库</li><li><a href="https://docs.sympy.org/1.5.1/index.html">Sympy</a> Sympy符号计算库，可以一定程度上代替Mathematica.</li><li><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">Python非官方安装包</a> 一些不能pip直接安装的软件可以在这个网站下载安装。</li></ul><h2 id="Useful-web-for-study"><a href="#Useful-web-for-study" class="headerlink" title="Useful web for study"></a>Useful web for study</h2><ul><li><p><a href="http://neuralnetworksanddeeplearning.com/">Neural Networks and Deep Learning</a></p></li><li><p><a href="https://cloud.tencent.com/developer/ask/64293">Python 绘制球体、立方体</a></p></li><li><p><a href="https://likegeeks.com/python-gui-examples-tkinter-tutorial/">Python GUI</a></p></li><li><p><a href="https://vlight.me/2018/05/07/ML-with-tf-TensorFlow-essentials/">Python优质个人博客(1)</a></p></li><li><p><a href="https://github.com/jackfrued/Python-100-Days">Python 100 days</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to uninstall ubuntu with windows/ubuntu dual system</title>
      <link href="/2019/10/17/A_En_How_To_Delete_Ubuntu_In_Windows/"/>
      <url>/2019/10/17/A_En_How_To_Delete_Ubuntu_In_Windows/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu-Windows"><a href="#Ubuntu-Windows" class="headerlink" title="Ubuntu #Windows"></a>Ubuntu #Windows</h1><p> <a href="https://www.jianshu.com/p/66a092caaa36?tdsourcetag=s_pctim_aiomsg">https://www.jianshu.com/p/66a092caaa36?tdsourcetag=s_pctim_aiomsg</a> </p><p><strong><em>This is original from above blog.</em></strong></p><p> On a dual-system computer, if you use Ubuntu’s built-in grub program as boot to boot, you cannot directly format the disk on windows where Ubuntu is located, otherwise the MBR contents on the hard disk will be wiped out and the boot will not succeed. </p><p>To uninstall Ubuntu, you need to first delete its MBR content and then format its hard disk. For different computers, there are different ways to modify the MBR, so the first step is to identify the BIOS boot type, the method is: </p><p><code>Win+R</code> open and run, enter <code>msinfo32</code>, press enter to view system information</p><p>If <strong>traditional</strong> is displayed in BIOS mode, the boot  method is <strong>Legacy BIOS</strong>. If <strong>UEFI</strong> is displayed, then the boot method is <strong>UEFI</strong>.</p><h3 id="If-Legacy-BIOS-is-enabled"><a href="#If-Legacy-BIOS-is-enabled" class="headerlink" title="If Legacy BIOS is enabled"></a>If Legacy BIOS is enabled</h3><p>1.1 download the Mbrfix tool and place it anywhere, such as: ‘D\Tools\’</p><p>1.2 run the command prompt as the administrator to enter the MBRfix tool directory, for example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:</span><br><span class="line"><span class="built_in">cd</span> \Tools</span><br></pre></td></tr></table></figure><p>1.3 entering</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MbrFix /drive 0 fixmbr /yes</span><br></pre></td></tr></table></figure><p>1.4 restart the computer, see whether directly into the Win10 system, if so, that deleted successfully</p><h3 id="If-UEFI-BIOS-is-enabled"><a href="#If-UEFI-BIOS-is-enabled" class="headerlink" title="If UEFI BIOS is enabled"></a>If UEFI BIOS is enabled</h3><p>2.1 download Easy UEFI</p><p>[Easy UEFI] (<a href="https://www.easyuefi.com/index-cn.html">https://www.easyuefi.com/index-cn.html</a>)</p><p>2.2 after installing UEFI, enter the function of management EFI startup and delete the EFI partition of Ubuntu</p><p>2.3 restart the computer, directly enter Win10, successful</p><p>After successfully modifying the MBR content, you can directly format the corresponding hard disk of Ubuntu</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PythonPlot (2) ThreeOrthogonalVectors</title>
      <link href="/2019/08/04/A_En_Python_PlotStudy2_ThreeOrthogonalVectors/"/>
      <url>/2019/08/04/A_En_Python_PlotStudy2_ThreeOrthogonalVectors/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Plot"><a href="#Python-Plot" class="headerlink" title="Python #Plot"></a>Python #Plot</h1><p>All the python study code can be found in my <a href="https://github.com/knifelees3/Study_Python">own repository</a>.</p><h2 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h2><p>When we describe the angle of an vector in 3d space, we will use three vectors to describe them. When We have three orthogonal vectors, how can be describe them and show them via plot? This is the purpose of this note.</p><p>To plot three orthogonal vectors in a 3d space. We will use three parameters to describe them.</p><ol><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container>: the polar angle, angle  between the c axis and the z axis</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.348ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 596 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g></g></g></svg></mjx-container>: the azimuthal angle </li><li>Ratio_xy :  to rotate the other two orthogonal vectors</li></ol><p>I will begin from the special c-axis and it can be described by the polar angle <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container> and the azimuthal angle <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.348ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 596 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g></g></g></svg></mjx-container> . The two other vectors are in the plane orthogonal to c-axis they can rotate in the plane. We can describe them via a ratio <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="3.604ex" height="2.213ex" role="img" focusable="false" viewBox="0 -683 1592.9 978"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="TeXAtom" transform="translate(792,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(572,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container>. The three vectors can be expressed as</p><script type="math/tex; mode=display">\hat{A}_{1}=(\cos(\theta)\cdot \sin (\phi),\cos(\theta)\cdot \cos (\phi),\sin(\theta))=(a_{11},a_{12}，a_{13})</script><script type="math/tex; mode=display">A_{2}=(1,R_{xy},-\frac{a_{12}}{a_{13}}R_{xy}-\frac{a_{12}}{a_{13}})</script><script type="math/tex; mode=display">\hat{A}_{2}=\frac{A_{2}}{|A_{2}|}=(a_{21},a_{22}，a_{23})</script><script type="math/tex; mode=display">\hat{A}_{3}=\hat{A}_{1}\cdot \hat{A}_{2}</script><p>where the <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="0.036ex" height="1.833ex" role="img" focusable="false" viewBox="0 -810 16 810"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mrow"></g><g data-mml-node="mo" transform="translate(0,16) translate(-250 0)"><path data-c="5E" d="M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z"></path></g></g></g></g></g></svg></mjx-container> are used to express the normalized vectors. It’s easy to check that the three vectors defined above are orthogonal to each other.</p><h2 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h2><h3 id="theta-pi-3-phi-pi-3-ratio-xy-1"><a href="#theta-pi-3-phi-pi-3-ratio-xy-1" class="headerlink" title="$\theta=\pi/3,\phi=\pi/3$,ratio_xy=1"></a><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="16.554ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7316.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(746.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1802.6,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2372.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(2872.6,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><g data-mml-node="mo" transform="translate(3372.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3817.2,0)"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(4691,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5746.8,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6316.8,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(6816.8,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container>,ratio_xy=1</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190804_pythonplot2_threevectors/1_view1.png" alt="view 1"></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190804_pythonplot2_threevectors/1_view2.png" alt="view 2"></p><h3 id="theta-pi-6-phi-pi-4-ratio-xy-10"><a href="#theta-pi-6-phi-pi-4-ratio-xy-10" class="headerlink" title="$\theta=\pi/6,\phi=\pi/4$,ratio_xy=10"></a><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="16.554ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7316.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(746.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1802.6,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2372.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(2872.6,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g><g data-mml-node="mo" transform="translate(3372.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3817.2,0)"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(4691,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5746.8,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6316.8,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(6816.8,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></svg></mjx-container>,ratio_xy=10</h3><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190804_pythonplot2_threevectors/2_view1.png" alt="view 1"></p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190804_pythonplot2_threevectors/2_view2.png" alt="view 1"></p><h2 id="The-code"><a href="#The-code" class="headerlink" title="The code"></a>The code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To show the incident angle in 3D axis</span></span><br><span class="line"><span class="comment"># Date: 2019 08 03</span></span><br><span class="line"><span class="comment"># Authour: Zhaohua Tian</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Import necessary libraries</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">from</span> matplotlib.patches <span class="keyword">import</span> FancyArrowPatch</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> proj3d</span><br><span class="line"></span><br><span class="line">theta = np.pi / <span class="number">6</span></span><br><span class="line">phi = np.pi / <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Arrow3D</span>(<span class="title class_ inherited__">FancyArrowPatch</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, xs, ys, zs, *args, **kwargs</span>):</span><br><span class="line">        FancyArrowPatch.__init__(self, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">0</span>), *args, **kwargs)</span><br><span class="line">        self._verts3d = xs, ys, zs</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">draw</span>(<span class="params">self, renderer</span>):</span><br><span class="line">        xs3d, ys3d, zs3d = self._verts3d</span><br><span class="line">        xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, renderer.M)</span><br><span class="line">        self.set_positions((xs[<span class="number">0</span>], ys[<span class="number">0</span>]), (xs[<span class="number">1</span>], ys[<span class="number">1</span>]))</span><br><span class="line">        FancyArrowPatch.draw(self, renderer)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Prepare the coordinate matrix</span></span><br><span class="line">num_arrow = <span class="number">3</span></span><br><span class="line">coor0 = np.zeros((<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">row = np.ones((num_arrow, <span class="number">1</span>))</span><br><span class="line">coor = np.matmul(row, coor0)</span><br><span class="line">x = np.cos(theta) * np.sin(phi)</span><br><span class="line">y = np.cos(theta) * np.cos(phi)</span><br><span class="line">z = np.sin(theta)</span><br><span class="line"></span><br><span class="line">ar_1 = np.array([x, y, z])</span><br><span class="line">nar_1 = ar_1 / np.sqrt(ar_1[<span class="number">0</span>] ** <span class="number">2</span> + ar_1[<span class="number">1</span>] ** <span class="number">2</span> + ar_1[<span class="number">2</span>] ** <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">ratio_xy = <span class="number">10</span></span><br><span class="line">ar_2 = np.array([<span class="number">1</span>, ratio_xy, -y / z * ratio_xy - x / z])</span><br><span class="line">nar_2 = ar_2 / np.sqrt(ar_2[<span class="number">0</span>] ** <span class="number">2</span> + ar_2[<span class="number">1</span>] ** <span class="number">2</span> + ar_2[<span class="number">2</span>] ** <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">nar_3 = np.cross(nar_1, nar_2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># To plot the projection of nar_1</span></span><br><span class="line">num = <span class="number">20</span></span><br><span class="line">x_mat = np.linspace(-<span class="number">1</span>, <span class="number">1</span>, num)</span><br><span class="line">z_mat = np.linspace(<span class="number">0</span>, <span class="number">1</span>, num)</span><br><span class="line">line_1_xy = np.array([(z_mat)*x, (z_mat)*y, (z_mat)*<span class="number">0</span>])</span><br><span class="line">line_1_z = np.array([np.ones(num)*x, np.ones(num)*y, (z_mat)*z])</span><br><span class="line"></span><br><span class="line"><span class="comment"># To  plot the x,y,z coordinate</span></span><br><span class="line">line_x = np.array([x_mat, x_mat*<span class="number">0</span>, x_mat*<span class="number">0</span>])</span><br><span class="line">line_y = np.array([x_mat*<span class="number">0</span>, x_mat, x_mat*<span class="number">0</span>])</span><br><span class="line">line_z = np.array([x_mat*<span class="number">0</span>, x_mat*<span class="number">0</span>, x_mat])</span><br><span class="line"></span><br><span class="line"><span class="comment"># To plot the xy plane</span></span><br><span class="line">xx, yy = np.meshgrid(x_mat, x_mat)</span><br><span class="line">zz_xy = np.zeros((num, num))</span><br><span class="line"><span class="comment"># to plot the orthogonal plane</span></span><br><span class="line">zz_or = (-x*xx-y*yy)/z</span><br><span class="line"><span class="comment"># To plot the \theta \phi</span></span><br><span class="line">theta_x = z_mat*x*<span class="number">0.5</span></span><br><span class="line">theta_y = z_mat*y*<span class="number">0.5</span></span><br><span class="line">theta_z = np.sqrt(<span class="number">0.25</span>-theta_x**<span class="number">2</span>-theta_y**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">phi_y = np.linspace(<span class="number">0</span>, y, num)</span><br><span class="line">phi_x = np.sqrt(x**<span class="number">2</span>+y**<span class="number">2</span>-phi_y**<span class="number">2</span>)</span><br><span class="line">phi_z = np.zeros(num)</span><br><span class="line"><span class="comment"># Plot part</span></span><br><span class="line"><span class="comment"># Plot the arrow</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.gca(projection=<span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Three arrows</span></span><br><span class="line">a1 = Arrow3D([<span class="number">0</span>, nar_1[<span class="number">0</span>]], [<span class="number">0</span>, nar_1[<span class="number">1</span>]], [<span class="number">0</span>, nar_1[<span class="number">2</span>]], mutation_scale=<span class="number">20</span>,</span><br><span class="line">             lw=<span class="number">2</span>, arrowstyle=<span class="string">"-|&gt;"</span>, color=<span class="string">"r"</span>)</span><br><span class="line">ax.add_artist(a1)</span><br><span class="line"></span><br><span class="line">a2 = Arrow3D([<span class="number">0</span>, nar_2[<span class="number">0</span>]], [<span class="number">0</span>, nar_2[<span class="number">1</span>]], [<span class="number">0</span>, nar_2[<span class="number">2</span>]], mutation_scale=<span class="number">20</span>,</span><br><span class="line">             lw=<span class="number">1</span>, arrowstyle=<span class="string">"-|&gt;"</span>, color=<span class="string">"b"</span>)</span><br><span class="line">ax.add_artist(a2)</span><br><span class="line"></span><br><span class="line">a3 = Arrow3D([<span class="number">0</span>, nar_3[<span class="number">0</span>]], [<span class="number">0</span>, nar_3[<span class="number">1</span>]], [<span class="number">0</span>, nar_3[<span class="number">2</span>]], mutation_scale=<span class="number">20</span>,</span><br><span class="line">             lw=<span class="number">1</span>, arrowstyle=<span class="string">"-|&gt;"</span>, color=<span class="string">"b"</span>)</span><br><span class="line">ax.add_artist(a3)</span><br><span class="line"><span class="comment"># The projection</span></span><br><span class="line">a4 = ax.plot(line_1_xy[<span class="number">0</span>, :], line_1_xy[<span class="number">1</span>, :], line_1_xy[<span class="number">2</span>, :], <span class="string">'k--'</span>)</span><br><span class="line">a5 = ax.plot(line_1_z[<span class="number">0</span>, :], line_1_z[<span class="number">1</span>, :], line_1_z[<span class="number">2</span>, :], <span class="string">'k--'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The x,y,z coordinate</span></span><br><span class="line">ax_x = ax.plot(line_x[<span class="number">0</span>, :], line_x[<span class="number">1</span>, :], line_x[<span class="number">2</span>, :], <span class="string">'k--'</span>)</span><br><span class="line">ax_y = ax.plot(line_y[<span class="number">0</span>, :], line_y[<span class="number">1</span>, :], line_y[<span class="number">2</span>, :], <span class="string">'k--'</span>)</span><br><span class="line">ax_z = ax.plot(line_z[<span class="number">0</span>, :], line_z[<span class="number">1</span>, :], line_z[<span class="number">2</span>, :], <span class="string">'k--'</span>)</span><br><span class="line"><span class="comment"># The xy plane</span></span><br><span class="line">surf_xy = ax.plot_surface(xx, yy, zz_xy, alpha=<span class="number">0.3</span>, color=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"><span class="comment"># The orthogonal plane</span></span><br><span class="line">surf_or = ax.plot_surface(xx, yy, zz_or, alpha=<span class="number">0.3</span>, color=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"><span class="comment"># The theta angle</span></span><br><span class="line">theta_angle = ax.plot(theta_x, theta_y, theta_z, <span class="string">'r-'</span>)</span><br><span class="line"><span class="comment"># The phi angle</span></span><br><span class="line">phi_angle = ax.plot(phi_x, phi_y, phi_z, <span class="string">'r-'</span>)</span><br><span class="line"></span><br><span class="line">ax.set_xlim((-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">ax.set_ylim((-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">ax.set_zlim(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">ax.text(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="string">'z'</span>)</span><br><span class="line">ax.text(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">'x'</span>)</span><br><span class="line">ax.text(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="string">'y'</span>)</span><br><span class="line">ax.text(x, y, z, <span class="string">'c axis'</span>)</span><br><span class="line">ax.text(theta_x[<span class="number">10</span>], theta_y[<span class="number">10</span>], theta_z[<span class="number">10</span>], <span class="string">'$\\theta$'</span>)</span><br><span class="line">ax.text(phi_x[<span class="number">10</span>], phi_y[<span class="number">10</span>], phi_z[<span class="number">10</span>], <span class="string">'$\\phi$'</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">'x'</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">'y'</span>)</span><br><span class="line">ax.set_zlabel(<span class="string">'z'</span>)</span><br><span class="line">ax.set_title([<span class="string">'$\theta = $'</span> + <span class="built_in">str</span>(<span class="built_in">round</span>(theta, <span class="number">2</span>))+<span class="string">' '</span>+<span class="string">'$ phi = $'</span> +</span><br><span class="line">              <span class="built_in">str</span>(<span class="built_in">round</span>(phi, <span class="number">2</span>))+<span class="string">' '</span>+<span class="string">'ratio_xy='</span> + <span class="built_in">str</span>(<span class="built_in">round</span>(ratio_xy, <span class="number">2</span>))])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Plot (1) A small ball on a smooth semicircle (Animated)</title>
      <link href="/2019/07/23/A_En_Python_PlotStudy1_SemiCircle_OscilatorApprox/"/>
      <url>/2019/07/23/A_En_Python_PlotStudy1_SemiCircle_OscilatorApprox/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Plot"><a href="#Python-Plot" class="headerlink" title="Python #Plot"></a>Python #Plot</h1><p>All the python study code can be found in my <a href="https://github.com/knifelees3/Study_Python">own repository</a>.</p><h2 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h2><p>In high school we learned how to use the energy conservation law to get the velocity for a ball slides down a 1/4  circle. However, the time needed in this process is still unknown. The period for a pendulum also uses a approximated expression. In this note, I will try to solve the time evolution for a ball slide down from a smooth semi-circle numerically via python. I will compare the oscillator approximation and accurate result in the same animated figure .</p><h2 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h2><p>According to the energy conservation law</p><script type="math/tex; mode=display">dMg\cos(\theta)R=\frac{1}{2}M\nu^2</script><p>We need a linear differential form and the velocity <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.097ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 485 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></svg></mjx-container> should be used. The relation between the angle <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container> and the time is</p><script type="math/tex; mode=display">\dot{v}=\frac{g}{R} \sin(\theta)</script><script type="math/tex; mode=display">v=\dot{\theta}R</script><p>We only consider the simple case that the small ball is initially rest, that is</p><script type="math/tex; mode=display">\theta=\theta_{0},\dot{\theta}=0</script><p>The x and y coordinate can be expressed as</p><script type="math/tex; mode=display">x=R\cdot \sin(\theta),\quad y=-R\cdot \cos(\theta)</script><p>If <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container> is near 0,then <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.678ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4277.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(394,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(672,0)"></path></g><g data-mml-node="mo" transform="translate(1228,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mo" transform="translate(1228,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1617,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2086,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2752.8,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="mi" transform="translate(3808.6,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container>, </p><script type="math/tex; mode=display">\dot{v}\approx\frac{g}{R} \theta</script><p>This is the equation for a simple harmonic oscillator, when <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container> is small enough, this equation works well.</p><h2 id="The-Results"><a href="#The-Results" class="headerlink" title="The Results"></a>The Results</h2><p>I used the function “odeint” to solve the differential equations numerically. I give two examples  with the angle <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container> is very big or relatively small.</p><ul><li>With the ball initially in the <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.63ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3372.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(746.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1802.6,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2372.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(2872.6,0)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g></g></g></svg></mjx-container>, the evolution of oscillator approximations and accurate cases are different but not so big.</li></ul><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190723_Oscilator/pi_6.gif" alt=""></p><ul><li>With the ball initially in the <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.63ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3372.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(746.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1802.6,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2372.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(2872.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container>, the oscillator approximation is not a good approximation now.</li></ul><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190723_Oscilator/pi_2.gif" alt=""></p><h2 id="The-code"><a href="#The-code" class="headerlink" title="The code"></a>The code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To plot a animated oscillator</span></span><br><span class="line"><span class="comment"># Use to spot, one spot is fixed at the origin and the</span></span><br><span class="line"><span class="comment"># other is moving</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import necessary library</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> animation</span><br><span class="line"><span class="keyword">from</span> scipy.integrate <span class="keyword">import</span> odeint</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define the parameters</span></span><br><span class="line">theta_0 = -np.pi/<span class="number">6</span></span><br><span class="line">theta_0_degree = theta_0/np.pi*<span class="number">180</span></span><br><span class="line">R = <span class="number">1.0</span></span><br><span class="line">g = <span class="number">9.8</span></span><br><span class="line">coe = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define the differential equations</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">evo_accu</span>(<span class="params">z, t, g, R, coe</span>):</span><br><span class="line">    v = z[<span class="number">0</span>]</span><br><span class="line">    theta = z[<span class="number">1</span>]</span><br><span class="line">    dtheta = v/R</span><br><span class="line">    dv = -coe*g*np.sin(theta)</span><br><span class="line">    dzdt = [dv, dtheta]</span><br><span class="line">    <span class="keyword">return</span> dzdt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">evo_osci</span>(<span class="params">z, t, g, R, coe</span>):</span><br><span class="line">    v = z[<span class="number">0</span>]</span><br><span class="line">    theta = z[<span class="number">1</span>]</span><br><span class="line">    dtheta = v/R</span><br><span class="line">    dv = -coe*g*theta</span><br><span class="line">    dzdt = [dv, dtheta]</span><br><span class="line">    <span class="keyword">return</span> dzdt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t_max = <span class="number">1.0</span>/R*g*<span class="number">3</span></span><br><span class="line">numt = <span class="number">500</span></span><br><span class="line">tmat = np.linspace(<span class="number">0</span>, t_max, numt)</span><br><span class="line">z0 = [<span class="number">0</span>, theta_0]</span><br><span class="line">theta_accu = odeint(evo_accu, z0, tmat, args=(g, R, coe))</span><br><span class="line">theta_osci = odeint(evo_osci, z0, tmat, args=(g, R, coe))</span><br><span class="line"><span class="comment"># The coordinate expression</span></span><br><span class="line">x_accu = R*np.sin(theta_accu[:, <span class="number">1</span>])</span><br><span class="line">y_accu = -R*np.cos(theta_accu[:, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">x_osci = R*np.sin(theta_osci[:, <span class="number">1</span>])</span><br><span class="line">y_osci = -R*np.cos(theta_osci[:, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">theta_accu_degree = theta_accu[:, <span class="number">1</span>]/np.pi*<span class="number">180</span></span><br><span class="line">theta_osci_degree = theta_osci[:, <span class="number">1</span>]/np.pi*<span class="number">180</span></span><br><span class="line"><span class="comment"># Set the curve of the half circle</span></span><br><span class="line">x_cir = np.linspace(-R, R, <span class="number">100</span>)</span><br><span class="line">y_cir = -np.sqrt(R**<span class="number">2</span>-x_cir**<span class="number">2</span>)</span><br><span class="line"><span class="comment"># Count the loop</span></span><br><span class="line">count_accu = np.zeros(numt)</span><br><span class="line">count_osci = np.zeros(numt)</span><br><span class="line"></span><br><span class="line">counter_accu = <span class="number">0</span></span><br><span class="line">counter_osci = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numt-<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span>(theta_accu[i, <span class="number">1</span>]*theta_accu[i+<span class="number">1</span>, <span class="number">1</span>] &lt; <span class="number">0</span>):</span><br><span class="line">        counter_accu = counter_accu+<span class="number">1</span></span><br><span class="line">        count_accu[i] = counter_accu</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        count_accu[i] = counter_accu</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(theta_osci[i, <span class="number">1</span>]*theta_osci[i+<span class="number">1</span>, <span class="number">1</span>] &lt; <span class="number">0</span>):</span><br><span class="line">        counter_osci = counter_osci+<span class="number">1</span></span><br><span class="line">        count_osci[i] = counter_osci</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        count_osci[i] = counter_osci</span><br><span class="line">        </span><br><span class="line"><span class="comment"># plot the two different evolution in the same figure</span></span><br><span class="line"><span class="comment"># First set up the figure, the axis, and the plot element we want to animate</span></span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = plt.axes(xlim=(-<span class="number">2</span>, <span class="number">2</span>), ylim=(-<span class="number">2</span>, <span class="number">2</span>), aspect=<span class="string">'equal'</span>)</span><br><span class="line">line_accu, = ax.plot([], [], <span class="string">'r-o'</span>, label=<span class="string">'Accurate'</span>)</span><br><span class="line">line_osci, = ax.plot([], [], <span class="string">'g-o'</span>, label=<span class="string">'Oscillator Approx'</span>)</span><br><span class="line">theta_accu_text = ax.text(<span class="number">0.02</span>, <span class="number">0.8</span>, <span class="string">''</span>, transform=ax.transAxes)</span><br><span class="line">theta_osci_text = ax.text(<span class="number">0.02</span>, <span class="number">0.7</span>, <span class="string">''</span>, transform=ax.transAxes)</span><br><span class="line">loop_accu_text = ax.text(<span class="number">0.02</span>, <span class="number">0.6</span>, <span class="string">''</span>, transform=ax.transAxes)</span><br><span class="line">loop_osci_text = ax.text(<span class="number">0.02</span>, <span class="number">0.5</span>, <span class="string">''</span>, transform=ax.transAxes)</span><br><span class="line">line_cir, = ax.plot(x_cir, y_cir, <span class="string">'--'</span>, label=<span class="string">'Circle Half'</span>)</span><br><span class="line"><span class="comment"># initialization function: plot the background of each frame</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line">    line_accu.set_data([], [])</span><br><span class="line">    line_osci.set_data([], [])</span><br><span class="line">    theta_accu_text.set_text(<span class="string">''</span>)</span><br><span class="line">    theta_osci_text.set_text(<span class="string">''</span>)</span><br><span class="line">    loop_accu_text.set_text(<span class="string">''</span>)</span><br><span class="line">    loop_osci_text.set_text(<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> line_accu, line_osci, theta_accu_text, theta_osci_text, loop_accu_text, loop_osci_text,</span><br><span class="line"></span><br><span class="line"><span class="comment"># animation function.  This is called sequentially</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">animate</span>(<span class="params">i</span>):</span><br><span class="line">    x_accu_mat = [<span class="number">0</span>, x_accu[i]]</span><br><span class="line">    y_accu_mat = [<span class="number">0</span>, y_accu[i]]</span><br><span class="line">    x_osci_mat = [<span class="number">0</span>, x_osci[i]]</span><br><span class="line">    y_osci_mat = [<span class="number">0</span>, y_osci[i]]</span><br><span class="line">    line_accu.set_data(x_accu_mat, y_accu_mat)</span><br><span class="line">    line_osci.set_data(x_osci_mat, y_osci_mat)</span><br><span class="line">    theta_accu_text.set_text(</span><br><span class="line">        <span class="string">'$ \Theta_{accu} $ = %.2f $^o $'</span> % theta_accu_degree[i])</span><br><span class="line">    theta_osci_text.set_text(</span><br><span class="line">        <span class="string">'$ \Theta_{osci} $ = %.2f $^o $'</span> % theta_osci_degree[i])</span><br><span class="line">    loop_accu_text.set_text(<span class="string">'loop accu=%.1d'</span> % count_accu[i])</span><br><span class="line">    loop_osci_text.set_text(<span class="string">'loop osci=%.1d'</span> % count_osci[i])</span><br><span class="line">    <span class="keyword">return</span> line_accu, line_osci, theta_accu_text, theta_osci_text, loop_accu_text, loop_osci_text,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># call the animator.  blit=True means only re-draw the parts that have changed.</span></span><br><span class="line">anim = animation.FuncAnimation(fig, animate, init_func=init,</span><br><span class="line">                               frames=numt, interval=<span class="number">10</span>, blit=<span class="literal">False</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'best'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'X Direction (m)'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y Direction (m)'</span>)</span><br><span class="line">ax.text(<span class="number">0.02</span>, <span class="number">0.02</span>, <span class="string">'g = %.2f m/s'</span> % g, transform=ax.transAxes)</span><br><span class="line">ax.text(<span class="number">0.32</span>, <span class="number">0.02</span>, <span class="string">'R = %.1f m'</span> % R, transform=ax.transAxes)</span><br><span class="line">ax.text(<span class="number">0.62</span>, <span class="number">0.02</span>, <span class="string">'$\Theta_{0}$ = %.1d$^o $'</span> %</span><br><span class="line">        theta_0_degree, transform=ax.transAxes)</span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line">anim.save(<span class="string">"Ball_1.gif"</span>, writer=<span class="string">'pillow'</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use COMSOL, MATLAB and COMSOL livelink with MATLAB on Server</title>
      <link href="/2019/07/06/A_En_How_To_Use_COMSOL_LiveLink_With_MATLAB/"/>
      <url>/2019/07/06/A_En_How_To_Use_COMSOL_LiveLink_With_MATLAB/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-COMSOL-Livelink-Server"><a href="#MATLAB-COMSOL-Livelink-Server" class="headerlink" title="MATLAB #COMSOL #Livelink #Server"></a>MATLAB #COMSOL #Livelink #Server</h1><p>[TOC]</p><p>This note is to show the way of using MATLAB, COMSOL,COMSOL Livelink With MATLAB on our server   (ubuntu). We hope that we can run them with bash code in background and after we logout or exit the server the simulations will continue. We also need to know the simulation progress from a log file. These needs can all be satisfied only if you write proper bash code.</p><h2 id="Run-COMSOL-on-server"><a href="#Run-COMSOL-on-server" class="headerlink" title="Run COMSOL on server"></a>Run COMSOL on server</h2><p>If you want to run COMSOL on server, you can use the command of the following form</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile &lt;inputfilename&gt; -outputfile &lt;outputfilename&gt; -batchlog &lt;logfilename&gt; -np &lt;number of cores&gt; &amp;</span><br></pre></td></tr></table></figure><p>above command shows the smallest example and  the “&lt; &gt;” isn’t included in the actual terminal command. The form <code>nohup &lt;command&gt; &amp;</code> is used to execute the command in the background even if we logout from the server. To avoid confusion, I give a more specific example, If we want to simulate the file “test.mph”, then the command should be as follows</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test.mph -outputfile test_out.mph -batchlog test.log -np 30 &amp;</span><br></pre></td></tr></table></figure><p>In above example we  use 30 cores (set with “-np 30”)to simulate our mph file. If we have many mph files to simulate, we can write a bash code to arrange our simulation works. We create a file with the name “comsolscript.sh” with the following content</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test1.mph -outputfile test1_out.mph -batchlog test1.log -np 30 &amp;&amp;</span><br><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test2.mph -outputfile test2_out.mph -batchlog test2.log -np 30 &amp;&amp;</span><br><span class="line"><span class="built_in">nohup</span> comsol batch -inputfile test3.mph -outputfile test3_out.mph -batchlog test3.log -np 30 &amp;</span><br></pre></td></tr></table></figure><p>Above code will simulate the file “test1.mph”, “test2.mph”, “test3.mph” respectively. The “&amp;&amp;” at the end of the line will let the server to execute the next command only when this command complete. if you use “&amp;” then all the mission will simultaneously execute. You need upload the “comsolscript.sh” file to the correct folder and make it executable</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x ./comsolscript.sh</span><br></pre></td></tr></table></figure><p>then in the corresponding folder type</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./comsolscript.sh</span><br></pre></td></tr></table></figure><p>The simulation will begin and you can see the progress from the log file by typing <code>vi test.log</code>.</p><p>If you write the bash code on windows then upload the file to the server, when you try to run the bash file there may be error: “<code>/bin/bash^M:bad interpreter:No such file or directory</code>“, this is because of the difference of coding in Unix and Windows. You can use the following command in the corresponding folder to fix it</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">./comsolscrpt.sh</span><br></pre></td></tr></table></figure><p>if you use vi on the server to create the bash file, this error can also be avoided.</p><h2 id="Run-MATLAB-on-server"><a href="#Run-MATLAB-on-server" class="headerlink" title="Run MATLAB on server"></a>Run MATLAB on server</h2><p>Before using the MATLAB on server, you need make sure that the matlab is in the system enviroment path. The method of adding the MATLAB path to the system enviroemnt can be found from my another note <a href="https://knifelees3.github.io/2020/01/01/C_%E6%95%99%E7%A8%8B_Ubuntu_%E5%AE%89%E8%A3%85COMSOL_MATLAB_FDTD%20Solutions/">Ubuntu安装COMSOL,MATLAB以及FDTD Solutions</a>.</p><p>If you want to run matlab without displaying the desktop, you can type</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">matlab -nodekstop -nosplash -nojvm</span><br></pre></td></tr></table></figure><p>If you want to run a file in the background, you can type the following command</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> matlab -nodesktop -nosplash -nojvm &lt;test.m&gt; progress.txt &amp;</span><br></pre></td></tr></table></figure><p><strong>Be carefuly that the <code>&lt;&gt;</code> is needed in MATLAB command!</strong> Above code run the  “test.m” in the background and save the screen display into the file “progress.txt”, so we can know the progress from the file. “-nojvm” is used to hide the plot progress if you don’t want to see the plot during the simulation. When the simulation meets some problems, there will be a “nohup.out”  file to show the error information.</p><p>A better choice is to use a bash file “matlabscript.sh” to run the corresponding MATLAB file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">matlab -nodesktop -nosplash -nojvm &lt;test1.m;test2.test3.m;<span class="built_in">exit</span>;&gt; progress.txt</span><br></pre></td></tr></table></figure><p>Above bash file doesn’t use the “nohup command &amp;” and it will not run in the background. If you want to run in the background, you can type</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./matlabscript.sh &amp;</span><br></pre></td></tr></table></figure><p>The “exit” is important and if not after the simulation the MATLAB will be still alive in the background, then you need kill the MATLAB by typing <code>kill &lt;pid of MATLAB progress&gt;</code>.</p><h2 id="Run-COMSOL-live-link-with-MATLAB-on-server"><a href="#Run-COMSOL-live-link-with-MATLAB-on-server" class="headerlink" title="Run COMSOL live link with MATLAB on server"></a>Run COMSOL live link with MATLAB on server</h2><p>The usage of COMSOL live link with MATLAB can be found on the installation folder of COMSOL, the detailed usage is in the file “LiveLinkForMATLABUsersGuide.pdf”.</p><p>If you can use the graphics window, then you can run a MATLAB file “test.m” to run a COMSOL file by typing</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comsol mphserver matlab <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>You can also run the script in batch without the MATLAB desktop and the MATLAB splash screen. Enter this command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comsol mphserver matlab <span class="built_in">test</span> -nodesktop -mlnosplash</span><br></pre></td></tr></table></figure><p>However, if you want to run the script in the background, you can not just simply add a “nohup+command+&amp;”, I don’t know the reason. From the “LiveLinkForMATLABUsersGuide.pdf”, we can see the following words</p><blockquote><p>To connect COMSOL with a MATLAB terminal requires that xterm is installed on the machine. If this is not the case as it might be for a computation COMSOL server, a workaround is to connect manually MATLAB to a COMSOL server with the function <em>mphstart</em>.</p></blockquote><p>After trying for a while I finally know how to run the COMSOL livelink with MATLAB in the background on server. We need to create four files named “matlab_exe.m”,”test.m”,”comsolscript.sh”,”test.mph”.</p><ul><li>“test.mph” is the COMSOL file you want to simulate.</li><li>“test.m” is the file to run “test.mph” from MATLAB.</li><li>“matlab_exe.m” is used to link the MATLAB with COMSOL mphserver and run the “test.m” file and finally exit MATLAB.</li><li>“comsolscript.sh” is the bash code to open the COMSOL mphserver and run the file “matlab_exe.m”<br>the following is the detailed code.</li></ul><p><strong>For “matlab_exe.m”</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% This code is to connect to the COMSOL livelink with MATLAB server</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% add the livelink path to the server for comsol5.4</span></span><br><span class="line">addpath(<span class="string">'/usr/local/comsol54/multiphysics/mli/'</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">% connect to the server, the default port number is 2036 and then 2037 ...</span></span><br><span class="line">mphstart(<span class="number">2036</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% the MATLAB file you want to run</span></span><br><span class="line">test;</span><br><span class="line"></span><br><span class="line"><span class="comment">% exit the program</span></span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><p><strong>For “comsolscript.sh”</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment"># if the run the file and getting the error "/bin/bash^M:bad interpreter:No such file or directory",you can use </span></span><br><span class="line"><span class="comment"># the following command in the corresponding cluster to fix it</span></span><br><span class="line"><span class="comment"># sed -i -e 's/\r$//' scriptname.sh</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># this is to run the MATLAB file in script</span></span><br><span class="line"><span class="comment"># First start the COMSOL livelink with MATLAB for 5.4</span></span><br><span class="line"><span class="comment"># use "np" to define the number of cores you will use</span></span><br><span class="line">comsol54 mphserver -np 28 -silent &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># run the MATLAB file</span></span><br><span class="line"><span class="comment"># The "screenout.txt" will store the screen output for MATLAB</span></span><br><span class="line">matlab -nodesktop -nosplash  &lt;matlab_exe.m&gt; screenout.txt</span><br></pre></td></tr></table></figure><p><strong>For “test.m”</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% save the COMSOLcprogress file as "COMSOL_Progress.txt" during simulations</span></span><br><span class="line">clear;clc;</span><br><span class="line">import com.comsol.model.*</span><br><span class="line">import com.comsol.model.util.*</span><br><span class="line">ModelUtil.showProgress(<span class="string">'COMSOL_Progress.txt'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% other command</span></span><br><span class="line"><span class="comment">%........</span></span><br></pre></td></tr></table></figure><h2 id="Updated-Run-COMSOL-live-link-with-MATLAB-on-server-II"><a href="#Updated-Run-COMSOL-live-link-with-MATLAB-on-server-II" class="headerlink" title="Updated: Run COMSOL live link with MATLAB on server II"></a>Updated: Run COMSOL live link with MATLAB on server II</h2><p>The previous method needs four files which  seems too complicated. Actually we can just use three files, the matlab_exe.m can be casted into MATLAB files.</p><ul><li>“test.mph” is the COMSOL file you want to simulate.</li><li>“test.m” is the file to run “test.mph” from MATLAB.</li><li>“comsolscript.sh” is the bash code to open the COMSOL mphserver and run the file “matlab_exe.m”<br>the following is the detailed code.</li></ul><p><strong>For “matlab_exe.m”</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% This code is to connect to the COMSOL livelink with MATLAB server</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% add the livelink path to the server for comsol5.4</span></span><br><span class="line">addpath(<span class="string">'/usr/local/comsol54/multiphysics/mli/'</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">% connect to the server, the default port number is 2036 and then 2037 ...</span></span><br><span class="line">mphstart(<span class="number">2036</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">% the MATLAB file you want to run</span></span><br><span class="line">test;</span><br><span class="line"></span><br><span class="line"><span class="comment">% exit the program</span></span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><p><strong>For “comsolscript.sh”</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment"># if the run the file and getting the error "/bin/bash^M:bad interpreter:No such file or directory",you can use </span></span><br><span class="line"><span class="comment"># the following command in the corresponding cluster to fix it</span></span><br><span class="line"><span class="comment"># sed -i -e 's/\r$//' scriptname.sh</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># this is to run the MATLAB file in script</span></span><br><span class="line"><span class="comment"># First start the COMSOL livelink with MATLAB for 5.4</span></span><br><span class="line"><span class="comment"># use "np" to define the number of cores you will use</span></span><br><span class="line">comsol54 mphserver -np 28 -silent &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># run the MATLAB file</span></span><br><span class="line"><span class="comment"># The "screenout.txt" will store the screen output for MATLAB</span></span><br><span class="line">matlab -nodesktop -nosplash  &lt;matlab_exe.m&gt; screenout.txt</span><br></pre></td></tr></table></figure><p><strong>For “test.m”</strong></p><p>```matlab<br>% This code is to connect to the COMSOL livelink with MATLAB server</p><p>% add the livelink path to the server for comsol5.4<br>addpath(‘/usr/local/comsol54/multiphysics/mli/‘); </p><p>% connect to the server, the default port number is 2036 and then 2037 …<br>mphstart(2036)</p><p>% save the COMSOLcprogress file as “COMSOL_Progress.txt” during simulations<br>clear;clc;<br>import com.comsol.model.<em><br>import com.comsol.model.util.</em><br>ModelUtil.showProgress(‘COMSOL_Progress.txt’);</p><p>% other command<br>%……..</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> COMSOL </tag>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APS用RevTex投稿全记录</title>
      <link href="/2019/07/02/C_%E6%95%99%E7%A8%8B_%E7%94%A8RevTex%E6%8A%95%E7%A8%BFAPS%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/07/02/C_%E6%95%99%E7%A8%8B_%E7%94%A8RevTex%E6%8A%95%E7%A8%BFAPS%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="APS"><a href="#APS" class="headerlink" title="APS"></a>APS</h1><p>本笔记详细技术了如何用latex写一篇论文并投稿。在准备论文的时候，需要用到的软件有</p><ul><li><a href="https://www.tug.org/texlive/">Texlive</a> ，用来编译Latex。</li><li><a href="https://journals.aps.org/revtex">RevTex</a>，APS官方写作包，对于Texlive，一般都会默认安装有Texlive，只是不是最新版的。</li><li>Latex编辑器，我比较推荐Texstudio,或者Sublime或者Vs code等。</li><li>文献管理软件，我比较推荐Endnote以及Mendeley,文献管理软件很多，找一个适合自己的，我自己用的是Endnote。</li></ul><p>当然，实际准备论文时候，还需要准备论文绘图，绘制数据图的时候，我使用了MATLAB和python一起来绘制的，二者都不能完全相互替代。绘制示意图时，用到了Corel draw绘制二维矢量图，Blender绘制三维图。</p><h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><p>在准备阶段，需要安装一系列软件。每个人用的软件可能会有区别，比如写latex我喜欢用sublime来书写，其在插入文献的时候有其他软件无法比拟的功能。我在此以我用的软件为例，写一下准备一篇文章需要经过哪些步骤。</p><ul><li><p>安装texlive2018： 用来编译latex文件</p></li><li><p>安装编辑器， 用来书写文章。</p><ul><li>推荐TexStudio,不需要过多配置。</li><li>或者安装sublime并且配置好相关的插件：</li><li>或者按照Vscode并且配置好相关插件。</li></ul></li><li><p>文献管理：</p><ul><li>安装Endnote： 用来管理文献、插入文献、导出文献</li><li>如果使用Texstudio，则需要Jabref软件来配合插入文献</li><li></li></ul></li></ul><h2 id="更新Revtex"><a href="#更新Revtex" class="headerlink" title="更新Revtex"></a>更新Revtex</h2><p>Texlive2016 默认安装了revtex4.1，你也可以更新到最新版，从这里下载<a href="https://journals.aps.org/revtex">RevTex</a></p><blockquote><p>The REVTeX 4.2 may be downloaded directly from here as revtex4-2-tds.zip. REVTeX 4.2 is also available on CTAN.<br>To install REVTeX 4.2, unzip the revtex4-2-tds.zip file. This zip file contains all of the files in the REVTeX 4.2 distribution in the standard “TeX Directory Structure” (TDS) layout. The files can be copied directly in the local tree of your TeX distribution (for TeX Live, this would be in the texmf-local directory).</p></blockquote><p>下载下来的文件有一些是包文件，还有一些doc文件，是一些使用示例。你可以将文件现在下来之后，安装<a href="https://www.cnblogs.com/yfjack/p/4639185.html">如下方式</a>安装</p><blockquote><p>直接拷贝从网上下载的模板里带的后缀名为.cls,.sty的文件到texlive的安装目录下：<br>D:\texlive\2014\texmf-dist\tex\latex<br>然后，再在命令行输入：texhash 命令即可完成安装,如下图所示。</p></blockquote><p><code>texhash</code>是更新数据库的命令，也可以用Latex Manager来更新，点操作之后有一个更新选项。</p><p>更新数据库<a href="https://www.dickimaw-books.com/latex/novices/html/texhash.html">Refreshing the TeX Database</a></p><h2 id="用Endenote建立文献库并且导出"><a href="#用Endenote建立文献库并且导出" class="headerlink" title="用Endenote建立文献库并且导出"></a>用Endenote建立文献库并且导出</h2><p>我们需要用Endnote来将自己阅读的文献进行整理、分类、命名，这样自己平时阅读的时候 比较方便，需要用到的时候，也可以快速的提取到。具体Endnote使用，可以参见我的另外一个博客：</p><p>最终确定要插入哪些文献以后，需要将要插入的文献，导出为bibtex格式，具体做法为，选择“output style”为”export bibtex”,然后带格式的复制对应的参考文献，新建一个名为“reference.bib”的文件，粘贴复制的内容到该文件即可，其文件的内容一般如下：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@article{RN24,</span><br><span class="line">   author = {Bradford, Matthew and Shen, Jung-Tsung},</span><br><span class="line">   title = {Single-photon frequency conversion by exploiting quantum interference},</span><br><span class="line">   journal = {Physical Review A},</span><br><span class="line">   volume = {85},</span><br><span class="line">   number = {4},</span><br><span class="line">   ISSN = {1050-2947</span><br><span class="line">1094-1622},</span><br><span class="line">   DOI = {10.1103/PhysRevA.85.043814},</span><br><span class="line">   year = {2012},</span><br><span class="line">   type = {Journal Article}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@article{RN25,</span><br><span class="line">   author = {Bradford, Matthew and Shen, Jung-Tsung},</span><br><span class="line">   title = {Spontaneous emission in cavity QED with a terminated waveguide},</span><br><span class="line">   journal = {Physical Review A},</span><br><span class="line">   volume = {87},</span><br><span class="line">   number = {6},</span><br><span class="line">   ISSN = {1050-2947</span><br><span class="line">1094-1622},</span><br><span class="line">   DOI = {10.1103/PhysRevA.87.063830},</span><br><span class="line">   year = {2013},</span><br><span class="line">   type = {Journal Article}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>内容包含了作者、杂志、期刊号等，是一些基本的格式。</p><h2 id="文章示例"><a href="#文章示例" class="headerlink" title="文章示例"></a>文章示例</h2><p>投稿时，需要用到APS的官方revtex的包，我们安装的texlive默认就安装了该包，不用再额外的安装了。我们一般的文章的一个例子如下：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%\documentclass[aps,prl,reprint,superscriptaddress,showpacs]{revtex4-1}</span></span><br><span class="line"><span class="keyword">\documentclass</span>[<span class="comment">%</span></span><br><span class="line">reprint, <span class="comment">%preprint, twocolumn% 其中reprint提供双栏最接近出版论文的格式，preprint显示的字体和行距则相对大一些，是方便审稿人将论文打印出来仔细阅读的，twocolumn选项与此类似。</span></span><br><span class="line">superscriptaddress, <span class="comment">%groupedaddress,% 现在通用是前一种作者名录格式，这样在显示多个作者或者一个作者从属于多个机构时比较紧凑方便。</span></span><br><span class="line">showpacs,<span class="comment">% 显示PACS代码</span></span><br><span class="line">amsmath, amssymb, <span class="comment">%都是用于显示数学公式环境</span></span><br><span class="line">aps, <span class="comment">%这个是指APS风格，另一个可选项应该是AIP</span></span><br><span class="line">prl,<span class="comment">%pra, prb, rmp, % 这里是对不同期刊的选择</span></span><br><span class="line">]{revtex4-1}<span class="comment">% 这个格式就是APS对应的latex文档格式</span></span><br><span class="line"><span class="keyword">\usepackage</span>{graphicx}<span class="comment">% Include figure files</span></span><br><span class="line"><span class="keyword">\usepackage</span>{dcolumn}<span class="comment">% Align table columns on decimal point</span></span><br><span class="line"><span class="keyword">\usepackage</span>{bm}<span class="comment">% bold math</span></span><br><span class="line"><span class="keyword">\usepackage</span>{natbib}<span class="comment">%to cite</span></span><br><span class="line"><span class="keyword">\usepackage</span>{hyperref}<span class="comment">% add hypertext capabilities</span></span><br><span class="line"><span class="keyword">\usepackage</span>{float}</span><br><span class="line"><span class="comment">%\usepackage{stix}</span></span><br><span class="line"><span class="keyword">\usepackage</span>{mathrsfs}<span class="comment">%花体的插入方法</span></span><br><span class="line"><span class="keyword">\hypersetup</span>{colorlinks=true, citecolor=blue, urlcolor=blue, linkcolor=blue}</span><br><span class="line"><span class="keyword">\bibliographystyle</span>{apsrev4-1.bst}<span class="comment">% 注意这个.bst风格文件是需要从官网单独下载的，可以控制文章末尾参考文献的现实风格。下载之后放到工作目录下即可(即.tex文档所在的目录)</span></span><br><span class="line"><span class="keyword">\begin</span>{document}</span><br><span class="line"><span class="keyword">\title</span>{Quantum Photonic Node for On-Chip State Transfer}<span class="comment">% Force line breaks with \\</span></span><br><span class="line"><span class="comment">%\thanks{A footnote to the article title}%</span></span><br><span class="line"><span class="keyword">\author</span>{Youself}<span class="comment">% You, the writer of this paper. 第一作者</span></span><br><span class="line"><span class="comment">%\noaltaffiliation</span></span><br><span class="line"><span class="comment">%\altaffiliation{School of Physics, Huazhong University of Science and Technology, Luoyu Road 1037, Wuhan, 430074, People’s Republic of China}</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\author</span>{Xiao Ming}<span class="comment">% Boss with communication email 通讯作者，注意这里的Email一定要放在通讯作者后的第一个位置，这样邮箱地址的链接才会正确显示。</span></span><br><span class="line"><span class="keyword">\email</span>{12345678@gmail.com}</span><br><span class="line"><span class="comment">%\affiliation{School of Physics, Huazhong University of Science and Technology, Luoyu Road 1037, Wuhan, 430074, People’s Republic of China}</span></span><br><span class="line"><span class="keyword">\author</span>{Leehoom Wang} <span class="comment">% Boss with communication email 通讯作者，注意这里的Email一定要放在通讯作者后的第一个位置，这样邮箱地址的链接才会正确显示。</span></span><br><span class="line"><span class="keyword">\email</span>{Leehoom<span class="built_in">_</span>wang@gmail.com}</span><br><span class="line"><span class="comment">%\homepage{http://www.Second.institution.edu/~Charlie.Author}</span></span><br><span class="line"><span class="keyword">\affiliation</span>{School of Physics, Huazhong University of Science and Technology, Luoyu Road 1037, Wuhan, 430074, People’s Republic of China}<span class="comment">%</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\date</span>{<span class="keyword">\today</span>}<span class="comment">%This date can be changed.</span></span><br><span class="line"><span class="keyword">\begin</span>{abstract}<span class="comment">% 摘要</span></span><br><span class="line">This is abstract This is abstract This is abstract This is abstract This is abstractThis is abstract This is abstract  </span><br><span class="line"><span class="keyword">\end</span>{abstract}</span><br><span class="line"><span class="keyword">\pacs</span>{42.50.Ct, 42.50.Ex, 42.50.Pq, 42.79.Gn}<span class="comment">% PACS, the Physics and Astronomy</span></span><br><span class="line"><span class="comment">%\keywords{Suggested keywords}% Not always required.</span></span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>{acknowledgments}</span><br><span class="line">This is acknowledgments This is acknowledgments This is acknowledgments This is acknowledgments This is acknowledgments This is acknowledgments This is acknowledgments </span><br><span class="line"><span class="keyword">\end</span>{acknowledgments}</span><br><span class="line"></span><br><span class="line"><span class="keyword">\bibliographystyle</span>{apsrev4-1}</span><br><span class="line"><span class="keyword">\bibliography</span>{reference.bib} <span class="comment">% The reference file name</span></span><br><span class="line"><span class="keyword">\end</span>{document}</span><br></pre></td></tr></table></figure><h2 id="如何插入文献"><a href="#如何插入文献" class="headerlink" title="如何插入文献"></a>如何插入文献</h2><p>写文章非常重要的一个部分就是插入文献。在word中插入文献，只需要安装好endnote之后，即可一</p><h2 id="一些Bug记录"><a href="#一些Bug记录" class="headerlink" title="一些Bug记录"></a>一些Bug记录</h2><p>用Revtex包的时候，如果用了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\usepackage{pdfsync}</span><br></pre></td></tr></table></figure><br>就会导致参考文献老是有一个空行。</p><p>另外还会导致用revtex4-1编译的时候摘要单独搞一页。</p><p>2024 08 17</p><p>投稿JOSAB的时候，补充材料上传了一直打不开，其实是编译有问题，但是本地一般不会显示。</p><p>此时需要将投稿文件，上传到Overleaf，然后检查哪里编译有问题。常见问题包括：</p><ul><li>reference的bib文件，重复的有几个相同的文献以及citation key，会报错。</li><li>注意参考文献的 标题，不能有特殊字符</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学术 </tag>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux设置远程桌面连接</title>
      <link href="/2019/06/26/C_%E6%95%99%E7%A8%8B_Ubuntu_%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/"/>
      <url>/2019/06/26/C_%E6%95%99%E7%A8%8B_Ubuntu_%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu-RemoteDesktop"><a href="#Ubuntu-RemoteDesktop" class="headerlink" title="Ubuntu #RemoteDesktop"></a>Ubuntu #RemoteDesktop</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本篇笔记记述了如何在Ubuntu上面配置好xrdp，并且通过windows或者Ubuntu访问。这种方法对于访问linux服务器比Teamviewer要好用，登录后借助于第三方桌面系统，虚拟了一个桌面出来，所以与原来的ubuntu桌面是不一样的，能够满足我们偶尔连接一下，进行少量的图形桌面操作。对于原理讲的比较清楚的是下面这篇博文<br><a href="https://www.linuxidc.com/Linux/2017-09/147112.htm">https://www.linuxidc.com/Linux/2017-09/147112.htm</a><br>我在自己的电脑ubuntu 16.04以及另外一台服务器ubuntu 18.04上面分别试验了一下，方法有所区别。</p><ol><li>18.04的配置方法：</li></ol><p><a href="https://baijiahao.baidu.com/s?id=1619271691270163095&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1619271691270163095&amp;wfr=spider&amp;for=pc</a></p><p>按照上面这篇博文的方法一步步的做就可以，不做过多说明。</p><ol><li>16.04的配置方法</li></ol><p><a href="https://www.linuxidc.com/Linux/2017-09/147112.htm">https://www.linuxidc.com/Linux/2017-09/147112.htm</a><br><a href="https://www.cnblogs.com/zeze/p/8416448.html">https://www.cnblogs.com/zeze/p/8416448.html</a><br><a href="https://www.bnxb.com/linuxserver/27460.html">https://www.bnxb.com/linuxserver/27460.html</a></p><h2 id="具体配置方法"><a href="#具体配置方法" class="headerlink" title="具体配置方法"></a>具体配置方法</h2><h3 id="Ubuntu16-04与18-04相同的部分"><a href="#Ubuntu16-04与18-04相同的部分" class="headerlink" title="Ubuntu16.04与18.04相同的部分"></a>Ubuntu16.04与18.04相同的部分</h3><p>首先是开启远程访问的权限，在Ubuntu打开Desktop sharing(桌面共享)设置如下勾选：</p><p>Sharing: 全部勾选<br>Security: 勾选 Automatically configure……<br>Show Notification Area Icon: 勾选 Only when someone is……</p><p>然后是安装相应的软件，命令都一样，依次输入以下命令安装：<br>安装tightvncserver，安装xrdp，安装xubuntu-desktop</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install tightvncserver</span><br><span class="line">sudo apt-get install xrdp -y </span><br><span class="line">sudo apt-get install xubuntu-desktop</span><br></pre></td></tr></table></figure><p>更改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> unity&gt;~/.xsession </span><br></pre></td></tr></table></figure><h3 id="Ubuntu16-04与18-04不相同的部分"><a href="#Ubuntu16-04与18-04不相同的部分" class="headerlink" title="Ubuntu16.04与18.04不相同的部分"></a>Ubuntu16.04与18.04不相同的部分</h3><h4 id="对于16-04"><a href="#对于16-04" class="headerlink" title="对于16.04"></a>对于16.04</h4><p>更改startwm.sh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo subl  /etc/xrdp/startwm.sh</span><br></pre></td></tr></table></figure><p>在’. /etc/X11/Xsession’前面输入’xfce4-session’，最后文件内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -r /etc/default/locale ]; <span class="keyword">then</span></span><br><span class="line">  . /etc/default/locale</span><br><span class="line">  <span class="built_in">export</span> LANG LANGUAGE</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">xfce4-session <span class="comment">#在此处添加</span></span><br><span class="line">. /etc/X11/Xsession</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service xrdp restart  </span><br></pre></td></tr></table></figure><h4 id="对于Ubuntu18-04"><a href="#对于Ubuntu18-04" class="headerlink" title="对于Ubuntu18.04"></a>对于Ubuntu18.04</h4><p>更改startwm.sh文件，但是与Ubuntu16.04的文件不太一样，是在‘test -x /etc/X11/Xsession &amp;&amp; exec /etc/X11/Xsession’这一句前面添加’xfce4-session’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># xrdp X session start script (c) 2015, 2017 mirabilos</span></span><br><span class="line"><span class="comment"># published under The MirOS Licence</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -r /etc/profile; <span class="keyword">then</span></span><br><span class="line">        . /etc/profile</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -r /etc/default/locale; <span class="keyword">then</span></span><br><span class="line">        . /etc/default/locale</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LANG+x}</span>"</span> || <span class="built_in">export</span> LANG</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LANGUAGE+x}</span>"</span> || <span class="built_in">export</span> LANGUAGE</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_ADDRESS+x}</span>"</span> || <span class="built_in">export</span> LC_ADDRESS</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_ALL+x}</span>"</span> || <span class="built_in">export</span> LC_ALL</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_COLLATE+x}</span>"</span> || <span class="built_in">export</span> LC_COLLATE</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_CTYPE+x}</span>"</span> || <span class="built_in">export</span> LC_CTYPE</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_IDENTIFICATION+x}</span>"</span> || <span class="built_in">export</span> LC_IDENTIFICATION</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_MEASUREMENT+x}</span>"</span> || <span class="built_in">export</span> LC_MEASUREMENT</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_MESSAGES+x}</span>"</span> || <span class="built_in">export</span> LC_MESSAGES</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_MONETARY+x}</span>"</span> || <span class="built_in">export</span> LC_MONETARY</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_NAME+x}</span>"</span> || <span class="built_in">export</span> LC_NAME</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_NUMERIC+x}</span>"</span> || <span class="built_in">export</span> LC_NUMERIC</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_PAPER+x}</span>"</span> || <span class="built_in">export</span> LC_PAPER</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_TELEPHONE+x}</span>"</span> || <span class="built_in">export</span> LC_TELEPHONE</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LC_TIME+x}</span>"</span> || <span class="built_in">export</span> LC_TIME</span><br><span class="line">        <span class="built_in">test</span> -z <span class="string">"<span class="variable">${LOCPATH+x}</span>"</span> || <span class="built_in">export</span> LOCPATH</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -r /etc/profile; <span class="keyword">then</span></span><br><span class="line">        . /etc/profile</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">xfec4-session <span class="comment">#在此处添加</span></span><br><span class="line"><span class="built_in">test</span> -x /etc/X11/Xsession &amp;&amp; <span class="built_in">exec</span> /etc/X11/Xsession</span><br><span class="line"><span class="built_in">exec</span> /bin/sh /etc/X11/Xsession</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart xrdp.service  </span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>具体使用时，我们可以在windows和linux上面使用远程桌面。方法也有区别</p><ol><li>Windows上的使用</li></ol><p>直接打开windows的远程桌面连接软件，win+r健启动后输入：mstsc命令执行，输入对应的ip地址，进去之后需要再输入用户名和密码，并且连接的方式有区别。16.04的方法是‘sesman-Xvnc’,18.04是‘Xorg’，都使用默认的就好，不用自己改。</p><ol><li>Ubuntu上的使用</li></ol><p>需要安装一个软件Remmina,一般ubuntu默认就有，没有的话安装一下就好（sudo apt install remmina）。同样的输入ip地址、用户名、密码即可访问。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li><p>具体使用时，有时候会有bug，比如我连接18.04时没办法调出命令行，这个时候可以点击桌面左上角的application&gt;terminal emulator即可，或者找另外的terminal也行，比如xterm-terminal等，都在application列表里面。</p></li><li><p>这种连接方式在你退出软件之后，不会断开登录，你打开的桌面还会继续存在下去，如果要退出登录，点击右上角的用户名之后，点’logout’即可。</p></li></ol><h1 id="固定ip地址的方法"><a href="#固定ip地址的方法" class="headerlink" title="固定ip地址的方法"></a>固定ip地址的方法</h1><p>将申请到的ip信息在自己的系统上更改即可，更改有两种方式，一种是在图形界面更改，点击Ubuntu对应的网络设置，注意<em>网口的mac地址要与申请的ip所用的mac地址相符合</em>。另外一种方法就是按照下面的一些教程来改，我没有自己亲自试过。</p><p><a href="https://www.jb51.net/article/143115.htm">https://www.jb51.net/article/143115.htm</a><br><a href="https://blog.csdn.net/qq_36937342/article/details/80876385">https://blog.csdn.net/qq_36937342/article/details/80876385</a><br><a href="https://blog.csdn.net/qq_43483975/article/details/89597371">https://blog.csdn.net/qq_43483975/article/details/89597371</a></p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>这种借助于windows自带远程桌面软件的方式，也可以用来在一台windows控制另外一台windows,体验可能比teamviewer差一点，延迟、缩放什么的会有小问题，特别是在两个windows屏幕大小不一样的情况下。另外一个缺点就是一些软件比如MATLAB你在远程是没有办法启动的，因为一般MATLAB等软件的破解都是选择的非server版本的licsence。这时候需要用比如teamview来首先启动MATLAB，再用远程桌面连接。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EndNote文献管理总结</title>
      <link href="/2019/05/16/C_%E6%95%99%E7%A8%8B_EndNote%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86%E6%80%BB%E7%BB%93/"/>
      <url>/2019/05/16/C_%E6%95%99%E7%A8%8B_EndNote%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Endnote-Reference"><a href="#Endnote-Reference" class="headerlink" title="Endnote #Reference"></a>Endnote #Reference</h1><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>​    对于搞科研的人来说，有很大一部分时间都花在读文献上，做不同的课题时，会收集相当数量的文献，如果可以高效的管理文献，将会对科研工作大有裨益。文献管理可以分为两种，一种是通过文件夹来管理，需要自己花额外大的事件来命名文件，比如作者、期刊、年份、卷号，有时候还想加上题目，文献很多时，会非常麻烦。我曾经也是用这种方法来管理文献，现在也没有完全舍弃。第二种方法是采用文献管理软件，用软件对文献进行分类保存。目前市面上的软件也是五花八门，比如大名鼎鼎的“Endnote”,免费的“Mendeley”,”Zotero”,“Docear”,”Papers”,以及最近比较火的“Citavi”,可以参考该<a href="https://www.zhihu.com/search?type=content&amp;q=%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86">讨论</a><br>​    我目前只用过Endnote、Mendeley以及短暂用过一点Citavi,最后选择了Endnote,本来前期很喜欢Mendeley，全平台支持，界面友好。因为课题组的人要统一工具，便于分享，最后用上了Endnote,果然是商业软件，用起来还是非常靠谱的。在自己准备第一篇文章的时候，慢慢的摸索查资料，逐渐知道了怎么用Endnote管理文献并且配合word以及latex工具去写一篇paper。为了防止自己忘记，写一篇note来总结记录下。</p><h1 id="如何用Endnote建立自己的文献库"><a href="#如何用Endnote建立自己的文献库" class="headerlink" title="如何用Endnote建立自己的文献库"></a>如何用Endnote建立自己的文献库</h1><p>Endnote与其他的文献管理软件的不同点在于，它的文献管理操作都是基于Library，每一个library都会链接一个同文件目录下data文件夹，library包含所有文献的关键信息。而data是一些附加的数据，比如pdf文件。</p><h2 id="创建Library"><a href="#创建Library" class="headerlink" title="创建Library:"></a>创建Library:</h2><p>建立自己的文献库第一步就是，建立一个library，命名好library的名字，选择好存放位置。有了这样一个library之后，就可以添加文献进来了。</p><h2 id="导入文献："><a href="#导入文献：" class="headerlink" title="导入文献："></a>导入文献：</h2><p>导入文献的方式有两种，一种是直接导入pdf文件，Endnote对大部分期刊的杂志的都能够比较准确高效的提取信息,部分期刊如nature、arxiv则不能，因为其卷号、期刊号不是很容易从pdf读取出来，这时候需要手动补充好一些期刊信息，很容易输入错误。另外一种方法就是直接导入ris文件，一般期刊都会直接提供ris文件引用信息供下载，也可以用google学术下载(google学术搜索到以后，点击那个引号就可以)，这种方法的缺点是导入之后，还需要手动给该文献附加pdf文件。</p><h2 id="文献分组"><a href="#文献分组" class="headerlink" title="文献分组"></a>文献分组</h2><p>为了便于查看，自己可以添加不同的group，用来对特定的project的文献进一步管理，就像有子文件夹一样，支持拖动。</p><h2 id="文献标注"><a href="#文献标注" class="headerlink" title="文献标注"></a>文献标注</h2><p>Endnote的主要功能是管理，只支持一些基本的操作，可以对pdf做批注、给不同文献排一个重要性的序等。批注时批注功能是由你系统默认代开的pdf阅读器来决定的，如果默认是sumatra pdf打开，则完全没有批注功能。</p><h1 id="如何从word导入文献"><a href="#如何从word导入文献" class="headerlink" title="如何从word导入文献"></a>如何从word导入文献</h1><p>如果你是用word来写作并投稿，那么安装好Endnote之后，就可以直接插入了，插入的方式有两种：</p><ol><li>直接再你要插入文献的地方，点菜单栏的<em>Endnote</em>的，然后点击<em>insert citation</em>，就会弹出一个endnote的插入文献的框，输入文献的关键字就会出现相应的文件，双击就可以了。</li><li>word保持打开并且游标位于你要插入文献的位置，直接打开endnote，选中你要插入的文献，点击上方的那个双引号图标，就会将你选中的文献插入进去。</li></ol><h1 id="如何从latex导入文献"><a href="#如何从latex导入文献" class="headerlink" title="如何从latex导入文献"></a>如何从latex导入文献</h1><p>如果你是用latex写作投稿，那么你需要将你要引用的文献，在Endnote里面导出为txt文件，格式选择为bibtex格式，导出后将后缀名改为bib，就有了你想要的bib文件，可以直接在latex中引用了。<br><em>此方法的缺点</em>：在有一些特殊字符（如德文）的情况下，此方法导出的txt文件字符会变成乱码。这时候推荐你自己去文献源文章下载bibtex文件，拷贝内容到bib文件中即可。</p><h1 id="如何给别人分享你的文献库"><a href="#如何给别人分享你的文献库" class="headerlink" title="如何给别人分享你的文献库"></a>如何给别人分享你的文献库</h1><p>Endnote一个很重要的功能是可以比较方便的分享自己文献，每一个文献库有一个“enl”文件以及一个同名的data源文件夹构成，将文件夹和enl文件一起打包传输给别人，就可以将自己的文献分享给别人了。</p><h1 id="如何更改引用的样式-citation-style"><a href="#如何更改引用的样式-citation-style" class="headerlink" title="如何更改引用的样式(citation style)"></a>如何更改引用的样式(citation style)</h1><p>如果更改引用的样式，比如bibtex，比如APS旗下的Phys. Rev. Lett. 需要点击edit&gt;output styles,选择你想要的样式，<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-01-17.png" alt="选择特定的引用样式"></p><p>如果展示的样式没有你想要的，点击edit&gt;output styles&gt;open style manager,有更多丰富的选择<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-01-53.png" alt="在mannager有更丰富的选择"></p><p>如果还是没有，可以点击get more on the web, 从<a href="http://endnote.com/support/enstyles.asp">官网</a>搜索下载。然后将下载的文件复制到安装文件夹的style目录，我的是“C:\Program Files (x86)\EndNote X9\Styles”。</p><p>也可以双击style文件,点击file&gt;save 就将style保存到对应目录了。</p><h1 id="如何添加缩写（Abbreviation）"><a href="#如何添加缩写（Abbreviation）" class="headerlink" title="如何添加缩写（Abbreviation）"></a>如何添加缩写（Abbreviation）</h1><p>通过pdf添加的文献信息的杂志名字是一个全名，比如physical review letters,一般文章投稿都需要写成简写，可以从<a href="https://cassi.cas.org/search.jsp">CASSI</a>查看标准杂志的缩写。要添加更改缩写，点击tool&gt;open term list&gt;journal term list,</p><p><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-13-32.png" alt="Term List"></p><p>可以为不同的文献添加多个缩写，比如我为Optics Letters添加的第一个缩写： Opt. Lett.<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-15-35.png" alt="示例"></p><p>这样还不够，还需要到对应的应用样式里面将style的缩写选成你想要的。点击edit&gt;output styles&gt;open style manager,选中你要更改的样式，邮件edit style,选中journal name,默认是全名，你可以选择你刚才定义的缩写。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-19-47.png" alt="重新定义缩写"></p><h1 id="巧用web-of-science"><a href="#巧用web-of-science" class="headerlink" title="巧用web of science"></a>巧用web of science</h1><p>我们搜索文献除了可以去google学术，google, 以及对应期刊搜索外，还可以去web of science搜索，而endnote支持web of science搜索并下载全文，点击online search<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-34-37.png" alt="online search"></p><p>然后选择对应的库，我选择的是web of science core,点choose<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-36-23.png" alt="库选择"></p><p>就会有一个搜索框出来，和在本地搜索一样，可以按照标题、杂志、作者等搜索，一般按照作者搜索结果会特别多，推荐按照文章名字搜索，<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/search_web_of_science.gif" alt="搜索示例"><br>然后选中自己要的文献，添加到自己的group即可，<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-47-10.png" alt="添加到group"><br>此时只是有了对应的文件信息，如果想要pdf文件，不需要再去手动下载，只需要选中刚才添加的文献，右键find fulltext,过一会儿就会发现pdf文件已经下载下来了。<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/Snipaste_2019-12-25_14-48-41.png" alt="查找全文"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EndNote </tag>
            
            <tag> 文献管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows python 环境配置</title>
      <link href="/2019/04/25/C_%E6%95%99%E7%A8%8B_Python_Windowns%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/04/25/C_%E6%95%99%E7%A8%8B_Python_Windowns%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>python在ubuntu的安装比较简单，我装的是Anaconda3, 然后设置环境变量就可以。在办公室的Windows电脑也设置好了，可以直接运行程序。但是在自己新买的HP-Eilte Book 735 G5  AMD 版本里面，总是会出现问题：<br>1.第一个问题是在cmd命令里面没办法运行python,只能在Anaconda自带的命令窗口prompt里面用，发现可以通过将python加入环境变量解决。</p><p>2.第二个问题是即使我加入了环境变量，在命令行使用的时候，还是没办法插入插件包，比如numpy,晚上搜索了许多，发现可能是因为版本问题？反正我重新安装了一边numpy就好了。但是那么多插件全部都得自己重新安装，岂不费事？这样Anaconda的优势就体现不出来了。（也和python环境有关，我自己是搞不定）</p><p>3.第三个问题是conda更新出现HTTP ERROR,貌似可以通过更改镜像源来解决。以前linux死活不行是因为我设置了代理翻墙。</p><h2 id="直接安装python3-然后pip一个个安装"><a href="#直接安装python3-然后pip一个个安装" class="headerlink" title="直接安装python3,然后pip一个个安装"></a>直接安装python3,然后pip一个个安装</h2><p>由于上面的第二个问题没办法解决，干脆不装anaconda，直接轻量级安装python3，官网下载。安装之后手动将python3以及/python3/scripts都添加到环境变量即可，然后就可以使用了。安装方式为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install &lt;package name&gt;</span><br></pre></td></tr></table></figure><h3 id="安装缓慢解决方式"><a href="#安装缓慢解决方式" class="headerlink" title="安装缓慢解决方式"></a>安装缓慢解决方式</h3><p>更换清华大学的源<br>临时使用<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</span><br></pre></td></tr></table></figure><br>注意，simple 不能少, 是 https 而不是 http,要设为默认，只需要将pip更新到最新然后输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pip -U</span><br><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></p><p>有时候在线安装会有问题，可以尝试去网站下载whl文件安装</p><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p><h3 id="更新-20190803"><a href="#更新-20190803" class="headerlink" title="更新 20190803"></a>更新 20190803</h3><p>目前清华中科大的anaconda的镜像源不能用了，只能用官网的。回复anaconda镜像源为官网的方式为：删除掉对应的.condarc文件，windows中一半在用户目录下。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据的保存文件类型</title>
      <link href="/2019/04/25/C_%E6%95%99%E7%A8%8B_Python_%E6%95%B0%E6%8D%AE%E7%9A%84%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/04/25/C_%E6%95%99%E7%A8%8B_Python_%E6%95%B0%E6%8D%AE%E7%9A%84%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-DataProcessing"><a href="#Python-DataProcessing" class="headerlink" title="Python #DataProcessing"></a>Python #DataProcessing</h1><p>最近在用python扫描参数计算，在用MATLAB的时候，比较喜欢保存为CSV文件或者是txt文件，这些文件的好处是可以用记事本或者excel打开看，缺点是占用的空间太大。后来MATLAB我比较倾向于用“.mat”文件来保存，这样文件就会比较小。MATLAB保存为.mat文件只要如下命令</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">save(<span class="string">'xxx.mat'</span>,<span class="string">'matA'</span>,<span class="string">'matB'</span>,...) <span class="comment">%依次保存matA,matB文件</span></span><br><span class="line">save(<span class="string">'xxx.mat'</span>) <span class="comment">%保存工作区的所有文件</span></span><br></pre></td></tr></table></figure><p>python也支持以上所有的文件格式，还支持npy文件。用法如下，首先导入包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy.io <span class="keyword">as</span> scio</span><br></pre></td></tr></table></figure><h2 id="txt-格式"><a href="#txt-格式" class="headerlink" title="txt 格式"></a>txt 格式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存为txt</span></span><br><span class="line">np.savetxt(<span class="string">"filename.txt"</span>, matA)</span><br><span class="line"><span class="comment">## 读取为txt</span></span><br><span class="line">data=np.loadtxt(<span class="string">"filename.txt"</span>)</span><br></pre></td></tr></table></figure><h2 id="mat-格式"><a href="#mat-格式" class="headerlink" title="mat 格式"></a>mat 格式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存为mat文件</span></span><br><span class="line">scio.savemat(<span class="string">"filename.mat"</span>, {<span class="string">'NameA'</span>:matA})</span><br><span class="line"><span class="comment"># 读取为mat文件</span></span><br><span class="line">data=scio.loadmat(<span class="string">"filename.mat"</span>)</span><br><span class="line"><span class="comment"># 此处的data文件是一个字典，不同的矩阵、数值需要依次取出来。</span></span><br><span class="line">matA = data[<span class="string">'matA'</span>]</span><br><span class="line">matB = data[<span class="string">'matB'</span>]</span><br><span class="line">matC = data[<span class="string">'matC'</span>]</span><br></pre></td></tr></table></figure><h2 id="npy-格式"><a href="#npy-格式" class="headerlink" title="npy 格式"></a>npy 格式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存为npy文件</span></span><br><span class="line">np.save(<span class="string">"filename.npy"</span>, matA)</span><br><span class="line">np.save(<span class="string">"filename.npy"</span>, matA,matB,matC) <span class="comment">#多个矩阵</span></span><br><span class="line"><span class="comment"># 读取npy文件</span></span><br><span class="line">np.load(<span class="string">"filename.npy"</span>)</span><br></pre></td></tr></table></figure><p>因此python不仅支持读取与保存mat文件，还有自己独有的npy文件，这两种文件都是不能用记事本打开，但是都占开年较小，比如我计算的文件，保存为txt文件时占355kB,但是保存成npy格式或者mat格式，都只占114kB.这种方法适合保存一些比较大的数据，比较节省空间。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB Parallel Computing Summary</title>
      <link href="/2019/04/17/A_En_MATLAB_ParallelComputing/"/>
      <url>/2019/04/17/A_En_MATLAB_ParallelComputing/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-ParallelComputing"><a href="#MATLAB-ParallelComputing" class="headerlink" title="MATLAB #ParallelComputing"></a>MATLAB #ParallelComputing</h1><h1 id="Simple-Introduction"><a href="#Simple-Introduction" class="headerlink" title="Simple Introduction"></a>Simple Introduction</h1><p>In MATLAB we just need to use ‘parfor’ to realize parallel computing. Here is a simple example</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">poolnum=<span class="number">10</span>; <span class="comment">% numbers of kernels</span></span><br><span class="line">kernum=parpool(poolnum)</span><br><span class="line"><span class="keyword">parfor</span> l=<span class="number">1</span>:numloop</span><br><span class="line"><span class="comment">%do something here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">delete(kernum)</span><br><span class="line"><span class="comment">%the delete step is very important because in cluster we may use  more than a dozen cores.If we stop the program directly without closing the parallel pool, the cluster may crash or take a long time to become normal.</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Parallel Computing Summary</title>
      <link href="/2019/04/17/A_En_Python_ParallelComputing/"/>
      <url>/2019/04/17/A_En_Python_ParallelComputing/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-ParallelComputing"><a href="#Python-ParallelComputing" class="headerlink" title="Python #ParallelComputing"></a>Python #ParallelComputing</h1><h1 id="Python-Parallel-Computing-Summary"><a href="#Python-Parallel-Computing-Summary" class="headerlink" title="Python Parallel Computing Summary"></a>Python Parallel Computing Summary</h1><p>Python may be faster compared with MATLAB in some cases  when a part of the program directly calls the C language. If we want to use Python to do parallel computation, we need use the ‘multiprocessing’ package.<br>Very detailed introduction and examples can be found in this </p><p><a href="https://docs.python.org/3.4/library/multiprocessing.html?highlight=process">https://docs.python.org/3.4/library/multiprocessing.html?highlight=process</a></p><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use?"></a>How to use?</h2><p>There are many different ways of achieving multiprocessing (not multi threads which will be restriced by GIL in python), here I show the simplest realization by using “pool”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> multiprocessing <span class="keyword">as</span> mp</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%use a function to define what we want to do</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>=(a,b,c,d):</span><br><span class="line"><span class="comment">#do something here</span></span><br><span class="line">    <span class="keyword">return</span> fun</span><br><span class="line"><span class="comment"># number of process you are going to use</span></span><br><span class="line">processnum=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:<span class="comment">#this is needed in windows</span></span><br><span class="line">    pool = mp.Pool(processes=processnum) </span><br><span class="line">    <span class="comment"># there are many parameters and we can choose one of them </span></span><br><span class="line">    <span class="comment"># for example "a" as a loop element to be calculated parallely.</span></span><br><span class="line">    results = [pool.apply_async(fun, args=(a,b,c,d)) <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(loop_mat)]</span><br><span class="line">    <span class="comment">#get the values arbitrarily</span></span><br><span class="line">    value_1= [p.get() <span class="keyword">for</span> p <span class="keyword">in</span> results]<span class="comment"># use this get function to obtain the calculated value</span></span><br><span class="line">    pool.terminate() <span class="comment">#shut down</span></span><br></pre></td></tr></table></figure><p>In above examples, the <code>pool.apply_async</code> function will arrange the tasks in different cores simultaneouly. </p><p>What needs to be emphasized is that the paralleling computing should be used in which the single process is very slow and  each core do the job very slowly. We shouldn’t distribute many small jobs which needs very short time to complete. Then most of the time will be used to distribute works.</p><h2 id="How-to-show-the-progress？"><a href="#How-to-show-the-progress？" class="headerlink" title="How to show the progress？"></a>How to show the progress？</h2><p>In many cases when we use the <code>multiprocessing</code> we would want to know the progress and how to show the progress is not a easy task. We may first think that we can print something during the process. However, the print content will only show when all the results joined and returned.  After searching on the internet, I know the solution</p><p><a href="https://stackoverflow.com/questions/5666576/show-the-progress-of-a-python-multiprocessing-pool-map-call">Stack Overflow</a></p><p>The answer from Zeawoas shows the correct use</p><blockquote><p>for anybody looking for a simple solution working with Pool.apply_async():</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line">&gt;<span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line">&gt;<span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">&gt;<span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">x</span>):</span><br><span class="line">   sleep(<span class="number">0.5</span>)</span><br><span class="line">   <span class="keyword">return</span> x**<span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;n = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">&gt;p = Pool(<span class="number">4</span>)</span><br><span class="line">&gt;pbar = tqdm(total=n)</span><br><span class="line">&gt;res = [p.apply_async(work, args=(</span><br><span class="line">   i,), callback=<span class="keyword">lambda</span> _: pbar.update(<span class="number">1</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">&gt;results = [p.get() <span class="keyword">for</span> p <span class="keyword">in</span> res]</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB File Operation Summary</title>
      <link href="/2019/04/07/A_En_MATLAB_FileOperationSummary/"/>
      <url>/2019/04/07/A_En_MATLAB_FileOperationSummary/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-Dataprocessing"><a href="#MATLAB-Dataprocessing" class="headerlink" title="MATLAB #Dataprocessing"></a>MATLAB #Dataprocessing</h1><p>In doing research,We often need output the result to the file and read from the file.In this note, I will summarize the methods of reading and output method in MATLAB.</p><h2 id="Deirectly-read-and-write"><a href="#Deirectly-read-and-write" class="headerlink" title="Deirectly read and write"></a>Deirectly read and write</h2><h3 id="mat-file"><a href="#mat-file" class="headerlink" title="mat file"></a>mat file</h3><p>We first consider the method of saving and read the MATLAB type file. The Matrix in MATLAB can be directly saved in a “xx.mat” file. This method can save many different result in an whole single file. I really recommend this method. This can be done as follows:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename=[<span class="string">'sweep_result_'</span>,datestr(now,<span class="string">'yyyy_mm_dd_HHMMSS'</span>),<span class="string">'.mat'</span>];</span><br><span class="line">save(num2str(filename),<span class="string">'matrixa'</span>,<span class="string">'matrixb'</span>,<span class="string">'matrixc'</span>);</span><br></pre></td></tr></table></figure><p>to read the file,</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load(<span class="string">'filename'</span>)</span><br></pre></td></tr></table></figure><h3 id="csv-txt-file"><a href="#csv-txt-file" class="headerlink" title="csv,txt file"></a>csv,txt file</h3><p>the mat file can only be opened in MATLAB, In order to allow other software to open the output file. We can save the file as txt or csv file. This can be done via csvread/cavwrite, textread/textwrite,dlmwrite/dlmread,And I recommend the dlm method</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% read csv file via "csvread"</span></span><br><span class="line">data=csvread(<span class="string">'&lt;filename&gt;'</span>,&lt;begin row&gt;,&lt;begin column&gt;);</span><br><span class="line"><span class="comment">%Write matrix M to a file, 'myFile.txt', delimited by the tab character and using a precision of 3 significant digits</span></span><br><span class="line">dlmwrite(<span class="string">'myFile.txt'</span>,M,<span class="string">'delimiter'</span>,<span class="string">'\t'</span>,<span class="string">'precision'</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment">%Export a matrix to a file named myfile.txt. Then, append an additional matrix to the file that is offset one row below the first</span></span><br><span class="line">X = <span class="built_in">magic</span>(<span class="number">3</span>);</span><br><span class="line">dlmwrite(<span class="string">'myfile.txt'</span>,[X*<span class="number">5</span> X/<span class="number">5</span>],<span class="string">' '</span>)</span><br><span class="line">dlmwrite(<span class="string">'myfile.txt'</span>,X,<span class="string">'-append'</span>, ...</span><br><span class="line">   <span class="string">'roffset'</span>,<span class="number">1</span>,<span class="string">'delimiter'</span>,<span class="string">' '</span>)</span><br><span class="line"><span class="comment">%ead the entire file using dlmread.</span></span><br><span class="line">M = dlmread(<span class="string">'myfile.txt'</span>)</span><br></pre></td></tr></table></figure><h2 id="fopen-method"><a href="#fopen-method" class="headerlink" title="fopen method"></a>fopen method</h2><p>this can be done via fopen and fprintf method</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fid=fopen(<span class="string">'progress.txt'</span>,<span class="string">'at'</span>);</span><br><span class="line">fprintf(fid,[datestr(now),<span class="string">' the loop step is %d \n'</span>],lk4);</span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><h2 id="“print”-output-image-to-file"><a href="#“print”-output-image-to-file" class="headerlink" title="“print” output image to file"></a>“print” output image to file</h2><p>to save the figure in the window,the best way is to use print.</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename=[<span class="string">'xxxxx_'</span>,<span class="string">'.png'</span>];</span><br><span class="line">print(num2str(filename), <span class="string">'-dpng'</span>, <span class="string">'-r600'</span>)<span class="comment">%for eps,'-deps2'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Visualization Via MATALB (1d line plots)</title>
      <link href="/2019/04/06/A_En_MATLAB_PlotSummary1_1dLinePlots/"/>
      <url>/2019/04/06/A_En_MATLAB_PlotSummary1_1dLinePlots/</url>
      
        <content type="html"><![CDATA[<p>create time: 2019 03 20</p><h1 id="MATLAB-Plot"><a href="#MATLAB-Plot" class="headerlink" title="MATLAB #Plot"></a>MATLAB #Plot</h1><h1 id="Data-Visualization-Via-MATALB-1-dimensional-data"><a href="#Data-Visualization-Via-MATALB-1-dimensional-data" class="headerlink" title="Data Visualization Via MATALB 1 dimensional data"></a>Data Visualization Via MATALB 1 dimensional data</h1><p>MATLAB is a power software in scientific calculations and its plot ability is also useful. I want to summarize the most frequently used MATLAB code accoring to my usage.</p><h2 id="plot-multi-lines-in-the-same-figures"><a href="#plot-multi-lines-in-the-same-figures" class="headerlink" title="plot multi lines in the same figures"></a>plot multi lines in the same figures</h2><p>The first code is how we plot multilines in the same plot. I want to add some extra settings in this code for the default settings are not so beautiful. The following is the plot of different functions:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">numx=200;</span><br><span class="line">x=linspace(-1,10,numx);</span><br><span class="line">y1=exp(x);</span><br><span class="line">y2=sin(x)+exp(-x);</span><br><span class="line">y3=x.^3+x.^2+1;</span><br><span class="line">y4=sin(x).*exp(-x);</span><br><span class="line">%%</span><br><span class="line">figure(1)</span><br><span class="line">plot(x,y1,'linewidth',2)</span><br><span class="line">hold on</span><br><span class="line">plot(x,y2,'linewidth',2)</span><br><span class="line">hold on</span><br><span class="line">plot(x,y3,'linewidth',2)</span><br><span class="line">hold on</span><br><span class="line">plot(x,y4,'linewidth',2)</span><br><span class="line">hold on</span><br><span class="line">set(gca,'linewidth',2,'fontsize',15)</span><br><span class="line">xlabel('x','fontname','times newroman','fontsize',15)</span><br><span class="line">ylabel('y','fontname','times newroman','fontsize',15)</span><br><span class="line">%xlim([0,10])</span><br><span class="line">ylim([-5,10])</span><br><span class="line">legend({'lin1','lin2','lin3','lin4'},'fontname','times newroman','fontsize'...</span><br><span class="line">    ,15,'Location','northwest','Orientation','horizontal')</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>In above figures I redefined the linewidth of the lines and ticks,changed the fontsize of legend,label etc.<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190406_MATLAB_PLOT/example_01_1d.png" alt="Basic 1d plot"></p><h2 id="Plot-different-lines-by-using-different-y-axis"><a href="#Plot-different-lines-by-using-different-y-axis" class="headerlink" title="Plot different lines by using different y axis"></a>Plot different lines by using different y axis</h2><p>In some cases we need to plot different things in the smae plot but their number and meanings are different and are not suitable compared directly. We may need the double yy plot.<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">x = linspace(0, 10);</span><br><span class="line">y1 = sin(3*x);</span><br><span class="line">y2 = sin(3*x) .* exp(0.5*x);</span><br><span class="line"></span><br><span class="line">figure(1)</span><br><span class="line">subplot(2,1,1)</span><br><span class="line">yyaxis left;</span><br><span class="line">plot(x,y1,'Linewidth',1);</span><br><span class="line">title('yyaxis');</span><br><span class="line">xlabel('X-axis','fontname','times newroman','fontsize',15);</span><br><span class="line">ylabel('left Y-axis','fontname','times newroman','fontsize',15);</span><br><span class="line"></span><br><span class="line">yyaxis right;</span><br><span class="line">plot(x,y2,'Linewidth',1);</span><br><span class="line">ylim([-150,150]); </span><br><span class="line">ylabel('right Y-axis','fontname','times newroman','fontsize',15); </span><br><span class="line">%set(gca,'linewidth',1.5,'fontsize',15)</span><br><span class="line">% plotyy</span><br><span class="line">subplot(2,1,2)</span><br><span class="line">x = 0:0.01:20;</span><br><span class="line">y1 = 200*exp(-0.05*x).*sin(x);</span><br><span class="line">y2 = 0.8*exp(-0.5*x).*sin(10*x);</span><br><span class="line">[hAx, hLine1, hLine2] = plotyy(x,y1, x,y2);</span><br><span class="line"></span><br><span class="line">title('plot yy');</span><br><span class="line">xlabel('Time (\musec)');</span><br><span class="line"></span><br><span class="line">ylabel(hAx(1), 'Slow Decay'); % left y-axis</span><br><span class="line">ylabel(hAx(2), 'Fast Decay'); % right y-axis</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190406_MATLAB_PLOT/example_02_1d.png" alt="plot by using different yaxis"></p><h2 id="Plot-the-interpolation-lines-with-its-origin-data"><a href="#Plot-the-interpolation-lines-with-its-origin-data" class="headerlink" title="Plot the interpolation lines with its origin data"></a>Plot the interpolation lines with its origin data</h2><p>We sometimes need to draw some discrete data into a line. In order to look good, we need a smooth curve. In this case, we need to use interpolation. We then give an example to show how to plot . There are two different methods: “plotyy” and “yyaxis”<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Nx=12;</span><br><span class="line">power=zeros(Nx,2);</span><br><span class="line">power(:,1)=linspace(1,10,Nx);</span><br><span class="line">power(:,2)=[3,6,4,2,1,5,8,10,4,3,2,9];</span><br><span class="line">xmin=power(1,1);</span><br><span class="line">xmax=power(Nx,1);</span><br><span class="line">deltax=(xmax-xmin)/(Nx-1)/10;</span><br><span class="line">xi=xmin:deltax:xmax;</span><br><span class="line">yi=interp1(power(:,1),power(:,2),xi,'spline');</span><br><span class="line"></span><br><span class="line">figure(1)</span><br><span class="line">plot(power(:,1),power(:,2),'&gt;',xi,yi,'Linewidth',2);</span><br><span class="line">%axis([4.5 22.5 10.2 10.7])</span><br><span class="line">xlabel('x','fontname','times newroman','fontsize',15)</span><br><span class="line">ylabel('y','fontname','times newroman','fontsize',15)</span><br><span class="line">legend({'origin','interp'},'fontname','times newroman','fontsize'...</span><br><span class="line">    ,15,'Location','northwest','Orientation','horizontal')</span><br><span class="line">grid</span><br><span class="line">set(gca,'linewidth',1.5,'fontsize',15)</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190406_MATLAB_PLOT/example_03_1d.png" alt="Plot from discrete date and do Interpolation"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> ScientificPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows好用软件收集</title>
      <link href="/2019/03/14/D_%E6%94%B6%E9%9B%86_Windows_%E5%90%84%E7%B1%BB%E4%BC%98%E8%B4%A8%E8%BD%AF%E4%BB%B6%E6%B1%87%E6%80%BB/"/>
      <url>/2019/03/14/D_%E6%94%B6%E9%9B%86_Windows_%E5%90%84%E7%B1%BB%E4%BC%98%E8%B4%A8%E8%BD%AF%E4%BB%B6%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Collection-Software"><a href="#Collection-Software" class="headerlink" title="Collection #Software"></a>Collection #Software</h1><p>用了windows这么久了，试过各种不同的软件，现在讲一些必备的好用软件写下来。</p><h2 id="PDF阅读器"><a href="#PDF阅读器" class="headerlink" title="PDF阅读器"></a>PDF阅读器</h2><ol><li>SumatraPDF</li></ol><p>非常轻量小巧，打开软件非常的快速。主要目标就是用来阅读pdf文档，还支持阅读djvu格式的文件。安装了ghostscript之后可以直接打开eps文件。平时用来快速查看pdf还是很好用的。缺点就是不能做标注，想做标注的画，也有很多其他的阅读器，比如adobe,福昕等等。</p><ol><li>XODO<br>windows商店自带的pdf阅读器，标注功能齐全，体积小巧。</li></ol><h2 id="解压缩工具"><a href="#解压缩工具" class="headerlink" title="解压缩工具"></a>解压缩工具</h2><ol><li>Win-RAR</li></ol><p>这一款软件实我最开始接触电脑时一直用的软件，它的名字会给人一个错觉，觉得这就是windows官方的软件，其实不是，不过用起来确实还不错。</p><ol><li>Bandzip<br>没有广告，性能给力。</li></ol><h2 id="屏幕录制工具"><a href="#屏幕录制工具" class="headerlink" title="屏幕录制工具"></a>屏幕录制工具</h2><ol><li>ScreentoGif </li></ol><p>可以编辑录制一些小的动图，还可以制作一些动态图。很方便的教程录制、表情包制作工具。</p><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><ol><li>SublimeText3</li></ol><p>配色好看，插件丰富，上手容易。本人尝试过用来写python, MATLAB, markdown, latex都是非常顺手的。不过因为是一个编辑器，所有功能没有IDE齐全，没有VSCODE体量大，好处是打开文本相当快。</p><ol><li>VsCode</li></ol><p>微软出品，插件安装、配置比sublime text要方便很多，还有丰富的debug工具，支持命令行，应该是全能型选手。</p><h2 id="便签工具"><a href="#便签工具" class="headerlink" title="便签工具"></a>便签工具</h2><ol><li><p>敬业签<br>目前见过的最单纯最好用的便签工具。</p></li><li><p>Microsoft To Do<br>微软官方出品，界面好看，功能齐全，已经取代了敬业签成为我最喜华的工具了。</p></li></ol><h2 id="文件检索工具"><a href="#文件检索工具" class="headerlink" title="文件检索工具"></a>文件检索工具</h2><ol><li>Everything<br>偶尔查找某些自己不记得放在哪里的文件非常高效。不过平时最好养成文件命名分类的好习惯。</li></ol><h2 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h2><ol><li>potplayer<br>单纯的本地播放器，无广告，功能丰富，字幕导入什么的很easy。</li></ol><h2 id="矢量绘图工具"><a href="#矢量绘图工具" class="headerlink" title="矢量绘图工具"></a>矢量绘图工具</h2><ol><li><p>Inkscape<br>开源免费。配合相关插件功能可以非常强大，特别是latex的书写，比coreldraw要方便多了。</p></li><li><p>Coreldraw<br>不免费，但功能真的很强大。</p></li><li>AI<br>Adobe系列，但是我用的不多，三维支持比coreldraw要好。</li></ol><h2 id="视频编辑制作工具"><a href="#视频编辑制作工具" class="headerlink" title="视频编辑制作工具"></a>视频编辑制作工具</h2><ol><li>会声会影<br>简单易上手，本人会用的目前就这个。</li></ol><h2 id="云存储工具"><a href="#云存储工具" class="headerlink" title="云存储工具"></a>云存储工具</h2><ol><li><p>Onedrive<br>微软出品，5G免费，同步功速度一般，但也不慢。</p></li><li><p>iCloud<br>苹果出品，5G免费，windows客户端做的超级烂。</p></li><li><p>Pcloud<br>10G免费，适合企业团队的协作。也可以自己个人用，数据安全有保障。</p></li><li><p>坚果云<br>付费，但是物超所值，单纯的同步文件的软件，所以功能不多，但是速度快，删除很久的文件也可以找到。</p></li><li><p>百度云<br>存一些大的文件吧，备份一下。不适合作为那种增量同步的软件。</p></li></ol><h2 id="3D-绘图工具"><a href="#3D-绘图工具" class="headerlink" title="3D 绘图工具"></a>3D 绘图工具</h2><ol><li>MAYA</li><li><p>3D Max<br>都不熟悉，商业软件</p></li><li><p>Blender<br>开源免费，小巧易上手。正在学习中。</p></li></ol><h2 id="文献管理软件"><a href="#文献管理软件" class="headerlink" title="文献管理软件"></a>文献管理软件</h2><ol><li><p>Endnote<br>最常用，功能齐全，目前主力。</p></li><li><p>Mendeley<br>多平台支持</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gnuplot绘制gif动图</title>
      <link href="/2019/03/06/C_%E6%95%99%E7%A8%8B_gnuplot%E7%BB%98%E5%88%B6gif%E5%8A%A8%E5%9B%BE/"/>
      <url>/2019/03/06/C_%E6%95%99%E7%A8%8B_gnuplot%E7%BB%98%E5%88%B6gif%E5%8A%A8%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="Gnuplot-Plot"><a href="#Gnuplot-Plot" class="headerlink" title="Gnuplot #Plot"></a>Gnuplot #Plot</h1><h2 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h2><blockquote><p>本科时候学习计算物理，搞生物物理计算的老师推荐我们用fortran写计算的程序，速度非常快，而画图推荐用gnuplot, 当时课上都在用都在学，我也就入了gnuplot的坑。后来自己没有真正完全做计算，所以使用MATLAB, python写代码的时间多一些，gnuplot也就没有继续使用了。 本篇笔记是当时本科写的一个笔记，最开始发表在新浪博客。 当时也是摸索了很久，所以记录一下绘图过程。</p></blockquote><p>大家都知道，gnuplot作图功能强大，但是有很多功能都是靠自己去摸索实验的，只有有创意，有想法，才会画出赏心悦目的图像。这个软件非常下，不过你所能想到的图形他都可以画。</p><p>首先提供一个gnuplot动图教程的网址 <a href="http://www.gnuplotting.org/tag/animation/">http://www.gnuplotting.org/tag/animation/</a> ​</p><p>我是看了这些例子后自己摸索出来的。</p><p>画动图我分为两种，</p><ul><li>一是直接输出很多张图片，然后用某些flash软件合成，我用的是Ulead gif animator。</li><li>另外一种是直接用代码输出绘制动图并且输出gif图片，这是本次笔记的重点。</li></ul><h2 id="画很多图片，然后用软件合成"><a href="#画很多图片，然后用软件合成" class="headerlink" title="画很多图片，然后用软件合成"></a>画很多图片，然后用软件合成</h2><p>我直接给链接 <a href="http://www.gnuplotting.org/animation-iv-trajectory/">http://www.gnuplotting.org/animation-iv-trajectory/</a><br>这个网站里面很多有意思的图片，还有源代码供下载。</p><h2 id="直接输出动图"><a href="#直接输出动图" class="headerlink" title="直接输出动图"></a>直接输出动图</h2><h3 id="有公式的绘图"><a href="#有公式的绘图" class="headerlink" title="有公式的绘图"></a>有公式的绘图</h3><p>直接输出动图，需要在gnuplot里面用到循环。当我们直接画可以用公式表达的图像时，比如正弦图像等，下面是我的一个具体的例子,首先时创建一个plot的文件：‘plotfunction.plt’,内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">set term gif animate delay 10 size 600,400 #设置图片大小以及间隔时间</span><br><span class="line">set title 'the sin(x/3)exp(-4x) picture' font 'Times,25' #标题</span><br><span class="line">set output "sinx_exps.gif" #文件名</span><br><span class="line">set xlabel 'x' font 'Times,25' #横坐标</span><br><span class="line">set ylabel 'y' font 'Times,25' #纵坐标</span><br><span class="line">set size 1,1 #缩放比例</span><br><span class="line">set xrange[0:8*pi] #x范围</span><br><span class="line">set yrange[-1:1] #y范围</span><br><span class="line">unset key #没有图例</span><br><span class="line">i=1</span><br><span class="line">load 'loop_sinx.plt' #循环画图的文件</span><br><span class="line">set output #导出</span><br></pre></td></tr></table></figure><p>上面调用了一个“loop_sinx.plt”的文件，文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plot sin(x/3+i*pi/5)*exp(-x/4) with lines lw 3 #画图</span><br><span class="line">i=i+1 #变量加一</span><br><span class="line">if(i&lt;40) reread #若不满足则接着画，直到满足条件，不再读取文件为止</span><br></pre></td></tr></table></figure><p>直接在gnuplot控制台输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load 'plotfunction.plt'</span><br></pre></td></tr></table></figure><p>就可以在对应文件夹得到我们需要的动图了：<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190306_Gnuplot/20190306_gnuplot_1.gif" alt="sin3x*exp(-x/4)"></p><h3 id="没有公式的绘图"><a href="#没有公式的绘图" class="headerlink" title="没有公式的绘图"></a>没有公式的绘图</h3><p>上面的plot命令时绘制的函数图像，我们还可以从数据点绘制，并且只要好好的安排数据点的排序，以及用好‘every’等命令，就可以画出很多有意思的图像，下面给出例子。</p><h4 id="例子一"><a href="#例子一" class="headerlink" title="例子一"></a>例子一</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">set term gif animate delay 20 size 960,960</span><br><span class="line">set title 'the sin and cos'</span><br><span class="line">set output "animate3.gif"</span><br><span class="line">set xlabel 'x'</span><br><span class="line">set ylabel 'y'</span><br><span class="line">set zlabel 'z'</span><br><span class="line">set xrange [-1:1]</span><br><span class="line">set yrange [0:20]</span><br><span class="line">set zrange [-1:1]</span><br><span class="line">unset key</span><br><span class="line">i=1</span><br><span class="line">load 'looper1.plt'</span><br><span class="line">set output</span><br></pre></td></tr></table></figure><p>其中文件’looper1.plt’的内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">splot      'spiral.txt' every ::i::i with points pointsize  6 pointtype 7</span><br><span class="line">#这里every的i::i画出来是一个点，如果要画点加线用到every 1::0::i</span><br><span class="line">i=i+1</span><br><span class="line">if(i&lt;100) reread</span><br></pre></td></tr></table></figure><p>画出来的动图如下：<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190306_Gnuplot/20190306_Particle_sin.gif" alt="Particle Rotate"></p><h4 id="例子二"><a href="#例子二" class="headerlink" title="例子二"></a>例子二</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">set term gif animate delay 20 size 500,700</span><br><span class="line">set title 'the wave guide'</span><br><span class="line">set output "animate4.gif"</span><br><span class="line">set xlabel 'x'</span><br><span class="line">set ylabel 'y'</span><br><span class="line">set zlabel 'z'</span><br><span class="line">#set xrange [40:120]</span><br><span class="line">set yrange [40:120]</span><br><span class="line">set zrange [-160:180]</span><br><span class="line">unset key</span><br><span class="line">i=6420</span><br><span class="line">load 'looper1.plt'</span><br><span class="line">set output</span><br></pre></td></tr></table></figure><p>其中循环文件’looper1.plt’内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">splot      'wave.txt' every 1::6419::i with linespoints pointsize  1 pointtype 1</span><br><span class="line">set hidden3d</span><br><span class="line">i=i+120</span><br><span class="line">if(i&lt;19200) reread</span><br></pre></td></tr></table></figure><p>画出来的动图如下：<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/20190306_Gnuplot/20190306_Line_Map.gif" alt="Line MAP"><br>当然我都没有提供我的原txt文件，这是本科时候弄得，文件弄丢了，本笔记与2016年7月26日首发于<a href="http://blog.sina.com.cn/s/blog_e5262fc80102w7z4.html">http://blog.sina.com.cn/s/blog_e5262fc80102w7z4.html</a></p><p>gnuplot还是很小巧精美的工具，不过自己最近基本用的MATLAB了，配套的软件画图更方便一些。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ScientificPlot </tag>
            
            <tag> gnuplot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB parfor 进度的提取</title>
      <link href="/2019/03/03/C_%E6%95%99%E7%A8%8B_MATLAB_ParforProgress/"/>
      <url>/2019/03/03/C_%E6%95%99%E7%A8%8B_MATLAB_ParforProgress/</url>
      
        <content type="html"><![CDATA[<h1 id="MATLAB-ParallelComputing"><a href="#MATLAB-ParallelComputing" class="headerlink" title="MATLAB #ParallelComputing"></a>MATLAB #ParallelComputing</h1><h1 id="MATLAB-parfor-进度显示"><a href="#MATLAB-parfor-进度显示" class="headerlink" title="MATLAB parfor 进度显示"></a>MATLAB parfor 进度显示</h1><p>用MATLAB的时候，经常会用到并行计算，用于加快速度。我们有时候还需要知道程序具体运行到哪一步，比如循环一个有100个，已经运行了多少个。如果不是parfor,我们可以采用每进行一次运算，就输出一些信息到文件的方法，比如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">N=<span class="number">10</span>;</span><br><span class="line">fid=fopen(<span class="string">'progress.txt'</span>,<span class="string">'at'</span>);</span><br><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:</span><br><span class="line">fprintf(fid,[datestr(now),<span class="string">' the loop step is %d \n'</span>],l);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><p>这样的话，就会在程序里面输出每一个循环已经执行的信息。可以看见输出的txt文件夹具有如下的内容：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">1</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">2</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">3</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">4</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">5</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">6</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">7</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">8</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">9</span>  </span><br><span class="line"><span class="number">02</span>-Mar<span class="number">-2019</span> <span class="number">23</span>:<span class="number">50</span>:<span class="number">17</span> the loop step is <span class="number">10</span>  </span><br></pre></td></tr></table></figure><p>上面的</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datestr(now)</span><br></pre></td></tr></table></figure><p>可以得到当前的时间。这是对于普通循环的用法，如果是parfor呢？因为并行计算会调用多个cpu进行计算，此时如果接着用上面的命令，就会出现多个内核同时对同一个文件处理，在服务器上面计算就会因为文件权限问题报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">错误使用 parfor_matlab (line 3)</span><br><span class="line">文件标识符无效。使用 fopen 生成有效的文件标识符。</span><br></pre></td></tr></table></figure><p>为了避免这种错误，我们可以将上面的对文件的操作放在parfor里面，即</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">N=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">parfor</span> l=<span class="number">1</span>:</span><br><span class="line">fid=fopen(<span class="string">'progress.txt'</span>,<span class="string">'at'</span>);</span><br><span class="line">fprintf(fid,[datestr(now),<span class="string">' the loop step is %d \n'</span>],l);</span><br><span class="line">fclose(fid);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>这样每次运行出一个结果，就可以输出一个结果到文件，且不会相互冲突。还需要注意的是，我们这里输出的结果不是按顺序的，而是不同cpu计算的结果随机填充到文件里面,我们必须手动数一数输出了几行结果到文件里面了，如下。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">02</span>:<span class="number">45</span> the loop step is <span class="number">10</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">4</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">7</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">1</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">3</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">6</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">5</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">2</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">8</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">10</span>  </span><br><span class="line"><span class="number">03</span>-Mar<span class="number">-2019</span> <span class="number">00</span>:<span class="number">03</span>:<span class="number">03</span> the loop step is <span class="number">9</span>  </span><br></pre></td></tr></table></figure><p>可以看见，上面的结果是随机的，为了具体知道到底计算了几个循环了，有两个办法，一是用文本编辑器打开txt文件，一般都会在左边显示行数，数有几行，就可以知道计算了几个了。第二个方法是我们可以再次读取一下我们的txt文件，数一数其矩阵的大小，就可以知道具体计算了多少行了。代码如下</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%每次运行确保文件‘progress_1.txt'，‘progress_2.txt'都是空的</span></span><br><span class="line">  N=<span class="number">10</span>;</span><br><span class="line">   <span class="keyword">for</span> l=<span class="number">1</span>:N</span><br><span class="line">   <span class="comment">%首先输出一个运行循环的结果到'progress_1.txt'文件</span></span><br><span class="line">    fid=fopen(<span class="string">'progress_1.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">    fprintf(fid,[datestr(now),<span class="string">' the loop step is %d \n'</span>],l);</span><br><span class="line">    fclose(fid);</span><br><span class="line">   <span class="comment">%然后从'progress_1.txt'文件读取文件的字符长度</span></span><br><span class="line">    fid=fopen(<span class="string">'progress_1.txt'</span>,<span class="string">'r'</span>);</span><br><span class="line">    [A, count]=fscanf(fid,<span class="string">'%s'</span>);<span class="comment">%count是读取字符的个数，我们每一行都有7个字符，所以count是7的倍数</span></span><br><span class="line">    fclose(fid);</span><br><span class="line">    fid=fopen(<span class="string">'progress_2.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">    <span class="comment">%最后在另外一个文件输出我们的总共计算了多少步</span></span><br><span class="line">    fprintf(fid,[datestr(now),<span class="string">' has looped for  %d  steps \n'</span>],count/<span class="number">7</span>);</span><br><span class="line">    fclose(fid);</span><br><span class="line">    <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>这样就可以在文件里面实时查看我们的计算进度了。这样的坏处是由于我们频繁读取文件，运行速度会变慢，对于每一个parfor循环都需要很久的情况，这种方法是值得一试的。前面讲的都是在非图形界面的情况，如果我们有图形界面，其实还有更加好的解决方法，可以一边计算，一边显示百分比。在matlab的英文社区搜索“parfor progressbar”，就会有很多的结果，下面我展示一个我认为最好的解决方法，不需要额外的java之类的,我们需要将下面这段代码保存为“parfor_progressbar_v1.m”，和要计算的代码放在同一个文件夹，计算时候调用即可。下面也已经有了调用的例子。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">classdef</span> parfor_progressbar_v1 &lt; handle</span><br><span class="line"><span class="comment">% PARFOR_PROGRESSBAR  Progress bar suitable for multi-process computation.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   H = parfor_progressbar(N, 'message', 'property',value, ...)</span></span><br><span class="line"><span class="comment">%   creates a graphical progress bar with N iterations before completion.</span></span><br><span class="line"><span class="comment">%   A temporary file in tempdir is used to communicate among threads.</span></span><br><span class="line"><span class="comment">%   Any property/value pairs are passed to waitbar internally (optional).</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   H.iterate(X) updates the progress bar by X iterations.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   Example:</span></span><br><span class="line"><span class="comment">%   --------</span></span><br><span class="line"><span class="comment">%     N=50;    %total number of parfor iterations</span></span><br><span class="line"><span class="comment">%     hbar = parfor_progressbar(N,'Computing...');  %create the progress bar</span></span><br><span class="line"><span class="comment">%     parfor i=1:N,</span></span><br><span class="line"><span class="comment">%         pause(rand);       % computation</span></span><br><span class="line"><span class="comment">%         hbar.iterate(1);   % update progress by one iteration</span></span><br><span class="line"><span class="comment">%     end</span></span><br><span class="line"><span class="comment">%     close(hbar);   %close progress bar</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   Notes:</span></span><br><span class="line"><span class="comment">%   ------</span></span><br><span class="line"><span class="comment">%   Properties cannot be modified while inside a parfor loop. Use iterate only.</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   With many short iterations, call iterate() periodically. Example:</span></span><br><span class="line"><span class="comment">%     if mod(i,10)==0,  hbar.iterate(10);  end</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   Inspired by the parfor_progress script made by Jeremy Scheff:</span></span><br><span class="line"><span class="comment">%   http://www.mathworks.com/matlabcentral/fileexchange/32101</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">%   See also: WAITBAR, PARFOR.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%   Copyright 2015-2016 Cornell University All Rights Reserved.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% Public properties</span></span><br><span class="line"><span class="keyword">properties</span> (SetAccess=protected, GetAccess=public)</span><br><span class="line">    wbh;      <span class="comment">% Waitbar figure object handle</span></span><br><span class="line">    N;        <span class="comment">% Total number of iterations expected before completion</span></span><br><span class="line">    Msg;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">properties</span> (Dependent, GetAccess=public)</span><br><span class="line">    percent;  <span class="comment">% Percentage of completed iterations</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">properties</span> (Dependent, SetAccess=public, GetAccess=public)</span><br><span class="line">    message;  <span class="comment">% Message text displayed in waitbar</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Internal properties</span></span><br><span class="line"><span class="keyword">properties</span> (SetAccess=protected, GetAccess=protected, Hidden)</span><br><span class="line">    ipcfile;  <span class="comment">% Path to temporary file for inter-process communication</span></span><br><span class="line">    htimer;   <span class="comment">% Timer object that checks ipcfile for completed iterations</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">methods</span></span><br><span class="line">    <span class="comment">%========================  CONSTRUCTOR  ========================%</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">this</span> = <span class="title">parfor_progressbar_v1</span><span class="params">(N_init, varargin)</span></span></span><br><span class="line">    <span class="comment">% Create a new progress bar with N_init iterations before completion.</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">% Create a unique inter-process communication file.</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">            f = sprintf(<span class="string">'%s%d.txt'</span>, mfilename, <span class="built_in">round</span>(<span class="built_in">rand</span>*<span class="number">1000</span>));</span><br><span class="line">            this.ipcfile = fullfile(tempdir, f);</span><br><span class="line">            <span class="keyword">if</span> ~exist(this.ipcfile,<span class="string">'file'</span>), <span class="keyword">break</span>; <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> exist(this.ipcfile,<span class="string">'file'</span>)</span><br><span class="line">            error(<span class="string">'Too many temporary files. Clear out tempdir.'</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">% Create a new waitbar </span></span><br><span class="line">        this.N = N_init;</span><br><span class="line">        this.Msg = varargin{<span class="number">1</span>};</span><br><span class="line">        this.wbh = waitbar(<span class="number">0</span>, [this.Msg, <span class="string">'0% Complete'</span>]);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">% Create timer to periodically update the waitbar in the GUI thread.</span></span><br><span class="line">        this.htimer = timer( <span class="string">'ExecutionMode'</span>,<span class="string">'fixedSpacing'</span>, <span class="string">'Period'</span>,<span class="number">0.5</span>, ...</span><br><span class="line">                             <span class="string">'BusyMode'</span>,<span class="string">'drop'</span>, <span class="string">'Name'</span>,mfilename, ...</span><br><span class="line">                             <span class="string">'TimerFcn'</span>,@(x,y)this.tupdate );</span><br><span class="line">        start(this.htimer);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">%=========================  DESTRUCTOR  ========================%</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">(this)</span></span></span><br><span class="line">        this.close();</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">(this)</span></span></span><br><span class="line">    <span class="comment">% Closer the progress bar and clean up internal state.</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">% Stop the timer</span></span><br><span class="line">        <span class="keyword">if</span> isa(this.htimer,<span class="string">'timer'</span>) &amp;&amp; isvalid(this.htimer)</span><br><span class="line">            stop(this.htimer);</span><br><span class="line">            pause(<span class="number">0.01</span>);</span><br><span class="line">            delete(this.htimer);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        this.htimer = [];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">% Delete the IPC file.</span></span><br><span class="line">        <span class="keyword">if</span> exist(this.ipcfile,<span class="string">'file'</span>)</span><br><span class="line">            delete(this.ipcfile);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">% Close the waitbar</span></span><br><span class="line">        <span class="keyword">if</span> ishandle(this.wbh)</span><br><span class="line">            close(this.wbh);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        this.wbh = [];</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">%======================  GET/SET METHODS  ======================%</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">percent</span> = <span class="title">get</span>.<span class="title">percent</span><span class="params">(this)</span></span></span><br><span class="line">    <span class="comment">% Calculate the fraction of completed iterations from IPC file.</span></span><br><span class="line">        <span class="keyword">if</span> ~exist(this.ipcfile, <span class="string">'file'</span>)</span><br><span class="line">            percent = <span class="number">0</span>;  <span class="comment">% File may not exist before the first iteration</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            fid = fopen( this.ipcfile, <span class="string">'r'</span> );</span><br><span class="line">            percent = sum(fscanf(fid, <span class="string">'%d'</span>)) / this.N;</span><br><span class="line">            percent = <span class="built_in">max</span>(<span class="number">0</span>, <span class="built_in">min</span>(<span class="number">1</span>,percent) );</span><br><span class="line">            fclose(fid);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">set</span>.<span class="title">message</span><span class="params">(this, newMsg)</span></span></span><br><span class="line">    <span class="comment">% Update the progress bar's displayed message.</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> ishandle(this.wbh)</span><br><span class="line">            waitbar( this.percent, this.wbh, newMsg );</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">iterate</span><span class="params">(this, Nitr)</span></span></span><br><span class="line">    <span class="comment">% Update the progress bar by Nitr iterations (or 1 if not specified).</span></span><br><span class="line">        <span class="keyword">if</span> nargin&lt;<span class="number">2</span>,  Nitr = <span class="number">1</span>;  <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">        fid = fopen(this.ipcfile, <span class="string">'a'</span>);</span><br><span class="line">        fprintf(fid, <span class="string">'%d\n'</span>, Nitr);</span><br><span class="line">        fclose(fid);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span> <span class="comment">%public methods</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%=====================  INTERNAL METHODS  =====================%</span></span><br><span class="line"><span class="keyword">methods</span> (Access=protected, Hidden)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">tupdate</span><span class="params">(this)</span></span></span><br><span class="line">    <span class="comment">% Check the IPC file and update the waitbar with progress.</span></span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> ishandle(this.wbh)</span><br><span class="line">            waitbar( this.percent, this.wbh, sprintf(<span class="string">'%s...%2.0f%% complete'</span>, this.Msg, this.percent*<span class="number">100</span>));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">% Kill the timer if the waitbar is closed.</span></span><br><span class="line">            close(this);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span> <span class="comment">%private methods</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="comment">%classdef</span></span><br></pre></td></tr></table></figure><h2 id="输出屏幕信息到文件的方法"><a href="#输出屏幕信息到文件的方法" class="headerlink" title="输出屏幕信息到文件的方法"></a>输出屏幕信息到文件的方法</h2><p><em>20190629</em><br>一种更好的方法是将运行matlab时屏幕的一些显示信息直接保存到另外的文件，命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Call MATLAB with the appropriate input and output.</span></span><br><span class="line"><span class="comment"># Be careful to include 'exit' MATLAB command in M-file.</span></span><br><span class="line"><span class="comment"># Insert a cd command in the main M-file to change the working directory.</span></span><br><span class="line"><span class="comment"># Run the matlab program using runmatlab.sh myfile.m myoutput.txt. </span></span><br><span class="line"><span class="comment"># Save workspace.mat. </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#nohup /opt/matlab/bin/matlab -nodisplay -nodesktop -nosplash &lt; $1 &amp;&gt; $2 &amp;</span></span><br><span class="line"><span class="comment"># nohup /opt/matlab/bin/matlab -nodisplay -nodesktop -nosplash &lt; test.m &amp;&gt; output.txt &amp;</span></span><br><span class="line"><span class="built_in">nohup</span> /opt/matlab/bin/matlab -nodisplay -nodesktop -nojvm -nosplash &lt; test.m &amp;&gt; output.txt &amp;</span><br></pre></td></tr></table></figure><p>比如我们的测试文件’test.m’如下</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> l=<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">l+<span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><p>那么运行上面的脚本之后，最后得到的‘output.txt’文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">                            &lt; M A T L A B (R) &gt;</span><br><span class="line">                  Copyright 1984-2015 The MathWorks, Inc.</span><br><span class="line">                   R2015b (8.6.0.267246) 64-bit (glnxa64)</span><br><span class="line">                              August 20, 2015</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">For online documentation, see http://www.mathworks.com/support</span><br><span class="line">For product information, visit www.mathworks.com.</span><br><span class="line"> </span><br><span class="line">&gt;&gt; </span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    11</span><br><span class="line"></span><br><span class="line">&gt;&gt; </span><br></pre></td></tr></table></figure><p>即我们可以将屏幕的结果实时的输出到文件里。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> EnglishNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 并行计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux设置定时运行脚本以及软件开机自动启动</title>
      <link href="/2019/03/02/C_%E6%95%99%E7%A8%8B_Ubuntu_%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/"/>
      <url>/2019/03/02/C_%E6%95%99%E7%A8%8B_Ubuntu_%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h1 id="有关ubuntu平台上定时运行某一软件，以及开机启动软件的方法"><a href="#有关ubuntu平台上定时运行某一软件，以及开机启动软件的方法" class="headerlink" title="有关ubuntu平台上定时运行某一软件，以及开机启动软件的方法"></a>有关ubuntu平台上定时运行某一软件，以及开机启动软件的方法</h1><p><em>Zhaohua Tian</em><br><em>2018 05 31</em></p><h2 id="开机启动的设置方法"><a href="#开机启动的设置方法" class="headerlink" title="开机启动的设置方法"></a>开机启动的设置方法</h2><p>在windows开机启动设置比较简单，只需要在任务管理器设置就可以，在ubuntu里面也可以实现类似的功能，只需要安装一个软件：Tweak Tool.不过此方法可以设置的软件有限，只能是系统的一些特殊软件，我们要实现的是开机启动一部分脚本命令。<br>我此次主要目的是为了开机启动Lumerical的Licence Manager,因为只有这个开启之后才能打开FDTD软件。手动开启的代码为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/lumlmadmin start</span><br></pre></td></tr></table></figure><p>通过网上查找相关资料，得知开机启动的设置一共有两种方法：</p><h3 id="修改-etc-rc-local文件"><a href="#修改-etc-rc-local文件" class="headerlink" title="修改/etc/rc.local文件"></a>修改/etc/rc.local文件</h3><p>该文件中只需要手动加入你需要开机运行的代码就可以了，该文件的格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh -e</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># rc.local</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This script is executed at the end of each multiuser runlevel.</span></span><br><span class="line"><span class="comment"># Make sure that the script will "exit 0" on success or any other</span></span><br><span class="line"><span class="comment"># value on error.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In order to enable or disable this script just change the execution</span></span><br><span class="line"><span class="comment"># bits.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default this script does nothing.</span></span><br><span class="line"><span class="built_in">nohup</span> <span class="built_in">echo</span> password | sudo -S /home/tzh/software/Su_for_Linux_V1.31/rjsupplicant.sh -u 校园网账户 -p 密码 -d 1 &amp;</span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>上面是我设置的开机运行校园网的代码，由于需要用Root来运行，所以必须输入密码，为了设置开机启动，就运用了命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>  passwd | sudo -S <span class="built_in">command</span></span><br></pre></td></tr></table></figure><p>这种方法可以实现自动输入密码，方法的坏处是自己的密码以明文保存在文件里，不是很安全。</p><h3 id="创建自己的启动服务项"><a href="#创建自己的启动服务项" class="headerlink" title="创建自己的启动服务项"></a>创建自己的启动服务项</h3><p>在/etc/init.d 文件夹里面都是一些需要用到的服务，为了让自己的代码也可以像该文件夹下面的文件一样自动启动，可以在该文件夹下面创建自己的执行脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/init.d/my_service.sh</span><br></pre></td></tr></table></figure><p>我以我用到的代码为例，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          my_service.sh</span></span><br><span class="line"><span class="comment"># Required-start:    $local_fs $remote_fs $network $syslog</span></span><br><span class="line"><span class="comment"># Required-Stop:     $local_fs $remote_fs $network $syslog</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: starts the my_service.sh daemon</span></span><br><span class="line"><span class="comment"># Description:       starts my_service.sh using start-stop-daemon</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line">sudo /etc/init.d/lumlmadmin start</span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>代码的前面必须要加那么一段，不然不会成功，然后再加入自己要运行的代码即可。然后需要将我们自己加入的服务添加进list,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d -f myservice.sh defaults 90</span><br></pre></td></tr></table></figure><p>数字90代表的是次序，貌似应该弄大一点才可以成功，具体的细节我也不是很清楚。</p><h2 id="定时运行脚本的方法"><a href="#定时运行脚本的方法" class="headerlink" title="定时运行脚本的方法"></a>定时运行脚本的方法</h2><p>crontab单词的意思是：定时任务。</p><p>crontab命令常见于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令。该命令从标准输入设备读取指令，并将其存放于“crontab”文件中，以供之后读取和执行。该词来源于希腊语 chronos(χρόνος)，原意是时间。</p><p>通常，crontab储存的指令被守护进程激活， crond常常在后台运行，每一分钟检查是否有预定的作业需要执行。这类作业一般称为cron jobs。</p><p>有了上面的概念，再来看crontab的使用就会清晰些。</p><p>既然是系统每分钟都要检查一下，那么必然要有一个检查的依据，如配置文件或者什么的。<br>还是来看看百科：</p><p>crontab文件包含送交cron守护进程的一系列作业和指令。每个用户可以拥有自己的crontab文件；同时，操作系统保存一个针对整个系统的crontab文件，该文件通常存放于/etc或者/etc之下的子目录中，而这个文件只能由系统管理员来修改。<br>　　crontab文件的每一行均遵守特定的格式，由空格或tab分隔为数个领域，每个领域可以放置单一或多个数值。<br>好了，开始使用了。估计有些人从定义就知道他要怎么用了。不过我还是想记录下。</p><p>使用步骤：<br>1、终端运行crontab -e [解释：编辑配置文件]<br>2、选择你要用的编辑器，一般人会选择vi。<br>3、此时配置文件已打开，只需要按照他的格式写配置即可。</p><p>好吧，简单到我都觉得。。</p><p>举个例子：</p><p>在我的home目录下有一个python脚本，helloworld.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">'hello world by crontab!'</span></span><br></pre></td></tr></table></figure><p>我想要这个脚本在每天的早上7点30执行。<br>因此这个 任务的crontab配置文件就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># m h  dom mon dow   command</span></span><br><span class="line">30 7 * * * python /home/the5fire/testcrontab.py /home/the5fire/testcrontab.log 2&amp;1</span><br></pre></td></tr></table></figure><p>简单解释下，这个配置的意思就是在每天的7：30用python运行我的家目录下的testcrontab.py文件，并将输出内容输出到testcrontab.log中，后面那个2&amp;1的意思是把错误的输出也输出到标准输出（2表示错误，2表示错误输出，&amp;表示等同于，1表示正确），因此如果运行出错也会把错误输出到之前定义的log中。</p><p>另外关于合适执行命令还有些要说。</p><p>上面只是定时几点执行，那么我怎么设置它按照某一频率执行。比如每分钟执行依次。<br>对应的配置就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># m h  dom mon dow   command</span></span><br><span class="line">*/1 * * * * python /home/the5fire/testcrontab.py /home/the5fire/testcrontab.log 2&amp;1</span><br></pre></td></tr></table></figure><p>再来一个场景，我想在每天的早上六点到八点之间，每隔3分钟执行一次的配置怎么写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># m h  dom mon dow   command</span></span><br><span class="line">*/3 6-8 * * * python /home/the5fire/testcrontab.py /home/the5fire/testcrontab.log 2&amp;1</span><br></pre></td></tr></table></figure><p>到此应该都会使用了吧，五个星号表示不同的执行单位(分、时、日、月、年)，而那个反斜线表示频率。</p><p>上面是我参考的文章<a href="https://blog.csdn.net/babydavic/article/details/8446886">https://blog.csdn.net/babydavic/article/details/8446886</a></p><p>我设置的锐捷网络客户端每隔一段时间运行的代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Edit this file to introduce tasks to be run by cron.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Each task to run has to be defined through a single line</span></span><br><span class="line"><span class="comment"># indicating with different fields when the task will be run</span></span><br><span class="line"><span class="comment"># and what command to run for the task</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To define the time you can provide concrete values for</span></span><br><span class="line"><span class="comment"># minute (m), hour (h), day of month (dom), month (mon),</span></span><br><span class="line"><span class="comment"># and day of week (dow) or use '*' in these fields (for 'any').#</span></span><br><span class="line"><span class="comment"># Notice that tasks will be started based on the cron's system</span></span><br><span class="line"><span class="comment"># daemon's notion of time and timezones.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Output of the crontab jobs (including errors) is sent through</span></span><br><span class="line"><span class="comment"># email to the user the crontab file belongs to (unless redirected).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For example, you can run a backup of all your user accounts</span></span><br><span class="line"><span class="comment"># at 5 a.m every week with:</span></span><br><span class="line"><span class="comment"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For more information see the manual pages of crontab(5) and cron(8)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># m h  dom mon dow   command</span></span><br><span class="line">* */5 * * * /home/xwc/software/rj &gt;&gt;/home/tzh/cronlog/the_cron.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>需要注意的是，不同用户的定时运行软件是不一样的，这里我用的是root用户编辑的，因为锐捷网络客户端只能root才能执行。</p><h2 id="等待某一程序运行完毕之后接着运行"><a href="#等待某一程序运行完毕之后接着运行" class="headerlink" title="等待某一程序运行完毕之后接着运行"></a>等待某一程序运行完毕之后接着运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">while ps -p 123455</span><br><span class="line">do</span><br><span class="line">sleep 5m</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">bash comsolscript.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Hexo搭建个人博客</title>
      <link href="/2019/03/01/C_%E6%95%99%E7%A8%8B_%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/03/01/C_%E6%95%99%E7%A8%8B_%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h1><h2 id="Motivation"><a href="#Motivation" class="headerlink" title="Motivation"></a>Motivation</h2><p>（闲扯，无关技术）<br>从2016年接触github之后，就有做一个自己的博客的想法。<br>目前市面上的博客平台也还是有很多的，比如新浪博客、豆瓣、知乎专栏、CSDN、博客园、简书….<br>这些网站各有优劣，而且侧重点不同。有的偏技术，比如CSDN、博客园，有的很文艺，比如豆瓣、新浪博客，有的更加具有严谨性和学术性，比如知乎。我的要求是：</p><ol><li>要可以记录一些自己安装软件、学习软件的教程，所以要对代码高亮支持的很好。</li><li>可以写一下自己的随笔、感悟。</li><li>可以写自己对学术问题的思考，比较浅显的思路那种，也得支持公式的输入。</li></ol><p>想来想去还是你自己搭建一个博客吧，这些功能都可以实现，网上搜索了很多搭建个人博客的例子，有用wordpress的，有用python的(sphinx)，提到的最多的就是github pages. 一步步按照注册、安装，最开始的jkelly实现，老是报错和失败，就放弃了。 </p><p>去年过年回去比较闲，又开始捣鼓，生命不息、捣鼓不止。。。。尝试打算用Python，被一篇文章吸引<a href="https://blog.csdn.net/BF02jgtRS00XKtCx/article/details/81611904">https://blog.csdn.net/BF02jgtRS00XKtCx/article/details/81611904</a></p><p>由于这种方法需要一些python的库，而且编译需要c++14,我不想再笔记本装太多东西，选择放弃。</p><p>开始尝试Hexo，还详细比较了Jkelly和Hexo的区别。真的不想再弄jkelly了,不记得耽误了多久的时间依然各种报错。。。Hexo搭建主要借助了知乎上的一篇文章：<br><a href="https://zhuanlan.zhihu.com/p/26625249">https://zhuanlan.zhihu.com/p/26625249</a><br>这篇文章讲的很细致，实现基本的功能很快，后来为了捣鼓评论、背景图片，又花了很久。总共花了有三天，慢慢的把网站弄好了，功能也更加齐全，在这里将做的过程以及中间遇到的问题详细列下来，希望对自己、对别人都会有帮助~<br>（2019 03 01 今天就写到这里吧，慢慢补充）</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="下载cmder"><a href="#下载cmder" class="headerlink" title="下载cmder"></a>下载cmder</h3><p>cmder是一款可以在windows系统输入linux命令的软件，我们直接在官网下载安装，<br><a href="https://cmder.net/">https://cmder.net/</a><br>我下载的是含有git的版本，文件较大，下载下来之后，解压放在一个不需要管理员权限的位置，然后将对应的路径添加到环境变量，就可以“win+R”里输入cmder打开了，不过这还不方便，我们希望也可以像ubuntu一样，右键之后在当前文件夹打开，此时需要管理员权限运行cmd，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure><p>这样Cmder就配置完成了.</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>我们使用Hexo来生成静态网页，为了安装Hexo，我们需要首先安装node.js:<br><a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>下载安装之后，可以在命令行（Win+R然后输入CMD）用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>来查看版本，确定node.js和npm是否安装成功。接下来安装Hexo,同样在命令行里面输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><p>安装好之后，我们就可以找文件夹创建网页了。</p><h2 id="基本功能的实现"><a href="#基本功能的实现" class="headerlink" title="基本功能的实现"></a>基本功能的实现</h2><h3 id="创建网页部署在本地"><a href="#创建网页部署在本地" class="headerlink" title="创建网页部署在本地"></a>创建网页部署在本地</h3><p>有了Hexo，此时选择一个我们打算用来放网站的文件夹，命令行中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>就会生成一个名字为”blog”的文件夹，打开这个文件夹，我们会发现里面已经有了基本的文件，暂时不管每个文件的功能，在blog文件夹里面输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>就会生成一个静态的网页，再输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就会将静态博客部署再本地了，打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> 就可以查看预览网页了。此时我们可以尝试插件一篇文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;文章名字&gt;</span><br></pre></td></tr></table></figure><p>此时查看站点文件夹source目录的_post文件夹，可以看见已经多了一个&lt;文章名字&gt;.md的文件，稍微编辑下，就可以浏览器看到了。</p><h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><h3 id="设置github"><a href="#设置github" class="headerlink" title="设置github"></a>设置github</h3><p>上面的静态的网页需要部署到网络上别人才可以访问，我们选用github来托管。首先当然是注册github,注册之后，添加一个Repositories,命名为”&lt;你的github用户名&gt;.github.io”.注册好之后，我们就可以用来托管我们的网页了。前面我们安装的cmder已经安装了git,为了可以使用git,我们还需要初始化git,设置user.name和user.email配置信息,打开cmder,输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure><p>找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制,打开自己github的设置，新建new ssh key,名称可以随便写，再key的一栏输入刚才复制的内容保存即可。</p><h3 id="安装deployer插件"><a href="#安装deployer插件" class="headerlink" title="安装deployer插件"></a>安装deployer插件</h3><p>和此时需要再安装一个插件来deploy我们的网页到github,安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装成功之后，更改blog文件夹里面的_config.yml,里面是我们的配置信息，里面搜索关键字deploy,修改为如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:&lt;your name&gt;/&lt;your name&gt;.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这一步非常重要，格式不正确就会出错，比如type是git,不是github,冒号后面还有一个空格等。此时我们就可以将我们的网页发布到github了。输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment">#清除生成的网页文件</span></span><br><span class="line">hexo g <span class="comment">#生成静态网页</span></span><br><span class="line">hexo d <span class="comment">#发布到github</span></span><br></pre></td></tr></table></figure><p>此时打开对应的网页：https://<your name="">.github.io 就可以看到已经部署成功了。当然，此时网站还只是默认设置，怎么发布新文章，怎么修改主题，变成我们需要的风格呢？接下来介绍一些花里胡哨的功能的实现~</your></p><h2 id="Next主题的配置"><a href="#Next主题的配置" class="headerlink" title="Next主题的配置"></a>Next主题的配置</h2><p>Hexo主题很多，网页上选择非常多，<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 查阅了很多的文章，大家比较推崇的主题是Next，主要是功能齐全，对于不会太多网页编程知识的人来说，最好了。</p><h3 id="Next主题的安装"><a href="#Next主题的安装" class="headerlink" title="Next主题的安装"></a>Next主题的安装</h3><p>找一个文件夹下载主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next.git</span><br></pre></td></tr></table></figure><p>删除掉里面.github的文件之后，复制到我们博客文件的themes文件夹内，里面已经有了一个默认的主题文件landscape.为了使用next主题，我们到站点目录的配置文件_config.yml里面，知道theme那一行，改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>此时，再输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就可一查看我们的新的主题文件了。</p><h3 id="配置个人信息"><a href="#配置个人信息" class="headerlink" title="配置个人信息"></a>配置个人信息</h3><p>为了让博客具有我们的个人风格，我们需要将一些地方改成自己的信息，首先修改站点目录的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: Knifelees3<span class="string">'s blog #博客名字</span></span><br><span class="line"><span class="string">subtitle: #副标题</span></span><br><span class="line"><span class="string">description: #类似于个性签名？</span></span><br><span class="line"><span class="string">keywords: #关键词</span></span><br><span class="line"><span class="string">author: Zhao Hua #作者名字</span></span><br><span class="line"><span class="string">language: zh-CN #语言</span></span><br><span class="line"><span class="string">timezone: #时间轴</span></span><br></pre></td></tr></table></figure><p>然后修改/theme/next/_config.yml文件，里面的内容就更加丰富了，不过都有注释，会点英语的应该都可以看得懂。这篇文章<br><a href="https://zhuanlan.zhihu.com/p/30836436">https://zhuanlan.zhihu.com/p/30836436</a> 也有非常详细的介绍，我就不再赘述。在这里我需要强调的是关于怎么更换头像的问题，貌似新版的语法不一样了，以前的写法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /images/avatar.gif</span><br></pre></td></tr></table></figure><p>但是next 7.0版本却是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">url: /images/avatar.gif</span><br></pre></td></tr></table></figure><p>在这里浪费了好久的时间….</p><h3 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a>添加评论系统</h3><p>评论系统本来貌似蛮多的，不过后来都相继的死掉了，我用的是Valine,在这之前需要注册Leancould,验证邮箱和绑定手机号，然后点击创建应用&gt;开发版，建好之后点击进入到应用中，依次点击设置&gt;应用Key得到AppID和AppKey，这是安全域名，设置自己的网页地址即可。由于next最新版本的主题已经自己集成了Valine，只需要在主题配置文件找到Valine字段，改成下面的形式即可(输入刚才的Leancould的appid,appkey)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># More info available at https://valine.js.org</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment"># When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version.</span></span><br><span class="line">  appid:  <span class="comment"># your leancloud application appid</span></span><br><span class="line">  appkey:   <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  notify: <span class="literal">false</span> <span class="comment"># mail notifier, See: https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  verify: <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  placeholder: Just go go <span class="comment"># comment box placeholder</span></span><br><span class="line">  avatar: mm <span class="comment"># gravatar style</span></span><br><span class="line">  guest_info: nick,mail,<span class="built_in">link</span> <span class="comment"># custom comment header</span></span><br><span class="line">  pageSize: 10 <span class="comment"># pagination size</span></span><br><span class="line">  visitor: <span class="literal">true</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors' for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line">  comment_count: <span class="literal">true</span> <span class="comment"># i</span></span><br></pre></td></tr></table></figure><h3 id="添加阅读统计"><a href="#添加阅读统计" class="headerlink" title="添加阅读统计"></a>添加阅读统计</h3><p>还是使用前面注册的leancloud,插件新的应用，在应用里面新建Class，命名为”Counter”（必须命名为Counter,Next主题才可以识别）,然后和前面的一样，在配置文件搜索Leancloud,加入appid,appkey,如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  app_id: your appid</span><br><span class="line">  app_key: your appkey</span><br><span class="line">  <span class="comment"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line">  <span class="comment"># If you don't care about security in leancloud counter and just want to use it directly</span></span><br><span class="line">  <span class="comment"># (without hexo-leancloud-counter-security plugin), set `security` to `false`.</span></span><br><span class="line">  security: <span class="literal">true</span></span><br><span class="line">  betterPerformance: <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>至此我们的网页就设置好了，一些其他的设置都可以参考这篇博文<br><a href="https://zhuanlan.zhihu.com/p/30836436">https://zhuanlan.zhihu.com/p/30836436</a> </p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>Markdown插入图片，可以通过将图片一起上传到github，这样图片多了，每次发布都会比较慢，所以插入在线的图片最好，图床很多人推荐七牛云，我没有选择这种方式，而是创建了一个新的Repositories,专门用来存放图片，图片的图床地址可以通过在github下载图片得到。需要注意的是，自己的非常注意图片的命名分类，不然以后多了就会难以找到自己想要的图片了。</p><p>以后有新的问题和心得也会在这篇文章里面持续更新。</p><p>(2019 12 21 图床补充)</p><p>这几日发现网络上免费的图床不是特别的多，常见的七牛云需要服务器备案，其他的一些sm.ms之类，没有尝试过，不清楚会不会突然被封。自己的博客是基于github的，要是github没了，自己的网站也就得换地方了。github的好处是容量没有限制，单个文件夹是1G一下，单个文件100M以下，对于我来说，完全足够了。</p><p>咋网络搜索了一圈以后，发现用github做图床的不止我一个，通过学习<a href="https://www.jianshu.com/p/2756724a5dee">教程</a>, 知道还可以配合相关的工具，如<a href="https://github.com/Molunerfinn/PicGo">picgo</a>,实现非常方便的图片上传，我的配置如下图<br><img src="https://raw.githubusercontent.com/knifelees3/my_pictures/master/picgoup/20191221000804.png" alt="配置界面"></p><p>详细的配置说用，可以参见<a href="https://www.jianshu.com/p/2756724a5dee">教程</a></p><h2 id="公式的支持"><a href="#公式的支持" class="headerlink" title="公式的支持"></a>公式的支持</h2><p>(20200226)<br>以前没有写过太多公式不太注意，原来hexo默认的makrdown支持有很多问题，会把一些公式的符号给编译成html的标签，比如“_”会变成”<code>&lt;em&gt;</code>“之类的。网络上搜索之后发现，还是很容易的。</p><p><a href="https://www.jianshu.com/p/7ab21c7f0674">在Hexo中渲染MathJax数学公式</a></p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签，比如在markdown语法中，下划线’_’代表斜体，会被渲染引擎处理为<code>&lt;em&gt;</code>标签。</p><p>因为类Latex格式书写的数学公式下划线 ‘_’ 表示下标，有特殊的含义，如果被强制转换为<code>&lt;em&gt;</code>标签，那么MathJax引擎在渲染数学公式的时候就会出错。例如，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.034ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 899 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>在开始被渲染的时候，处理为<script type="math/tex">x<em>i</em></script>，这样MathJax引擎就认为该公式有语法错误，因为不会渲染。</p><p>类似的语义冲突的符号还包括’*’, ‘{‘, ‘}’, ‘\’等。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>更换Hexo的markdown渲染引擎，<code>hexo-renderer-kramed</code>引擎是在默认的渲染引擎<code>hexo-renderer-marked</code>的基础上修改了一些bug，两者比较接近，也比较轻量级。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>执行上面的命令即可，先卸载原来的渲染引擎，再安装新的。</p><p>然后，跟换引擎后行间公式可以正确渲染了，但是这样还没有完全解决问题，行内公式的渲染还是有问题，因为<code>hexo-renderer-kramed</code>引擎也有语义冲突的问题。接下来到博客根目录下，找到<code>node_modules\kramed\lib\rules\inline.js</code>，把第11行的escape变量的值做相应的修改：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  escape: /^\\([\\`*{}\[\]()#$+\-.!_&gt;])/,</span></span><br><span class="line">  <span class="attr">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure><p>这一步是在原基础上取消了对\,{,}的转义(escape)。<br>同时把第20行的em变量也要做相应的修改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span><br><span class="line">  <span class="attr">em</span>: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br></pre></td></tr></table></figure><p>重新启动hexo（先clean再generate）,问题完美解决。哦，如果不幸还没解决的话，看看是不是还需要在使用的主题中配置mathjax开关。</p><h3 id="在主题中开启mathjax开关"><a href="#在主题中开启mathjax开关" class="headerlink" title="在主题中开启mathjax开关"></a>在主题中开启mathjax开关</h3><p>如何使用了主题了，别忘了在主题（Theme）中开启mathjax开关，下面以next主题为例，介绍下如何打开<code>mathjax</code>开关。</p><p>进入到主题目录，找到<code>_config.yml</code>配置问题，把mathjax默认的<code>false</code>修改为<code>true</code>，具体如下：</p><h3 id="MathJax-Support"><a href="#MathJax-Support" class="headerlink" title="MathJax Support"></a>MathJax Support</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: true</span><br></pre></td></tr></table></figure><p>别着急，这样还不够，还需要在文章的Front-matter里打开mathjax开关，如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: index.html</span><br><span class="line">date: 2016-12-28 21:01:30</span><br><span class="line">tags:</span><br><span class="line"><span class="section">mathjax: true</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>不要嫌麻烦，之所以要在文章头里设置开关，是因为考虑只有在用到公式的页面才加载 Mathjax，这样不需要渲染数学公式的页面的访问速度就不会受到影响了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex技巧-常见特殊字符</title>
      <link href="/2019/02/16/C_%E6%95%99%E7%A8%8B_Latex%E6%8A%80%E5%B7%A7-%E5%B8%B8%E8%A7%81%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/"/>
      <url>/2019/02/16/C_%E6%95%99%E7%A8%8B_Latex%E6%8A%80%E5%B7%A7-%E5%B8%B8%E8%A7%81%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="Latex"><a href="#Latex" class="headerlink" title="Latex"></a>Latex</h1><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Latex是我写一些非常系统化的笔记以及投稿会用到的编译系统，里面的一些基本命令还是很容易记住的，但是有一些特殊字符不是那么容易记住，还有一些其它语言如德文如何使用？我想在这李全部记录下来，免得每次都去翻很长的那个pdf文档</p><h1 id="希腊字母-Greek-Letters"><a href="#希腊字母-Greek-Letters" class="headerlink" title="希腊字母 (Greek Letters)"></a>希腊字母 (Greek Letters)</h1><div class="table-container"><table><thead><tr><th style="text-align:center">symbols</th><th style="text-align:center">Script</th><th style="text-align:center">symbols</th><th style="text-align:center">script</th></tr></thead><tbody><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.697ex" height="1.62ex" role="img" focusable="false" viewBox="0 -716 750 716"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></svg></mjx-container> and  <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.448ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 640 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>A and \alpha</code></td><td style="text-align:center">N,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.199ex" height="1ex" role="img" focusable="false" viewBox="0 -442 530 442"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D708" d="M74 431Q75 431 146 436T219 442Q231 442 231 434Q231 428 185 241L137 51H140L150 55Q161 59 177 67T214 86T261 119T312 165Q410 264 445 394Q458 442 496 442Q509 442 519 434T530 411Q530 390 516 352T469 262T388 162T267 70T106 5Q81 -2 71 -2Q66 -2 59 -1T51 1Q45 5 45 11Q45 13 88 188L132 364Q133 377 125 380T86 385H65Q59 391 59 393T61 412Q65 431 74 431Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>N and \nu</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.717ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 759 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="1.281ex" height="2.034ex" role="img" focusable="false" viewBox="0 -705 566 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>B and \beta</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.509ex" height="1.532ex" role="img" focusable="false" viewBox="0 -677 667 677"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="39E" d="M47 509L55 676Q55 677 333 677T611 676L619 509Q619 508 599 508T579 510Q579 529 575 557T564 589Q550 594 333 594T102 589Q95 586 91 558T87 510Q87 508 67 508T47 509ZM139 260V445H179V394H487V445H527V260H487V311H179V260H139ZM50 0L42 180H62Q82 180 82 178Q82 133 89 105Q92 93 95 90T108 86Q137 83 333 83Q530 83 558 86Q568 87 571 90T577 105Q584 133 584 178Q584 180 604 180H624L616 0H50Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="0.991ex" height="2.057ex" role="img" focusable="false" viewBox="0 -704 438 909"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D709" d="M268 632Q268 704 296 704Q314 704 314 687Q314 682 311 664T308 635T309 620V616H315Q342 619 360 619Q443 619 443 586Q439 548 358 546H344Q326 546 317 549T290 566Q257 550 226 505T195 405Q195 381 201 364T211 342T218 337Q266 347 298 347Q375 347 375 314Q374 297 359 288T327 277T280 275Q234 275 208 283L195 286Q149 260 119 214T88 130Q88 116 90 108Q101 79 129 63T229 20Q238 17 243 15Q337 -21 354 -33Q383 -53 383 -94Q383 -137 351 -171T273 -205Q240 -205 202 -190T158 -167Q156 -163 156 -159Q156 -151 161 -146T176 -140Q182 -140 189 -143Q232 -168 274 -168Q286 -168 292 -165Q313 -151 313 -129Q313 -112 301 -104T232 -75Q214 -68 204 -64Q198 -62 171 -52T136 -38T107 -24T78 -8T56 12T36 37T26 66T21 103Q21 149 55 206T145 301L154 307L148 313Q141 319 136 323T124 338T111 358T103 382T99 413Q99 471 143 524T259 602L271 607Q268 618 268 632Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\Xi and \xi</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.414ex" height="1.538ex" role="img" focusable="false" viewBox="0 -680 625 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="393" d="M128 619Q121 626 117 628T101 631T58 634H25V680H554V676Q556 670 568 560T582 444V440H542V444Q542 445 538 478T523 545T492 598Q454 634 349 634H334Q264 634 249 633T233 621Q232 618 232 339L233 61Q240 54 245 52T270 48T333 46H360V0H348Q324 3 182 3Q51 3 36 0H25V46H58Q100 47 109 49T128 61V619Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="1.229ex" height="1.486ex" role="img" focusable="false" viewBox="0 -441 543 657"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FE" d="M31 249Q11 249 11 258Q11 275 26 304T66 365T129 418T206 441Q233 441 239 440Q287 429 318 386T371 255Q385 195 385 170Q385 166 386 166L398 193Q418 244 443 300T486 391T508 430Q510 431 524 431H537Q543 425 543 422Q543 418 522 378T463 251T391 71Q385 55 378 6T357 -100Q341 -165 330 -190T303 -216Q286 -216 286 -188Q286 -138 340 32L346 51L347 69Q348 79 348 100Q348 257 291 317Q251 355 196 355Q148 355 108 329T51 260Q49 251 47 251Q45 249 31 249Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\Gamma and \gamma</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.726ex" height="1.643ex" role="img" focusable="false" viewBox="0 -704 763 726"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.097ex" height="1.023ex" role="img" focusable="false" viewBox="0 -441 485 452"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>O and o</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.885ex" height="1.62ex" role="img" focusable="false" viewBox="0 -716 833 716"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.005ex" height="1.645ex" role="img" focusable="false" viewBox="0 -717 444 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\Delta and \delta</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.697ex" height="1.538ex" role="img" focusable="false" viewBox="0 -680 750 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="3A0" d="M128 619Q121 626 117 628T101 631T58 634H25V680H724V634H691Q651 633 640 631T622 619V61Q628 51 639 49T691 46H724V0H713Q692 3 569 3Q434 3 425 0H414V46H447Q489 47 498 49T517 61V634H232V348L233 61Q239 51 250 49T302 46H335V0H324Q303 3 180 3Q45 3 36 0H25V46H58Q100 47 109 49T128 61V619Z"></path></g></g></g></svg></mjx-container> ,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.29ex" height="1ex" role="img" focusable="false" viewBox="0 -431 570 442"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.873ex" height="0.998ex" role="img" focusable="false" viewBox="0 -431 828 441"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D71B" d="M206 -10Q158 -10 136 24T114 110Q114 233 199 349L205 358H184Q144 358 121 347Q108 340 95 330T75 312T61 295T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 532 431Q799 431 803 430Q823 423 823 402Q823 377 801 364Q790 358 766 358Q748 358 748 357Q748 355 749 348T752 327T754 297Q754 258 738 207T693 107T618 24T520 -10Q488 -10 466 2T432 36T416 77T411 120Q411 128 410 128T404 122Q373 71 323 31T206 -10ZM714 296Q714 316 707 358H251Q250 357 244 348T230 328T212 301T193 267T176 229T164 187T159 144Q159 62 222 62Q290 62 349 127T432 285Q433 286 434 288T435 291T437 293T440 294T444 294T452 294H466Q472 288 472 286Q472 285 464 244T456 170Q456 62 534 62Q604 62 659 139T714 296Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\Pi ,\pi and \varpi</code></td></tr><tr><td style="text-align:center">E,<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.919ex" height="1ex" role="img" focusable="false" viewBox="0 -431 406 442"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D716" d="M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.072ex" role="img" focusable="false" viewBox="0 -452 466 474"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D700" d="M190 -22Q124 -22 76 11T27 107Q27 174 97 232L107 239L99 248Q76 273 76 304Q76 364 144 408T290 452H302Q360 452 405 421Q428 405 428 392Q428 381 417 369T391 356Q382 356 371 365T338 383T283 392Q217 392 167 368T116 308Q116 289 133 272Q142 263 145 262T157 264Q188 278 238 278H243Q308 278 308 247Q308 206 223 206Q177 206 142 219L132 212Q68 169 68 112Q68 39 201 39Q253 39 286 49T328 72T345 94T362 105Q376 103 376 88Q376 79 365 62T334 26T275 -8T190 -22Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>E,\epsilon and \varepsilon</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.699ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 751 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="1.17ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 517 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70C" d="M58 -216Q25 -216 23 -186Q23 -176 73 26T127 234Q143 289 182 341Q252 427 341 441Q343 441 349 441T359 442Q432 442 471 394T510 276Q510 219 486 165T425 74T345 13T266 -10H255H248Q197 -10 165 35L160 41L133 -71Q108 -168 104 -181T92 -202Q76 -216 58 -216ZM424 322Q424 359 407 382T357 405Q322 405 287 376T231 300Q217 269 193 170L176 102Q193 26 260 26Q298 26 334 62Q367 92 389 158T418 266T424 322Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="1.17ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 517 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D71A" d="M205 -174Q136 -174 102 -153T67 -76Q67 -25 91 85T127 234Q143 289 182 341Q252 427 341 441Q343 441 349 441T359 442Q432 442 471 394T510 276Q510 169 431 80T253 -10Q226 -10 204 -2T169 19T146 44T132 64L128 73Q128 72 124 53T116 5T112 -44Q112 -68 117 -78T150 -95T236 -102Q327 -102 356 -111T386 -154Q386 -166 384 -178Q381 -190 378 -192T361 -194H348Q342 -188 342 -179Q342 -169 315 -169Q294 -169 264 -171T205 -174ZM424 322Q424 359 407 382T357 405Q322 405 287 376T231 300Q221 276 204 217Q188 152 188 116Q188 68 210 47T259 26Q297 26 334 62Q367 92 389 158T418 266T424 322Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>P, \rho and \varrho</code></td></tr></tbody></table></div><h1 id="定界符-（Delimiter）"><a href="#定界符-（Delimiter）" class="headerlink" title="定界符 （Delimiter）"></a>定界符 （Delimiter）</h1><div class="table-container"><table><thead><tr><th style="text-align:center">symbols</th><th style="text-align:center">Script</th><th style="text-align:center">symbols</th><th style="text-align:center">script</th></tr></thead><tbody><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.563ex;" xmlns="http://www.w3.org/2000/svg" width="0.629ex" height="2.26ex" role="img" focusable="false" viewBox="0 -750 278 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\mid</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 500 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>/</code></td></tr><tr><td style="text-align:center">${$</td><td style="text-align:center"><code>\{</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="0.88ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 389 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="27E8" d="M333 -232Q332 -239 327 -244T313 -250Q303 -250 296 -240Q293 -233 202 6T110 250T201 494T296 740Q299 745 306 749L309 750Q312 750 313 750Q331 750 333 732Q333 727 243 489Q152 252 152 250T243 11Q333 -227 333 -232Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\langle</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.437ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="2.007ex" role="img" focusable="false" viewBox="0 -694 500 887"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2191" d="M27 414Q17 414 17 433Q17 437 17 439T17 444T19 447T20 450T22 452T26 453T30 454T36 456Q80 467 120 494T180 549Q227 607 238 678Q240 694 251 694Q259 694 261 684Q261 677 265 659T284 608T320 549Q340 525 363 507T405 479T440 463T467 455T479 451Q483 447 483 433Q483 413 472 413Q467 413 458 416Q342 448 277 545L270 555V-179Q262 -193 252 -193H250H248Q236 -193 230 -179V555L223 545Q192 499 146 467T70 424T27 414Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\uparrow</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="1.005ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 444 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2308" d="M174 734Q178 746 190 750H298H369Q400 750 411 747T422 730T411 713T372 709Q365 709 345 709T310 710H214V-235Q206 -248 196 -250Q192 -250 189 -249T184 -247T180 -244T178 -241T176 -237T174 -234V734Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\lceil</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 500 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2193" d="M473 86Q483 86 483 67Q483 63 483 61T483 56T481 53T480 50T478 48T474 47T470 46T464 44Q428 35 391 14T316 -55T264 -168Q264 -170 263 -173T262 -180T261 -184Q259 -194 251 -194Q242 -194 238 -176T221 -121T180 -49Q169 -34 155 -21T125 2T95 20T67 33T44 42T27 47L21 49Q17 53 17 67Q17 87 28 87Q33 87 42 84Q158 52 223 -45L230 -55V312Q230 391 230 482T229 591Q229 662 231 676T243 693Q244 694 251 694Q264 692 270 679V-55L277 -45Q307 1 353 33T430 76T473 86Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\downarrow</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="1.005ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 444 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\lfloor</code></td></tr><tr><td style="text-align:center">$\</td><td style="text-align:center">$</td><td style="text-align:center">`</td><td style="text-align:center">`</td><td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 500 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="2216" d="M56 731Q56 740 62 745T75 750Q85 750 92 740Q96 733 270 255T444 -231Q444 -239 438 -244T424 -250Q414 -250 407 -240Q404 -236 230 242T56 731Z"></path></g></g></g></svg></mjx-container></td><td><code>\backlash</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 600 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="merror" data-mjx-error="Extra close brace or missing open brace" title="Extra close brace or missing open brace"><rect data-background="true" width="600" height="950" y="-200"></rect><title>Extra close brace or missing open brace</title><g data-mml-node="mtext" style="font-family: serif;"><text data-variant="-explicitFont" transform="scale(1,-1)" font-size="884px">}</text></g></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\}</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="1.005ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 444 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2309" d="M21 717T21 730T32 746T75 750H147H256Q266 742 269 735V-235Q262 -248 251 -250Q247 -250 244 -249T239 -247T235 -244T233 -241T231 -237T229 -234V710H133Q119 710 99 710T71 709Q43 709 32 713Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\recil</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="1.382ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 611 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="21D1" d="M228 -179Q227 -180 226 -182T223 -186T221 -189T218 -192T214 -193T208 -194Q196 -194 189 -181L188 125V430L176 419Q122 369 59 338Q46 330 40 330Q38 330 31 337V350Q31 362 33 365T46 374Q60 381 77 390T128 426T190 484T247 567T292 677Q295 688 298 692Q302 694 305 694Q313 694 318 677Q334 619 363 568T420 485T481 427T532 391T564 374Q575 368 577 365T579 350V337Q572 330 570 330Q564 330 551 338Q487 370 435 419L423 430L422 125V-181Q409 -194 401 -194Q397 -194 394 -193T388 -189T385 -184T382 -180V-177V475L373 487Q331 541 305 602Q304 601 300 591T290 571T278 548T260 519T238 488L229 476L228 148V-179Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\Uparrow</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="1.005ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 444 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\rfloor</code></td></tr><tr><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="1.382ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 611 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="21D3" d="M401 694Q412 694 422 681V375L423 70L435 81Q487 130 551 162Q564 170 570 170Q572 170 579 163V150Q579 138 577 135T564 126Q541 114 518 99T453 48T374 -46T318 -177Q313 -194 305 -194T293 -178T272 -119T225 -31Q158 70 46 126Q35 132 33 135T31 150V163Q38 170 40 170Q46 170 59 162Q122 131 176 81L188 70V375L189 681Q199 694 208 694Q219 694 228 680V352L229 25L238 12Q279 -42 305 -102Q344 -23 373 13L382 25V678Q387 692 401 694Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\Downarrow</code></td><td style="text-align:center"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="0.88ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 389 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="27E9" d="M55 732Q56 739 61 744T75 750Q85 750 92 740Q95 733 186 494T278 250T187 6T92 -240Q85 -250 75 -250Q67 -250 62 -245T55 -232Q55 -227 145 11Q236 248 236 250T145 489Q55 727 55 732Z"></path></g></g></g></svg></mjx-container></td><td style="text-align:center"><code>\rangle</code></td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
